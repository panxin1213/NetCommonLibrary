<?xml version="1.0"?>
<doc>
  <assembly>
    <name>Aspose.Imaging</name>
  </assembly>
  <members>
    <member name="T:Aspose.Imaging.License">
      <summary>
            Provides methods to license the component.
            </summary>
      <example>
            In this example, an attempt will be made to find a license file named MyLicense.lic
            in the folder that contains 
            
            
            the component, in the folder that contains the calling assembly,
            in the folder of the entry assembly and then in the embedded resources of the calling assembly.
            <code>
            [C#]
            
            License license = new License();
            license.SetLicense("MyLicense.lic");
            
            
            [Visual Basic]
            
            Dim license As license = New license
            License.SetLicense("MyLicense.lic")
            </code></example>
    </member>
    <member name="M:Aspose.Imaging.License.SetLicense(System.String)">
      <summary>
            Licenses the component.
            </summary>
      <remarks>
        <p>Tries to find the license in the following locations:</p>
        <p>1. Explicit path.</p>
        <p>2. The folder that contains the Aspose component assembly.</p>
        <p>3. The folder that contains the client's calling assembly.</p>
        <p>4. The folder that contains the entry (startup) assembly.</p>
        <p>5. An embedded resource in the client's calling assembly.</p>
        <p>
          <b>Note:</b>On the .NET Compact Framework, tries to find the license only in these locations:</p>
        <p>1. Explicit path.</p>
        <p>2. An embedded resource in the client's calling assembly.</p>
      </remarks>
      <example>
            In this example, an attempt will be made to find a license file named MyLicense.lic
            in the folder that contains 
            
            
            the component, in the folder that contains the calling assembly,
            in the folder of the entry assembly and then in the embedded resources of the calling assembly.
            <code>
            [C#]
            
            License license = new License();
            license.SetLicense("MyLicense.lic");
            
            
            [Visual Basic]
            
            Dim license As License = New License
            license.SetLicense("MyLicense.lic")
            </code><param name="licenseName">Can be a full or short file name or name of an embedded resource.
            Use an empty string to switch to evaluation mode.</param></example>
    </member>
    <member name="M:Aspose.Imaging.License.SetLicense(System.IO.Stream)">
      <summary>
            Licenses the component.
            </summary>
      <param name="stream">A stream that contains the license.</param>
      <remarks>
        <p>Use this method to load a license from a stream.</p>
      </remarks>
      <example>
        <code>
            [C#]
            
            License license = new License();
            license.SetLicense(myStream);
            
            
            [Visual Basic]
            
            Dim license as License = new License
            license.SetLicense(myStream)
            </code>
      </example>
    </member>
    <member name="P:Aspose.Imaging.License.IsLicensed">
      <summary>
            Gets a value indicating whether product is licensed.
            </summary>
      <value>
        <c>true</c> if product is licensed; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="T:Aspose.Imaging.IPartialPixelLoader">
      <summary>
            Conforms to the pixels loaded partially.
            </summary>
    </member>
    <member name="M:Aspose.Imaging.IPartialPixelLoader.Process(Aspose.Imaging.Rectangle,Aspose.Imaging.Color[],Aspose.Imaging.Point,Aspose.Imaging.Point)">
      <summary>
            Processes the loaded pixels.
            </summary>
      <param name="pixelsRectangle">The pixels rectangle.</param>
      <param name="pixels">The pixels.</param>
      <param name="start">The start pixels point. If not equal to (left,top) meaning that it is not full rectangle we have.</param>
      <param name="end">The end pixels point. If not equal to (right,bottom) meaning that it is not full rectangle we have.</param>
    </member>
    <member name="T:Aspose.Imaging.Blend">
      <summary>
            Defines a blend pattern. This class cannot be inherited.
            </summary>
      <remarks>
            The typical blend class usage is defining a blend pattern for brush. And thus the blend properties should be initialized carefully.
            Null arrays are not allowed. The brush will throw the appropriate exception if blend factors or positions array are empty or their length is not the same.
            If there are two or more elements in the positions array then the first element should be 0 and the last should be 1.
            </remarks>
    </member>
    <member name="M:Aspose.Imaging.Blend.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.Blend" /> class. The number of elements in the factor and blend arrays will be equal to 1.
            </summary>
    </member>
    <member name="M:Aspose.Imaging.Blend.#ctor(System.Int32)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.Blend" /> class with the specified number of factors and positions.
            </summary>
      <param name="count">The number of elements in the factor and position arrays.</param>
    </member>
    <member name="M:Aspose.Imaging.Blend.op_Equality(Aspose.Imaging.Blend,Aspose.Imaging.Blend)">
      <summary>
            Tests whether two specified <see cref="T:Aspose.Imaging.Blend" /> classes are different.
            </summary>
      <param name="blend1">The <see cref="T:Aspose.Imaging.Blend" /> that is to the left of the inequality operator.</param>
      <param name="blend2">The <see cref="T:Aspose.Imaging.Blend" /> that is to the right of the inequality operator.</param>
      <returns>True if the two <see cref="T:Aspose.Imaging.Blend" /> classes are different; otherwise, false.</returns>
    </member>
    <member name="M:Aspose.Imaging.Blend.op_Inequality(Aspose.Imaging.Blend,Aspose.Imaging.Blend)">
      <summary>
            Tests whether two specified <see cref="T:Aspose.Imaging.Blend" /> classes are equivalent.
            </summary>
      <param name="blend1">The <see cref="T:Aspose.Imaging.Blend" /> that is to the left of the equality operator.</param>
      <param name="blend2">The <see cref="T:Aspose.Imaging.Blend" /> that is to the right of the equality operator.</param>
      <returns>True if the two <see cref="T:Aspose.Imaging.Blend" /> classes are equal; otherwise, false.</returns>
    </member>
    <member name="M:Aspose.Imaging.Blend.Equals(System.Object)">
      <summary>
            Tests whether the specified object is a <see cref="T:Aspose.Imaging.Blend" /> class and is equivalent to this <see cref="T:Aspose.Imaging.Blend" /> class.
            </summary>
      <param name="obj">The object to test.</param>
      <returns>True if <paramref name="obj" /> is a <see cref="T:Aspose.Imaging.Blend" /> class equivalent to this <see cref="T:Aspose.Imaging.Blend" /> class; otherwise, false.</returns>
    </member>
    <member name="M:Aspose.Imaging.Blend.GetHashCode">
      <summary>
            Returns a hash code for this instance.
            </summary>
      <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
    </member>
    <member name="P:Aspose.Imaging.Blend.Factors">
      <summary>
            Gets or sets the array of blend factors for the gradient.
            </summary>
      <value>The array of blend factors that specify the percentages of the starting color and the ending color to be used at the corresponding position.</value>
    </member>
    <member name="P:Aspose.Imaging.Blend.Positions">
      <summary>
            Gets or sets the array of blend positions for the gradient.
            </summary>
      <value>The array of blend positions that specify the percentages of distance along the gradient line.</value>
    </member>
    <member name="T:Aspose.Imaging.Brush">
      <summary>
            The base brush class.
            </summary>
    </member>
    <member name="T:Aspose.Imaging.DisposableObject">
      <summary>
            Represents disposable object.
            </summary>
    </member>
    <member name="M:Aspose.Imaging.DisposableObject.Dispose">
      <summary>
            Disposes the current instance.
            </summary>
    </member>
    <member name="M:Aspose.Imaging.DisposableObject.ReleaseManagedResources">
      <summary>
            Releases the managed resources. Make sure no unmanaged resources are released here, since they may have been already released.
            </summary>
    </member>
    <member name="M:Aspose.Imaging.DisposableObject.ReleaseUnmanagedResources">
      <summary>
            Releases the unmanaged resources. Make sure no managed resources are released here, since they may have been already released.
            </summary>
    </member>
    <member name="M:Aspose.Imaging.DisposableObject.VerifyNotDisposed">
      <summary>
            Verifies that the current instance is not disposed.
            </summary>
    </member>
    <member name="P:Aspose.Imaging.DisposableObject.Disposed">
      <summary>
            Gets a value indicating whether this instance is disposed.
            </summary>
      <value>
        <c>true</c> if disposed; otherwise, <c>false</c>.</value>
    </member>
    <member name="M:Aspose.Imaging.Brush.DeepClone">
      <summary>
            Creates a new deep clone of the current <see cref="T:Aspose.Imaging.Brush" />.
            </summary>
      <returns>A new <see cref="T:Aspose.Imaging.Brush" /> which is the deep clone of this <see cref="T:Aspose.Imaging.Brush" /> instance.</returns>
    </member>
    <member name="P:Aspose.Imaging.Brush.Opacity">
      <summary>
            Gets or sets the brush opacity. The value should be between 0 and 1. Value of 0 means that brush is fully visible, value of 1 means the brush is fully opaque.
            </summary>
      <value>The brush opacity value.</value>
    </member>
    <member name="T:Aspose.Imaging.Brushes.HatchBrush">
      <summary>
            Defines a rectangular brush with a hatch style, a foreground color, and a background color. This class cannot be inherited.
            </summary>
      <example>This example shows the creation and usage Pen objects. The example creates a new Image and draw Rectangles on Image surface.<code>[C#]

//Create an instance of BmpOptions and set its various properties
Aspose.Imaging.ImageOptions.BmpOptions bmpOptions = new Aspose.Imaging.ImageOptions.BmpOptions();
bmpOptions.BitsPerPixel = 24;
    
// create a new source based on memory stream.
bmpOptions.Source = new Aspose.Imaging.Sources.StreamSource(new System.IO.MemoryStream(), true);

//Create an instance of Image
using (Aspose.Imaging.Image image = Aspose.Imaging.Image.Create(bmpOptions, 500, 500))
{
    //Create an instance of Graphics and initialize it with Image object
    Aspose.Imaging.Graphics graphics = new Aspose.Imaging.Graphics(image);

    //Clear the Graphics sutface with White Color
    graphics.Clear(Aspose.Imaging.Color.White);

    //Create an instance of Pen with color Red and width 5
    Aspose.Imaging.Pen pen = new Pen(Aspose.Imaging.Color.Red, 5);

    //Create an instance of HatchBrush and set its properties
    Aspose.Imaging.Brushes.HatchBrush brush = new HatchBrush();
    brush.BackgroundColor = Color.Wheat;
    brush.ForegroundColor = Color.Red;

    //Create an instance of Pen
    //initialize it with HatchBrush object and width
    Aspose.Imaging.Pen brusedpen = new Pen(brush, 5);

    //Draw Rectangles by specifying Pen object
    graphics.DrawRectangles(pen, new[] { new Rectangle(new Point(210, 210), new Size(100, 100)), new Rectangle(new Point(110, 110), new Size(100, 100)), new Rectangle(new Point(310, 310), new Size(100, 100)) });

    //Draw Rectangles by specifying Pen object
    graphics.DrawRectangles(brusedpen, new[] { new Rectangle(new Point(310, 110), new Size(100, 100)), new Rectangle(new Point(110, 310), new Size(100, 100)) });

    // save all changes.
    image.Save();
}</code><code>[Visual Basic]

'Create an instance of BmpOptions and set its various properties
Dim bmpOptions As Aspose.Imaging.ImageOptions.BmpOptions = New Aspose.Imaging.ImageOptions.BmpOptions()
bmpOptions.BitsPerPixel = 24

' create a new source based on memory stream.
bmpOptions.Source = New Aspose.Imaging.Sources.StreamSource(New System.IO.MemoryStream(), True)

'Create an instance of Image
Using image As Aspose.Imaging.Image = Aspose.Imaging.Image.Create(bmpOptions, 500, 500)
'Create an instance of Graphics and initialize it with Image object
Dim graphics As Aspose.Imaging.Graphics = New Aspose.Imaging.Graphics(image)

'Clear the Graphics sutface with White Color
    graphics.Clear(Aspose.Imaging.Color.White)

'Create an instance of Pen with color Red and width 5
Dim pen As Aspose.Imaging.Pen = New Pen(Aspose.Imaging.Color.Red, 5)

'Create an instance of HatchBrush and set its properties
Dim brush As Aspose.Imaging.Brushes.HatchBrush = New HatchBrush()
    brush.BackgroundColor = Color.Wheat
    brush.ForegroundColor = Color.Red

'Create an instance of Pen
'initialize it with HatchBrush object and width
Dim brusedpen As Aspose.Imaging.Pen = New Pen(brush, 5)

'Draw Rectangles by specifying Pen object
    graphics.DrawRectangles(pen, New() { New Rectangle(New Point(210, 210), New Size(100, 100)), New Rectangle(New Point(110, 110), New Size(100, 100)), New Rectangle(New Point(310, 310), New Size(100, 100)) })

'Draw Rectangles by specifying Pen object
    graphics.DrawRectangles(brusedpen, New() { New Rectangle(New Point(310, 110), New Size(100, 100)), New Rectangle(New Point(110, 310), New Size(100, 100)) })

' save all changes.
    image.Save()
End Using</code></example>
    </member>
    <member name="P:Aspose.Imaging.Brushes.HatchBrush.ForegroundColor">
      <summary>
            Gets or sets the color of hatch lines.
            </summary>
      <value>The color of hatch lines.</value>
    </member>
    <member name="P:Aspose.Imaging.Brushes.HatchBrush.BackgroundColor">
      <summary>
            Gets or sets the color of spaces between the hatch lines.
            </summary>
      <value>The color of spaces between the hatch lines.</value>
    </member>
    <member name="P:Aspose.Imaging.Brushes.HatchBrush.HatchStyle">
      <summary>
            Gets or sets the hatch style of this brush.
            </summary>
    </member>
    <member name="T:Aspose.Imaging.Brushes.LinearGradientBrush">
      <summary>
            Encapsulates a <see cref="T:Aspose.Imaging.Brush" /> with a linear gradient. This class cannot be inherited.
            </summary>
    </member>
    <member name="T:Aspose.Imaging.Brushes.LinearGradientBrushBase">
      <summary>
            Represents a <see cref="T:Aspose.Imaging.Brush" /> with gradient capabilities and appropriate properties.
            </summary>
    </member>
    <member name="T:Aspose.Imaging.Brushes.TransformBrush">
      <summary>
            A <see cref="T:Aspose.Imaging.Brush" /> with transform capabilities.
            </summary>
    </member>
    <member name="M:Aspose.Imaging.Brushes.TransformBrush.ResetTransform">
      <summary>
            Resets the <see cref="P:Aspose.Imaging.Brushes.TransformBrush.Transform" /> property to identity.
            </summary>
    </member>
    <member name="M:Aspose.Imaging.Brushes.TransformBrush.MultiplyTransform(Aspose.Imaging.Matrix)">
      <summary>
            Multiplies the <see cref="T:Aspose.Imaging.Matrix" /> that represents the local geometric transform of this <see cref="T:Aspose.Imaging.Brushes.LinearGradientBrush" /> by the specified <see cref="T:Aspose.Imaging.Matrix" /> by prepending the specified <see cref="T:Aspose.Imaging.Matrix" />.
            </summary>
      <param name="matrix">The <see cref="T:Aspose.Imaging.Matrix" /> by which to multiply the geometric transform.</param>
    </member>
    <member name="M:Aspose.Imaging.Brushes.TransformBrush.MultiplyTransform(Aspose.Imaging.Matrix,Aspose.Imaging.MatrixOrder)">
      <summary>
            Multiplies the <see cref="T:Aspose.Imaging.Matrix" /> that represents the local geometric transform of this <see cref="T:Aspose.Imaging.Brushes.LinearGradientBrush" /> by the specified <see cref="T:Aspose.Imaging.Matrix" /> in the specified order.
            </summary>
      <param name="matrix">The <see cref="T:Aspose.Imaging.Matrix" /> by which to multiply the geometric transform.</param>
      <param name="order">A <see cref="T:Aspose.Imaging.MatrixOrder" /> that specifies in which order to multiply the two matrices.</param>
    </member>
    <member name="M:Aspose.Imaging.Brushes.TransformBrush.TranslateTransform(System.Single,System.Single)">
      <summary>
            Translates the local geometric transform by the specified dimensions. This method prepends the translation to the transform.
            </summary>
      <param name="dx">The value of the translation in x.</param>
      <param name="dy">The value of the translation in y.</param>
    </member>
    <member name="M:Aspose.Imaging.Brushes.TransformBrush.TranslateTransform(System.Single,System.Single,Aspose.Imaging.MatrixOrder)">
      <summary>
            Translates the local geometric transform by the specified dimensions in the specified order.
            </summary>
      <param name="dx">The value of the translation in x.</param>
      <param name="dy">The value of the translation in y.</param>
      <param name="order">The order (prepend or append) in which to apply the translation.</param>
    </member>
    <member name="M:Aspose.Imaging.Brushes.TransformBrush.ScaleTransform(System.Single,System.Single)">
      <summary>
            Scales the local geometric transform by the specified amounts. This method prepends the scaling matrix to the transform.
            </summary>
      <param name="sx">The amount by which to scale the transform in the x-axis direction.</param>
      <param name="sy">The amount by which to scale the transform in the y-axis direction.</param>
    </member>
    <member name="M:Aspose.Imaging.Brushes.TransformBrush.ScaleTransform(System.Single,System.Single,Aspose.Imaging.MatrixOrder)">
      <summary>
            Scales the local geometric transform by the specified amounts in the specified order.
            </summary>
      <param name="sx">The amount by which to scale the transform in the x-axis direction.</param>
      <param name="sy">The amount by which to scale the transform in the y-axis direction.</param>
      <param name="order">A <see cref="T:Aspose.Imaging.MatrixOrder" /> that specifies whether to append or prepend the scaling matrix.</param>
    </member>
    <member name="M:Aspose.Imaging.Brushes.TransformBrush.RotateTransform(System.Single)">
      <summary>
            Rotates the local geometric transform by the specified amount. This method prepends the rotation to the transform.
            </summary>
      <param name="angle">The angle of rotation.</param>
    </member>
    <member name="M:Aspose.Imaging.Brushes.TransformBrush.RotateTransform(System.Single,Aspose.Imaging.MatrixOrder)">
      <summary>
            Rotates the local geometric transform by the specified amount in the specified order.
            </summary>
      <param name="angle">The angle of rotation.</param>
      <param name="order">A <see cref="T:Aspose.Imaging.MatrixOrder" /> that specifies whether to append or prepend the rotation matrix.</param>
    </member>
    <member name="P:Aspose.Imaging.Brushes.TransformBrush.WrapMode">
      <summary>
            Gets or sets a <see cref="T:Aspose.Imaging.WrapMode" /> enumeration that indicates the wrap mode for this <see cref="T:Aspose.Imaging.Brushes.TransformBrush" />.
            </summary>
      <returns>A <see cref="T:Aspose.Imaging.WrapMode" /> that specifies how fills drawn with this <see cref="T:Aspose.Imaging.Brushes.TransformBrush" /> are tiled.</returns>
    </member>
    <member name="P:Aspose.Imaging.Brushes.TransformBrush.Transform">
      <summary>
            Gets or sets a copy <see cref="T:Aspose.Imaging.Matrix" /> that defines a local geometric transform for this <see cref="T:Aspose.Imaging.Brushes.TransformBrush" />.
            </summary>
      <returns>A copy of the <see cref="T:Aspose.Imaging.Matrix" /> that defines a geometric transform that applies only to fills drawn with this <see cref="T:Aspose.Imaging.Brushes.TransformBrush" />.</returns>
    </member>
    <member name="P:Aspose.Imaging.Brushes.TransformBrush.IsTransformChanged">
      <summary>
            Gets a value indicating whether transformations were changed in some way. For example setting the transformation matrix or
            calling any of the methods altering the transformation matrix. The property is introduced for backward compatibility with GDI+.
            </summary>
      <value>
        <c>True</c> if transformation was changed; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="M:Aspose.Imaging.Brushes.LinearGradientBrushBase.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.Brushes.LinearGradientBrushBase" /> class with default parameters.
            The angle is 45 degrees and the rectangle is located in (0,0) with size (1,1).
            </summary>
    </member>
    <member name="M:Aspose.Imaging.Brushes.LinearGradientBrushBase.#ctor(Aspose.Imaging.Point,Aspose.Imaging.Point)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.Brushes.LinearGradientBrushBase" /> class. The gradient rectangle is calculated from the specified points.
            </summary>
      <param name="point1">A <see cref="T:Aspose.Imaging.Point" /> structure that represents the starting point of the linear gradient.</param>
      <param name="point2">A <see cref="T:Aspose.Imaging.Point" /> structure that represents the endpoint of the linear gradient.</param>
    </member>
    <member name="M:Aspose.Imaging.Brushes.LinearGradientBrushBase.#ctor(Aspose.Imaging.PointF,Aspose.Imaging.PointF)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.Brushes.LinearGradientBrushBase" /> class. The gradient rectangle is calculated from the specified points.
            </summary>
      <param name="point1">A <see cref="T:Aspose.Imaging.PointF" /> structure that represents the starting point of the linear gradient.</param>
      <param name="point2">A <see cref="T:Aspose.Imaging.PointF" /> structure that represents the endpoint of the linear gradient.</param>
    </member>
    <member name="M:Aspose.Imaging.Brushes.LinearGradientBrushBase.#ctor(Aspose.Imaging.Rectangle,System.Single,System.Boolean)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.Brushes.LinearGradientBrushBase" /> class based on a rectangle and an orientation angle.
            </summary>
      <param name="rect">A <see cref="T:Aspose.Imaging.RectangleF" /> structure that specifies the bounds of the linear gradient.</param>
      <param name="angle">The angle, measured in degrees clockwise from the x-axis, of the gradient's orientation line.</param>
      <param name="isAngleScalable">if set to <c>true</c> the angle is changed during transformations applied to this <see cref="T:Aspose.Imaging.Brushes.LinearGradientBrushBase" />.</param>
    </member>
    <member name="M:Aspose.Imaging.Brushes.LinearGradientBrushBase.#ctor(Aspose.Imaging.RectangleF,System.Single,System.Boolean)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.Brushes.LinearGradientBrushBase" /> class based on a rectangle, starting and ending colors, and an orientation angle.
            </summary>
      <param name="rect">A <see cref="T:Aspose.Imaging.RectangleF" /> structure that specifies the bounds of the linear gradient.</param>
      <param name="angle">The angle, measured in degrees clockwise from the x-axis, of the gradient's orientation line.</param>
      <param name="isAngleScalable">if set to <c>true</c> the angle is changed during transformations with this <see cref="T:Aspose.Imaging.Brushes.LinearGradientBrushBase" />.</param>
    </member>
    <member name="P:Aspose.Imaging.Brushes.LinearGradientBrushBase.Rectangle">
      <summary>
            Gets or sets a rectangular region that defines the starting and ending points of the gradient.
            </summary>
      <value>A <see cref="T:Aspose.Imaging.RectangleF" /> structure that specifies the starting and ending points of the gradient.</value>
    </member>
    <member name="P:Aspose.Imaging.Brushes.LinearGradientBrushBase.Angle">
      <summary>
            Gets or sets the gradient angle.
            </summary>
      <value>The gradient angle.</value>
    </member>
    <member name="P:Aspose.Imaging.Brushes.LinearGradientBrushBase.IsAngleScalable">
      <summary>
            Gets or sets a value indicating whether <see cref="P:Aspose.Imaging.Brushes.LinearGradientBrushBase.Angle" /> is changed during trasnformations with this <see cref="T:Aspose.Imaging.Brushes.LinearGradientBrushBase" />.
            </summary>
      <value>
        <c>true</c> if <see cref="P:Aspose.Imaging.Brushes.LinearGradientBrushBase.Angle" /> is changed during transformations with this <see cref="T:Aspose.Imaging.Brushes.LinearGradientBrushBase" />; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Aspose.Imaging.Brushes.LinearGradientBrushBase.GammaCorrection">
      <summary>
            Gets or sets a value indicating whether gamma correction is enabled for this <see cref="T:Aspose.Imaging.Brushes.LinearGradientBrushBase" />.
            </summary>
      <value>The value is true if gamma correction is enabled for this <see cref="T:Aspose.Imaging.Brushes.LinearGradientBrushBase" />; otherwise, false.</value>
    </member>
    <member name="M:Aspose.Imaging.Brushes.LinearGradientBrush.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.Brushes.LinearGradientBrush" /> class with default parameters.
            The starting color is black, the ending color is white, the angle is 45 degrees and the rectangle is located in (0,0) with size (1,1).
            </summary>
    </member>
    <member name="M:Aspose.Imaging.Brushes.LinearGradientBrush.#ctor(Aspose.Imaging.Point,Aspose.Imaging.Point,Aspose.Imaging.Color,Aspose.Imaging.Color)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.Brushes.LinearGradientBrush" /> class with the specified points and colors.
            </summary>
      <param name="point1">A <see cref="T:Aspose.Imaging.Point" /> structure that represents the starting point of the linear gradient.</param>
      <param name="point2">A <see cref="T:Aspose.Imaging.Point" /> structure that represents the endpoint of the linear gradient.</param>
      <param name="color1">A <see cref="T:Aspose.Imaging.Color" /> structure that represents the starting color of the linear gradient.</param>
      <param name="color2">A <see cref="T:Aspose.Imaging.Color" /> structure that represents the ending color of the linear gradient.</param>
    </member>
    <member name="M:Aspose.Imaging.Brushes.LinearGradientBrush.#ctor(Aspose.Imaging.PointF,Aspose.Imaging.PointF,Aspose.Imaging.Color,Aspose.Imaging.Color)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.Brushes.LinearGradientBrush" /> class with the specified points and colors.
            </summary>
      <param name="point1">A <see cref="T:Aspose.Imaging.PointF" /> structure that represents the starting point of the linear gradient.</param>
      <param name="point2">A <see cref="T:Aspose.Imaging.PointF" /> structure that represents the endpoint of the linear gradient.</param>
      <param name="color1">A <see cref="T:Aspose.Imaging.Color" /> structure that represents the starting color of the linear gradient.</param>
      <param name="color2">A <see cref="T:Aspose.Imaging.Color" /> structure that represents the ending color of the linear gradient.</param>
    </member>
    <member name="M:Aspose.Imaging.Brushes.LinearGradientBrush.#ctor(Aspose.Imaging.Rectangle,Aspose.Imaging.Color,Aspose.Imaging.Color,System.Single)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.Brushes.LinearGradientBrush" /> class based on a rectangle, starting and ending colors, and an orientation angle.
            </summary>
      <param name="rect">A <see cref="T:Aspose.Imaging.RectangleF" /> structure that specifies the bounds of the linear gradient.</param>
      <param name="color1">A <see cref="T:Aspose.Imaging.Color" /> structure that represents the starting color for the gradient.</param>
      <param name="color2">A <see cref="T:Aspose.Imaging.Color" /> structure that represents the ending color for the gradient.</param>
      <param name="angle">The angle, measured in degrees clockwise from the x-axis, of the gradient's orientation line.</param>
    </member>
    <member name="M:Aspose.Imaging.Brushes.LinearGradientBrush.#ctor(Aspose.Imaging.RectangleF,Aspose.Imaging.Color,Aspose.Imaging.Color,System.Single)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.Brushes.LinearGradientBrush" /> class based on a rectangle, starting and ending colors, and an orientation angle.
            </summary>
      <param name="rect">A <see cref="T:Aspose.Imaging.RectangleF" /> structure that specifies the bounds of the linear gradient.</param>
      <param name="color1">A <see cref="T:Aspose.Imaging.Color" /> structure that represents the starting color for the gradient.</param>
      <param name="color2">A <see cref="T:Aspose.Imaging.Color" /> structure that represents the ending color for the gradient.</param>
      <param name="angle">The angle, measured in degrees clockwise from the x-axis, of the gradient's orientation line.</param>
    </member>
    <member name="M:Aspose.Imaging.Brushes.LinearGradientBrush.#ctor(Aspose.Imaging.Rectangle,Aspose.Imaging.Color,Aspose.Imaging.Color,System.Single,System.Boolean)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.Brushes.LinearGradientBrush" /> class based on a rectangle, starting and ending colors, and an orientation angle.
            </summary>
      <param name="rect">A <see cref="T:Aspose.Imaging.RectangleF" /> structure that specifies the bounds of the linear gradient.</param>
      <param name="color1">A <see cref="T:Aspose.Imaging.Color" /> structure that represents the starting color for the gradient.</param>
      <param name="color2">A <see cref="T:Aspose.Imaging.Color" /> structure that represents the ending color for the gradient.</param>
      <param name="angle">The angle, measured in degrees clockwise from the x-axis, of the gradient's orientation line.</param>
      <param name="isAngleScalable">if set to <c>true</c> the angle is changed during transformations with this <see cref="T:Aspose.Imaging.Brushes.LinearGradientBrush" />.</param>
    </member>
    <member name="M:Aspose.Imaging.Brushes.LinearGradientBrush.#ctor(Aspose.Imaging.RectangleF,Aspose.Imaging.Color,Aspose.Imaging.Color,System.Single,System.Boolean)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.Brushes.LinearGradientBrush" /> class based on a rectangle, starting and ending colors, and an orientation angle.
            </summary>
      <param name="rect">A <see cref="T:Aspose.Imaging.RectangleF" /> structure that specifies the bounds of the linear gradient.</param>
      <param name="color1">A <see cref="T:Aspose.Imaging.Color" /> structure that represents the starting color for the gradient.</param>
      <param name="color2">A <see cref="T:Aspose.Imaging.Color" /> structure that represents the ending color for the gradient.</param>
      <param name="angle">The angle, measured in degrees clockwise from the x-axis, of the gradient's orientation line.</param>
      <param name="isAngleScalable">if set to <c>true</c> the angle is changed during transformations with this <see cref="T:Aspose.Imaging.Brushes.LinearGradientBrush" />.</param>
    </member>
    <member name="M:Aspose.Imaging.Brushes.LinearGradientBrush.SetSigmaBellShape(System.Single)">
      <summary>
            Creates a gradient falloff based on a bell-shaped curve.
            </summary>
      <param name="focus">A value from 0 through 1 that specifies the center of the gradient (the point where the starting color and ending color are blended equally).</param>
    </member>
    <member name="M:Aspose.Imaging.Brushes.LinearGradientBrush.SetSigmaBellShape(System.Single,System.Single)">
      <summary>
            Creates a gradient falloff based on a bell-shaped curve.
            </summary>
      <param name="focus">A value from 0 through 1 that specifies the center of the gradient (the point where the gradient is composed of only the ending color).</param>
      <param name="scale">A value from 0 through 1 that specifies how fast the colors falloff from the <paramref name="focus" />.</param>
    </member>
    <member name="M:Aspose.Imaging.Brushes.LinearGradientBrush.SetBlendTriangularShape(System.Single)">
      <summary>
            Creates a linear gradient with a center color and a linear falloff to a single color on both ends.
            </summary>
      <param name="focus">A value from 0 through 1 that specifies the center of the gradient (the point where the gradient is composed of only the ending color).</param>
    </member>
    <member name="M:Aspose.Imaging.Brushes.LinearGradientBrush.SetBlendTriangularShape(System.Single,System.Single)">
      <summary>
            Creates a linear gradient with a center color and a linear falloff to a single color on both ends.
            </summary>
      <param name="focus">A value from 0 through 1 that specifies the center of the gradient (the point where the gradient is composed of only the ending color).</param>
      <param name="scale">A value from 0 through1 that specifies how fast the colors falloff from the starting color to <paramref name="focus" /> (ending color)</param>
    </member>
    <member name="P:Aspose.Imaging.Brushes.LinearGradientBrush.InterpolationColors">
      <summary>
            Gets or sets a <see cref="T:Aspose.Imaging.ColorBlend" /> that defines a multicolor linear gradient.
            </summary>
      <value>A <see cref="T:Aspose.Imaging.ColorBlend" /> that defines a multicolor linear gradient.</value>
    </member>
    <member name="P:Aspose.Imaging.Brushes.LinearGradientBrush.LinearColors">
      <summary>
            Gets or sets the starting and ending colors of the gradient.
            </summary>
      <value>An array of two <see cref="T:Aspose.Imaging.Color" /> structures that represents the starting and ending colors of the gradient.</value>
    </member>
    <member name="P:Aspose.Imaging.Brushes.LinearGradientBrush.StartColor">
      <summary>
            Gets or sets the starting gradient color.
            </summary>
      <value>The starting gradient color.</value>
    </member>
    <member name="P:Aspose.Imaging.Brushes.LinearGradientBrush.EndColor">
      <summary>
            Gets or sets the ending gradient color.
            </summary>
      <value>The ending gradient color.</value>
    </member>
    <member name="P:Aspose.Imaging.Brushes.LinearGradientBrush.Blend">
      <summary>
            Gets or sets a <see cref="T:Aspose.Imaging.Blend" /> that specifies positions and factors that define a custom falloff for the gradient.
            </summary>
      <value>A <see cref="T:Aspose.Imaging.Blend" /> that represents a custom falloff for the gradient.</value>
    </member>
    <member name="T:Aspose.Imaging.Brushes.LinearMulticolorGradientBrush">
      <summary>
            Represents a <see cref="T:Aspose.Imaging.Brush" /> with linear gradient defined by multiple colors and appropriate positions. This class cannot be inherited.
            </summary>
    </member>
    <member name="M:Aspose.Imaging.Brushes.LinearMulticolorGradientBrush.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.Brushes.LinearMulticolorGradientBrush" /> class with default parameters.
            The starting color is black, the ending color is white, the angle is 45 degrees and the rectangle is located in (0,0) with size (1,1).
            </summary>
    </member>
    <member name="M:Aspose.Imaging.Brushes.LinearMulticolorGradientBrush.#ctor(Aspose.Imaging.Point,Aspose.Imaging.Point)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.Brushes.LinearMulticolorGradientBrush" /> class with the specified points.
            </summary>
      <param name="point1">A <see cref="T:Aspose.Imaging.Point" /> structure that represents the starting point of the linear gradient.</param>
      <param name="point2">A <see cref="T:Aspose.Imaging.Point" /> structure that represents the endpoint of the linear gradient.</param>
    </member>
    <member name="M:Aspose.Imaging.Brushes.LinearMulticolorGradientBrush.#ctor(Aspose.Imaging.PointF,Aspose.Imaging.PointF)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.Brushes.LinearMulticolorGradientBrush" /> class with the specified points.
            </summary>
      <param name="point1">A <see cref="T:Aspose.Imaging.PointF" /> structure that represents the starting point of the linear gradient.</param>
      <param name="point2">A <see cref="T:Aspose.Imaging.PointF" /> structure that represents the endpoint of the linear gradient.</param>
    </member>
    <member name="M:Aspose.Imaging.Brushes.LinearMulticolorGradientBrush.#ctor(Aspose.Imaging.Rectangle,System.Single)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.Brushes.LinearMulticolorGradientBrush" /> class based on a rectangle and an orientation angle.
            </summary>
      <param name="rect">A <see cref="T:Aspose.Imaging.RectangleF" /> structure that specifies the bounds of the linear gradient.</param>
      <param name="angle">The angle, measured in degrees clockwise from the x-axis, of the gradient's orientation line.</param>
    </member>
    <member name="M:Aspose.Imaging.Brushes.LinearMulticolorGradientBrush.#ctor(Aspose.Imaging.RectangleF,System.Single)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.Brushes.LinearMulticolorGradientBrush" /> class based on a rectangle and an orientation angle.
            </summary>
      <param name="rect">A <see cref="T:Aspose.Imaging.RectangleF" /> structure that specifies the bounds of the linear gradient.</param>
      <param name="angle">The angle, measured in degrees clockwise from the x-axis, of the gradient's orientation line.</param>
    </member>
    <member name="M:Aspose.Imaging.Brushes.LinearMulticolorGradientBrush.#ctor(Aspose.Imaging.Rectangle,System.Single,System.Boolean)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.Brushes.LinearMulticolorGradientBrush" /> class based on a rectangle and an orientation angle.
            </summary>
      <param name="rect">A <see cref="T:Aspose.Imaging.RectangleF" /> structure that specifies the bounds of the linear gradient.</param>
      <param name="angle">The angle, measured in degrees clockwise from the x-axis, of the gradient's orientation line.</param>
      <param name="isAngleScalable">if set to <c>true</c> the angle is changed during transformations with this <see cref="T:Aspose.Imaging.Brushes.LinearMulticolorGradientBrush" />.</param>
    </member>
    <member name="M:Aspose.Imaging.Brushes.LinearMulticolorGradientBrush.#ctor(Aspose.Imaging.RectangleF,System.Single,System.Boolean)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.Brushes.LinearMulticolorGradientBrush" /> class based on a rectangle and an orientation angle.
            </summary>
      <param name="rect">A <see cref="T:Aspose.Imaging.RectangleF" /> structure that specifies the bounds of the linear gradient.</param>
      <param name="angle">The angle, measured in degrees clockwise from the x-axis, of the gradient's orientation line.</param>
      <param name="isAngleScalable">if set to <c>true</c> the angle is changed during transformations with this <see cref="T:Aspose.Imaging.Brushes.LinearMulticolorGradientBrush" />.</param>
    </member>
    <member name="P:Aspose.Imaging.Brushes.LinearMulticolorGradientBrush.InterpolationColors">
      <summary>
            Gets or sets a <see cref="T:Aspose.Imaging.ColorBlend" /> that defines a multicolor linear gradient.
            </summary>
      <value>A <see cref="T:Aspose.Imaging.ColorBlend" /> that defines a multicolor linear gradient.</value>
    </member>
    <member name="T:Aspose.Imaging.Brushes.NamespaceDoc">
      <summary>
            The namespace provides helper classes and methods to work with different brush types.
            </summary>
    </member>
    <member name="T:Aspose.Imaging.Brushes.PathGradientBrush">
      <summary>
            Encapsulates a <see cref="T:Aspose.Imaging.Brush" /> object with a gradient. This class cannot be inherited.
            </summary>
      <remarks>
        <para>The center color is white by default. A user can changed this value at any time later.</para>
        <para>The surround colors array is initialized by single element containing white color by default. The surround colors may be changed later, however at least single element is required when setting up the surround colors.</para>
        <para>See the <see cref="P:Aspose.Imaging.Brushes.PathGradientBrush.Blend" /> for more details about its initialization.</para>
      </remarks>
    </member>
    <member name="T:Aspose.Imaging.Brushes.PathGradientBrushBase">
      <summary>
            Represents a <see cref="T:Aspose.Imaging.Brush" /> with base path gradient functionality.
            </summary>
      <remarks>
            Note that when creating the <see cref="T:Aspose.Imaging.Brushes.PathGradientBrushBase" /> class it should be initialized with 2 points at least. The internal path created
            will always be a closed figure, the last point connects the first point. That shape is filled with this <see cref="T:Aspose.Imaging.Brushes.PathGradientBrushBase" />.
            The GDI+ implementation throws an <see cref="T:System.OutOfMemoryException" /> when passing in empty arrays or points set having the same coordinates.
            The <see cref="T:Aspose.Imaging.Brushes.PathGradientBrushBase" /> throws an exception when points array contain less than 2 points, the <see cref="T:System.ArgumentException" /> is
            thrown rather than <see cref="T:System.OutOfMemoryException" /> when points array is unacceptable.
            The center point is calculated as a center of mass for the passed in points by default. A user can change this point later.
            The focus scales is an empty point (0.0, 0.0) by default.
            </remarks>
    </member>
    <member name="M:Aspose.Imaging.Brushes.PathGradientBrushBase.#ctor(Aspose.Imaging.PointF[])">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.Brushes.PathGradientBrushBase" /> class with the specified points.
            </summary>
      <param name="points">An array of <see cref="T:Aspose.Imaging.PointF" /> structures that represents the points that make up the vertices of the path.</param>
    </member>
    <member name="M:Aspose.Imaging.Brushes.PathGradientBrushBase.#ctor(Aspose.Imaging.PointF[],Aspose.Imaging.WrapMode)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.Brushes.PathGradientBrushBase" /> class with the specified points and wrap mode.
            </summary>
      <param name="points">An array of <see cref="T:Aspose.Imaging.PointF" /> structures that represents the points that make up the vertices of the path.</param>
      <param name="wrapMode">A <see cref="T:Aspose.Imaging.WrapMode" /> that specifies how fills drawn with this <see cref="T:Aspose.Imaging.Brushes.PathGradientBrushBase" /> are tiled.</param>
    </member>
    <member name="M:Aspose.Imaging.Brushes.PathGradientBrushBase.#ctor(Aspose.Imaging.Point[])">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.Brushes.PathGradientBrushBase" /> class with the specified points.
            </summary>
      <param name="points">An array of <see cref="T:Aspose.Imaging.Point" /> structures that represents the points that make up the vertices of the path.</param>
    </member>
    <member name="M:Aspose.Imaging.Brushes.PathGradientBrushBase.#ctor(Aspose.Imaging.Point[],Aspose.Imaging.WrapMode)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.Brushes.PathGradientBrushBase" /> class with the specified points and wrap mode.
            </summary>
      <param name="points">An array of <see cref="T:Aspose.Imaging.Point" /> structures that represents the points that make up the vertices of the path.</param>
      <param name="wrapMode">A <see cref="T:Aspose.Imaging.WrapMode" /> that specifies how fills drawn with this <see cref="T:Aspose.Imaging.Brushes.PathGradientBrushBase" /> are tiled.</param>
    </member>
    <member name="M:Aspose.Imaging.Brushes.PathGradientBrushBase.#ctor(Aspose.Imaging.GraphicsPath)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.Brushes.PathGradientBrushBase" /> class with the specified path.
            </summary>
      <param name="path">The <see cref="P:Aspose.Imaging.Brushes.PathGradientBrushBase.GraphicsPath" /> that defines the area filled by this <see cref="T:Aspose.Imaging.Brushes.PathGradientBrushBase" />.</param>
    </member>
    <member name="P:Aspose.Imaging.Brushes.PathGradientBrushBase.PathPoints">
      <summary>
            Gets the path points this brush was build upon.
            </summary>
      <value>The path points.</value>
    </member>
    <member name="P:Aspose.Imaging.Brushes.PathGradientBrushBase.GraphicsPath">
      <summary>
            Gets the graphics path this brush was build upon.
            </summary>
      <value>The graphics path.</value>
    </member>
    <member name="P:Aspose.Imaging.Brushes.PathGradientBrushBase.CenterPoint">
      <summary>
            Gets or sets the center point of the path gradient.
            </summary>
      <value>A <see cref="T:Aspose.Imaging.PointF" /> that represents the center point of the path gradient.</value>
    </member>
    <member name="P:Aspose.Imaging.Brushes.PathGradientBrushBase.FocusScales">
      <summary>
            Gets or sets the focus point for the gradient falloff.
            </summary>
      <value>A <see cref="T:Aspose.Imaging.PointF" /> that represents the focus point for the gradient falloff.</value>
    </member>
    <member name="M:Aspose.Imaging.Brushes.PathGradientBrush.#ctor(Aspose.Imaging.PointF[])">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.Brushes.PathGradientBrush" /> class with the specified points.
            </summary>
      <param name="points">An array of <see cref="T:Aspose.Imaging.PointF" /> structures that represents the points that make up the vertices of the path.</param>
    </member>
    <member name="M:Aspose.Imaging.Brushes.PathGradientBrush.#ctor(Aspose.Imaging.PointF[],Aspose.Imaging.WrapMode)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.Brushes.PathGradientBrush" /> class with the specified points and wrap mode.
            </summary>
      <param name="points">An array of <see cref="T:Aspose.Imaging.PointF" /> structures that represents the points that make up the vertices of the path.</param>
      <param name="wrapMode">A <see cref="T:Aspose.Imaging.WrapMode" /> that specifies how fills drawn with this <see cref="T:Aspose.Imaging.Brushes.PathGradientBrush" /> are tiled.</param>
    </member>
    <member name="M:Aspose.Imaging.Brushes.PathGradientBrush.#ctor(Aspose.Imaging.Point[])">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.Brushes.PathGradientBrush" /> class with the specified points.
            </summary>
      <param name="points">An array of <see cref="T:Aspose.Imaging.Point" /> structures that represents the points that make up the vertices of the path.</param>
    </member>
    <member name="M:Aspose.Imaging.Brushes.PathGradientBrush.#ctor(Aspose.Imaging.Point[],Aspose.Imaging.WrapMode)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.Brushes.PathGradientBrush" /> class with the specified points and wrap mode.
            </summary>
      <param name="points">An array of <see cref="T:Aspose.Imaging.Point" /> structures that represents the points that make up the vertices of the path.</param>
      <param name="wrapMode">A <see cref="T:Aspose.Imaging.WrapMode" /> that specifies how fills drawn with this <see cref="T:Aspose.Imaging.Brushes.PathGradientBrush" /> are tiled.</param>
    </member>
    <member name="M:Aspose.Imaging.Brushes.PathGradientBrush.#ctor(Aspose.Imaging.GraphicsPath)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.Brushes.PathGradientBrush" /> class with the specified path.
            </summary>
      <param name="path">The <see cref="T:Aspose.Imaging.GraphicsPath" /> that defines the area filled by this <see cref="T:Aspose.Imaging.Brushes.PathGradientBrush" />.</param>
    </member>
    <member name="M:Aspose.Imaging.Brushes.PathGradientBrush.SetSigmaBellShape(System.Single)">
      <summary>
            Creates a gradient brush that changes color starting from the center of the path outward to the path's boundary. The transition from one color to another is based on a bell-shaped curve.
            </summary>
      <param name="focus">A value from 0 through 1 that specifies where, along any radial from the center of the path to the path's boundary, the center color will be at its highest intensity. A value of 1 (the default) places the highest intensity at the center of the path.</param>
    </member>
    <member name="M:Aspose.Imaging.Brushes.PathGradientBrush.SetSigmaBellShape(System.Single,System.Single)">
      <summary>
            Creates a gradient brush that changes color starting from the center of the path outward to the path's boundary. The transition from one color to another is based on a bell-shaped curve.
            </summary>
      <param name="focus">A value from 0 through 1 that specifies where, along any radial from the center of the path to the path's boundary, the center color will be at its highest intensity. A value of 1 (the default) places the highest intensity at the center of the path.</param>
      <param name="scale">A value from 0 through 1 that specifies the maximum intensity of the center color that gets blended with the boundary color. A value of 1 causes the highest possible intensity of the center color, and it is the default value.</param>
    </member>
    <member name="M:Aspose.Imaging.Brushes.PathGradientBrush.SetBlendTriangularShape(System.Single)">
      <summary>
            Creates a gradient with a center color and a linear falloff to one surrounding color.
            </summary>
      <param name="focus">A value from 0 through 1 that specifies where, along any radial from the center of the path to the path's boundary, the center color will be at its highest intensity. A value of 1 (the default) places the highest intensity at the center of the path.</param>
    </member>
    <member name="M:Aspose.Imaging.Brushes.PathGradientBrush.SetBlendTriangularShape(System.Single,System.Single)">
      <summary>
            Creates a gradient with a center color and a linear falloff to each surrounding color.
            </summary>
      <param name="focus">A value from 0 through 1 that specifies where, along any radial from the center of the path to the path's boundary, the center color will be at its highest intensity. A value of 1 (the default) places the highest intensity at the center of the path.</param>
      <param name="scale">A value from 0 through 1 that specifies the maximum intensity of the center color that gets blended with the boundary color. A value of 1 causes the highest possible intensity of the center color, and it is the default value.</param>
    </member>
    <member name="P:Aspose.Imaging.Brushes.PathGradientBrush.InterpolationColors">
      <summary>
            Gets or sets a <see cref="T:Aspose.Imaging.ColorBlend" /> that defines a multicolor linear gradient.
            </summary>
      <value>A <see cref="T:Aspose.Imaging.ColorBlend" /> that defines a multicolor linear gradient.</value>
    </member>
    <member name="P:Aspose.Imaging.Brushes.PathGradientBrush.CenterColor">
      <summary>
            Gets or sets the color at the center of the path gradient.
            </summary>
      <value>A <see cref="T:Aspose.Imaging.Color" /> that represents the color at the center of the path gradient.</value>
    </member>
    <member name="P:Aspose.Imaging.Brushes.PathGradientBrush.SurroundColors">
      <summary>
            Gets or sets an array of colors that correspond to the points in the path this <see cref="T:Aspose.Imaging.Brushes.PathGradientBrush" /> fills.
            </summary>
      <value>An array of <see cref="T:Aspose.Imaging.Color" /> structures that represents the colors associated with each point in the path this <see cref="T:Aspose.Imaging.Brushes.PathGradientBrush" /> fills.</value>
    </member>
    <member name="P:Aspose.Imaging.Brushes.PathGradientBrush.Blend">
      <summary>
            Gets or sets a <see cref="T:Aspose.Imaging.Blend" /> that specifies positions and factors that define a custom falloff for the gradient.
            </summary>
      <value>A <see cref="T:Aspose.Imaging.Blend" /> that represents a custom falloff for the gradient.</value>
    </member>
    <member name="T:Aspose.Imaging.Brushes.PathMulticolorGradientBrush">
      <summary>
            Encapsulates a <see cref="T:Aspose.Imaging.Brush" /> object with a gradient. This class cannot be inherited.
            </summary>
    </member>
    <member name="M:Aspose.Imaging.Brushes.PathMulticolorGradientBrush.#ctor(Aspose.Imaging.PointF[])">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.Brushes.PathMulticolorGradientBrush" /> class with the specified points.
            </summary>
      <param name="points">An array of <see cref="T:Aspose.Imaging.PointF" /> structures that represents the points that make up the vertices of the path.</param>
    </member>
    <member name="M:Aspose.Imaging.Brushes.PathMulticolorGradientBrush.#ctor(Aspose.Imaging.PointF[],Aspose.Imaging.WrapMode)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.Brushes.PathMulticolorGradientBrush" /> class with the specified points and wrap mode.
            </summary>
      <param name="points">An array of <see cref="T:Aspose.Imaging.PointF" /> structures that represents the points that make up the vertices of the path.</param>
      <param name="wrapMode">A <see cref="T:Aspose.Imaging.WrapMode" /> that specifies how fills drawn with this <see cref="T:Aspose.Imaging.Brushes.PathMulticolorGradientBrush" /> are tiled.</param>
    </member>
    <member name="M:Aspose.Imaging.Brushes.PathMulticolorGradientBrush.#ctor(Aspose.Imaging.Point[])">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.Brushes.PathMulticolorGradientBrush" /> class with the specified points.
            </summary>
      <param name="points">An array of <see cref="T:Aspose.Imaging.Point" /> structures that represents the points that make up the vertices of the path.</param>
    </member>
    <member name="M:Aspose.Imaging.Brushes.PathMulticolorGradientBrush.#ctor(Aspose.Imaging.Point[],Aspose.Imaging.WrapMode)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.Brushes.PathMulticolorGradientBrush" /> class with the specified points and wrap mode.
            </summary>
      <param name="points">An array of <see cref="T:Aspose.Imaging.Point" /> structures that represents the points that make up the vertices of the path.</param>
      <param name="wrapMode">A <see cref="T:Aspose.Imaging.WrapMode" /> that specifies how fills drawn with this <see cref="T:Aspose.Imaging.Brushes.PathMulticolorGradientBrush" /> are tiled.</param>
    </member>
    <member name="M:Aspose.Imaging.Brushes.PathMulticolorGradientBrush.#ctor(Aspose.Imaging.GraphicsPath)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.Brushes.PathMulticolorGradientBrush" /> class with the specified path.
            </summary>
      <param name="path">The <see cref="T:Aspose.Imaging.GraphicsPath" /> that defines the area filled by this <see cref="T:Aspose.Imaging.Brushes.PathMulticolorGradientBrush" />.</param>
    </member>
    <member name="P:Aspose.Imaging.Brushes.PathMulticolorGradientBrush.InterpolationColors">
      <summary>
            Gets or sets a <see cref="T:Aspose.Imaging.ColorBlend" /> that defines a multicolor linear gradient.
            </summary>
      <value>A <see cref="T:Aspose.Imaging.ColorBlend" /> that defines a multicolor linear gradient.</value>
    </member>
    <member name="T:Aspose.Imaging.Brushes.SolidBrush">
      <summary>
            Solid brush is intended for drawing continiously with specific color. This class cannot be inherited.
            </summary>
      <example>This example uses Graphics class to create primitive shapes on the Image surface. To demonstrate the operation, the example creates a new Image in PNG format and draw primitive shapes on Image surface using Draw methods exposed by Graphics class<code>[C#]

//Create an instance of memory stream
using (MemoryStream ms = new MemoryStream())
{
    //Create an instance of PngOptions and set its various properties
    Aspose.Imaging.ImageOptions.PngOptions pngOptions = new Aspose.Imaging.ImageOptions.PngOptions();

    //Set the Source for PngOptions
    pngOptions.Source = new Aspose.Imaging.Sources.StreamSource(ms);

    //Create an instance of Image 
    using (Aspose.Imaging.Image image = Aspose.Imaging.Image.Create(pngOptions, 500, 500))
    {
        //Create and initialize an instance of Graphics class
        Aspose.Imaging.Graphics graphics = new Aspose.Imaging.Graphics(image);

        //Clear Graphics surface
        graphics.Clear(Color.Wheat);

        //Draw an Arc by specifying the Pen object having Black color, 
        //a Rectangle surrounding the Arc, Start Angle and Sweep Angle
        graphics.DrawArc(new Pen(Color.Black, 2), new Rectangle(200, 200, 100, 200), 0, 300);

        //Draw a Bezier by specifying the Pen object having Blue color and co-ordinate Points.
        graphics.DrawBezier(new Pen(Color.Blue, 2), new Point(250, 100), new Point(300, 30), new Point(450, 100), new Point(235, 25));

        //Draw a Curve by specifying the Pen object having Green color and an array of Points
        graphics.DrawCurve(new Pen(Color.Green, 2), new[] { new Point(100, 200), new Point(100, 350), new Point(200, 450) });

        //Draw an Ellipse using the Pen object and a surrounding Rectangle
        graphics.DrawEllipse(new Pen(Color.Yellow, 2), new Rectangle(300, 300, 100, 100));

        //Draw a Line 
        graphics.DrawLine(new Pen(Color.Violet, 2), new Point(100, 100), new Point(200, 200));

        //Draw a Pie segment
        graphics.DrawPie(new Pen(Color.Silver, 2), new Rectangle(new Point(200, 20), new Size(200, 200)), 0, 45);

        //Draw a Polygon by specifying the Pen object having Red color and an array of Points
        graphics.DrawPolygon(new Pen(Color.Red, 2), new[] { new Point(20, 100), new Point(20, 200), new Point(220, 20) });

        //Draw a Rectangle
        graphics.DrawRectangle(new Pen(Color.Orange, 2), new Rectangle(new Point(250, 250), new Size(100, 100)));

        //Create a SolidBrush object and set its various properties
        Aspose.Imaging.Brushes.SolidBrush brush = new Aspose.Imaging.Brushes.SolidBrush();
        brush.Color = Color.Purple;
        brush.Opacity = 100;

        //Draw a String using the SolidBrush object and Font, at specific Point
        graphics.DrawString("This image is created by Aspose.Imaging API", new Font("Times New Roman", 16), brush, new PointF(50, 400));

        // save all changes.
        image.Save();
    }
}</code><code>[Visual Basic]

'Create an instance of memory stream
Using ms As MemoryStream = New MemoryStream()
'Create an instance of PngOptions and set its various properties
Dim pngOptions As Aspose.Imaging.ImageOptions.PngOptions = New Aspose.Imaging.ImageOptions.PngOptions()

'Set the Source for PngOptions
    pngOptions.Source = New Aspose.Imaging.Sources.StreamSource(ms)

'Create an instance of Image 
    Using image As Aspose.Imaging.Image = Aspose.Imaging.Image.Create(pngOptions, 500, 500)
'Create and initialize an instance of Graphics class
Dim graphics As Aspose.Imaging.Graphics = New Aspose.Imaging.Graphics(image)

'Clear Graphics surface
        graphics.Clear(Color.Wheat)

'Draw an Arc by specifying the Pen object having Black color, 
'a Rectangle surrounding the Arc, Start Angle and Sweep Angle
        graphics.DrawArc(New Pen(Color.Black, 2), New Rectangle(200, 200, 100, 200), 0, 300)

'Draw a Bezier by specifying the Pen object having Blue color and co-ordinate Points.
        graphics.DrawBezier(New Pen(Color.Blue, 2), New Point(250, 100), New Point(300, 30), New Point(450, 100), New Point(235, 25))

'Draw a Curve by specifying the Pen object having Green color and an array of Points
        graphics.DrawCurve(New Pen(Color.Green, 2), New() { New Point(100, 200), New Point(100, 350), New Point(200, 450) })

'Draw an Ellipse using the Pen object and a surrounding Rectangle
        graphics.DrawEllipse(New Pen(Color.Yellow, 2), New Rectangle(300, 300, 100, 100))

'Draw a Line 
        graphics.DrawLine(New Pen(Color.Violet, 2), New Point(100, 100), New Point(200, 200))

'Draw a Pie segment
        graphics.DrawPie(New Pen(Color.Silver, 2), New Rectangle(New Point(200, 20), New Size(200, 200)), 0, 45)

'Draw a Polygon by specifying the Pen object having Red color and an array of Points
        graphics.DrawPolygon(New Pen(Color.Red, 2), New() { New Point(20, 100), New Point(20, 200), New Point(220, 20) })

'Draw a Rectangle
        graphics.DrawRectangle(New Pen(Color.Orange, 2), New Rectangle(New Point(250, 250), New Size(100, 100)))

'Create a SolidBrush object and set its various properties
Dim brush As Aspose.Imaging.Brushes.SolidBrush = New Aspose.Imaging.Brushes.SolidBrush()
        brush.Color = Color.Purple
        brush.Opacity = 100

'Draw a String using the SolidBrush object and Font, at specific Point
        graphics.DrawString("This image is created by Aspose.Imaging API", New Font("Times New Roman", 16), brush, New PointF(50, 400))

' save all changes.
        image.Save()
    End Using
End Using</code></example>
    </member>
    <member name="M:Aspose.Imaging.Brushes.SolidBrush.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.Brushes.SolidBrush" /> class.
            </summary>
    </member>
    <member name="M:Aspose.Imaging.Brushes.SolidBrush.#ctor(Aspose.Imaging.Color)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.Brushes.SolidBrush" /> class.
            </summary>
      <param name="color">The solid brush color.</param>
    </member>
    <member name="P:Aspose.Imaging.Brushes.SolidBrush.Color">
      <summary>
            Gets or sets the brush color.
            </summary>
      <value>The brush color.</value>
    </member>
    <member name="T:Aspose.Imaging.Brushes.TextureBrush">
      <summary>
            Each property of the <see cref="T:Aspose.Imaging.Brushes.TextureBrush" /> class is a <see cref="T:Aspose.Imaging.Brush" /> object that uses an image to fill the interior of a shape. This class cannot be inherited.
            </summary>
    </member>
    <member name="M:Aspose.Imaging.Brushes.TextureBrush.#ctor(Aspose.Imaging.Image)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.Brushes.TextureBrush" /> class that uses the specified image.
            </summary>
      <param name="image">The <see cref="T:Aspose.Imaging.Image" /> object with which this <see cref="T:Aspose.Imaging.Brushes.TextureBrush" /> object fills interiors.</param>
    </member>
    <member name="M:Aspose.Imaging.Brushes.TextureBrush.#ctor(Aspose.Imaging.Image,Aspose.Imaging.WrapMode)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.Brushes.TextureBrush" /> class that uses the specified image and wrap mode.
            </summary>
      <param name="image">The <see cref="T:Aspose.Imaging.Image" /> object with which this <see cref="T:Aspose.Imaging.Brushes.TextureBrush" /> object fills interiors.</param>
      <param name="wrapMode">A <see cref="T:Aspose.Imaging.WrapMode" /> enumeration that specifies how this <see cref="T:Aspose.Imaging.Brushes.TextureBrush" /> object is tiled.</param>
    </member>
    <member name="M:Aspose.Imaging.Brushes.TextureBrush.#ctor(Aspose.Imaging.Image,Aspose.Imaging.WrapMode,Aspose.Imaging.RectangleF)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.Brushes.TextureBrush" /> class that uses the specified image, wrap mode, and bounding rectangle.
            </summary>
      <param name="image">The <see cref="T:Aspose.Imaging.Image" /> object with which this <see cref="T:Aspose.Imaging.Brushes.TextureBrush" /> object fills interiors.</param>
      <param name="wrapMode">A <see cref="T:Aspose.Imaging.WrapMode" /> enumeration that specifies how this <see cref="T:Aspose.Imaging.Brushes.TextureBrush" /> object is tiled.</param>
      <param name="destinationRectangle">A <see cref="T:Aspose.Imaging.RectangleF" /> structure that represents the bounding rectangle for this <see cref="T:Aspose.Imaging.Brushes.TextureBrush" /> object.</param>
    </member>
    <member name="M:Aspose.Imaging.Brushes.TextureBrush.#ctor(Aspose.Imaging.Image,Aspose.Imaging.WrapMode,Aspose.Imaging.Rectangle)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.Brushes.TextureBrush" /> class that uses the specified image, wrap mode, and bounding rectangle.
            </summary>
      <param name="image">The <see cref="T:Aspose.Imaging.Image" /> object with which this <see cref="T:Aspose.Imaging.Brushes.TextureBrush" /> object fills interiors.</param>
      <param name="wrapMode">A <see cref="T:Aspose.Imaging.WrapMode" /> enumeration that specifies how this <see cref="T:Aspose.Imaging.Brushes.TextureBrush" /> object is tiled.</param>
      <param name="destinationRectangle">A <see cref="T:Aspose.Imaging.Rectangle" /> structure that represents the bounding rectangle for this <see cref="T:Aspose.Imaging.Brushes.TextureBrush" /> object.</param>
    </member>
    <member name="M:Aspose.Imaging.Brushes.TextureBrush.#ctor(Aspose.Imaging.Image,Aspose.Imaging.RectangleF)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.Brushes.TextureBrush" /> class that uses the specified image and bounding rectangle.
            </summary>
      <param name="image">The <see cref="T:Aspose.Imaging.Image" /> object with which this <see cref="T:Aspose.Imaging.Brushes.TextureBrush" /> object fills interiors.</param>
      <param name="destinationRectangle">A <see cref="T:Aspose.Imaging.RectangleF" /> structure that represents the bounding rectangle for this <see cref="T:Aspose.Imaging.Brushes.TextureBrush" /> object.</param>
    </member>
    <member name="M:Aspose.Imaging.Brushes.TextureBrush.#ctor(Aspose.Imaging.Image,Aspose.Imaging.Rectangle)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.Brushes.TextureBrush" /> class that uses the specified image and bounding rectangle.
            </summary>
      <param name="image">The <see cref="T:Aspose.Imaging.Image" /> object with which this <see cref="T:Aspose.Imaging.Brushes.TextureBrush" /> object fills interiors.</param>
      <param name="destinationRectangle">A <see cref="T:Aspose.Imaging.Rectangle" /> structure that represents the bounding rectangle for this <see cref="T:Aspose.Imaging.Brushes.TextureBrush" /> object.</param>
    </member>
    <member name="P:Aspose.Imaging.Brushes.TextureBrush.Image">
      <summary>
            Gets the <see cref="T:Aspose.Imaging.Image" /> object associated with this <see cref="T:Aspose.Imaging.Brushes.TextureBrush" /> object.
            </summary>
      <value>An <see cref="T:Aspose.Imaging.Image" /> object that represents the image with which this <see cref="T:Aspose.Imaging.Brushes.TextureBrush" /> object fills shapes.</value>
    </member>
    <member name="P:Aspose.Imaging.Brushes.TextureBrush.ImageRectangle">
      <summary>
            Gets the <see cref="T:Aspose.Imaging.Rectangle" /> associated with this <see cref="T:Aspose.Imaging.Brushes.TextureBrush" />.
            </summary>
      <value>The <see cref="T:Aspose.Imaging.Rectangle" />.</value>
    </member>
    <member name="T:Aspose.Imaging.Cache">
      <summary>
            Contains cache settings.
            </summary>
      <example>This example demonstrates the use of Aspose.Imaging.Cache. Note you may need to increase the Silverlight isolated storage available for processing big images.<code>[C#]

// Auto mode is flexible and efficient
Cache.CacheType = CacheType.Auto;

// Default value is 0, which means there is no upper limit
Cache.MaxDiskSpaceForCache = 1073741824; // 1 gigabyte
Cache.MaxMemoryForCache = 1073741824; // 1 gigabyte

// It is not recommended to change the following property as it may greatly affect the performance
Cache.ExactReallocateOnly = false;

// At any time you may check how many bytes currently allocated for memory or disk 
// cache by examining the following properties
long l1 = Cache.AllocatedDiskBytesCount;
long l2 = Cache.AllocatedMemoryBytesCount;

// Do some image processing as below
Aspose.Imaging.ImageOptions.GifOptions options = new Aspose.Imaging.ImageOptions.GifOptions();
options.Palette = new ColorPalette(new Color[] { Color.Red, Color.Blue, Color.Black, Color.White });
options.Source = new StreamSource(new MemoryStream(), true);
using (RasterImage image = (RasterImage)Image.Create(options, 100, 100))
{
    Color[] pixels = new Color[10000];
    for (int i = 0; i &lt; pixels.Length; i++)
    {
        pixels[i] = Color.White;
    }

    image.SavePixels(image.Bounds, pixels);

    // after executing the code above there will be allocated 40000 bytes in-memory.
    long diskBytes = Cache.AllocatedDiskBytesCount;
    long memoryBytes = Cache.AllocatedMemoryBytesCount;
}

// The allocation properties may be used to check whether all Aspose.Imaging objects were properly disposed.
// In case you've forgot to call dispose on some object the cache values will be different than 0.            
l1 = Cache.AllocatedDiskBytesCount;
l2 = Cache.AllocatedMemoryBytesCount;</code><code>[Visual Basic]

' Auto mode is flexible and efficient
Cache.CacheType = CacheType.Auto

' Default value is 0, which means there is no upper limit
Cache.MaxDiskSpaceForCache = 1073741824 ' 1 gigabyte
Cache.MaxMemoryForCache = 1073741824 ' 1 gigabyte

' It is not recommended to change the following property as it may greatly affect the performance
Cache.ExactReallocateOnly = False

' At any time you may check how many bytes currently allocated for memory or disk 
' cache by examining the following properties
Dim l1 As Long = Cache.AllocatedDiskBytesCount
Dim l2 As Long = Cache.AllocatedMemoryBytesCount

' Do some image processing as below
Dim options As Aspose.Imaging.ImageOptions.GifOptions = New Aspose.Imaging.ImageOptions.GifOptions()
options.Palette = New ColorPalette(New Color() { Color.Red, Color.Blue, Color.Black, Color.White })
options.Source = New StreamSource(New MemoryStream(), True)
Using image As RasterImage = CType(Image.Create(options, 100, 100), RasterImage)
Dim pixels As Color() = New Color(9999) {}
Dim i As Integer = 0
    Do While i &lt; pixels.Length
        pixels(i) = Color.White
        i += 1
    Loop

    image.SavePixels(image.Bounds, pixels)

' after executing the code above there will be allocated 40000 bytes in-memory.
Dim diskBytes As Long = Cache.AllocatedDiskBytesCount
Dim memoryBytes As Long = Cache.AllocatedMemoryBytesCount
End Using

' The allocation properties may be used to check whether all Aspose.Imaging objects were properly disposed.
' In case you've forgot to call dispose on some object the cache values will be different than 0.            
l1 = Cache.AllocatedDiskBytesCount
l2 = Cache.AllocatedMemoryBytesCount</code></example>
    </member>
    <member name="M:Aspose.Imaging.Cache.SetDefaults">
      <summary>
            Sets the <see cref="T:Aspose.Imaging.Cache" /> settings to defaults.
            </summary>
    </member>
    <member name="P:Aspose.Imaging.Cache.ExactReallocateOnly">
      <summary>
            Gets or sets a value indicating whether reallocation should be exact or not. If reallocation is non exact the performance should be higher.
            </summary>
      <value>
        <c>true</c> if reallocation is exact; otherwise, <c>false</c>.
            </value>
      <remarks>The exact reallocation will perform reallocation of additional memory only up to the upper limit specified.
            When passing upper limit for in-memory during reallocation the cached data will be copied to disk if possible.
            When passing upper limit for disk memory during reallocation the appropriate exception is thrown.
            The performance should be higher if this option is turned off as no additional copying will be performed if possible,
            however this may also lead to pass upper limits specified for memory or disk.</remarks>
    </member>
    <member name="P:Aspose.Imaging.Cache.AllocatedMemoryBytesCount">
      <summary>
            Gets the allocated in-memory bytes count.
            </summary>
      <value>
            The allocated in-memory bytes count.
            </value>
    </member>
    <member name="P:Aspose.Imaging.Cache.AllocatedDiskBytesCount">
      <summary>
            Gets the allocated disk bytes count.
            </summary>
      <value>
            The allocated disk bytes count.
            </value>
    </member>
    <member name="P:Aspose.Imaging.Cache.MaxMemoryForCache">
      <summary>
            Gets or sets the maximum available memory for cache in memory. The value specified is megabytes count.
            </summary>
      <value>
            The maximum memory for cache.        
            </value>
      <remarks>Value of 0 will consume all available memory and serves as no upper limit.</remarks>
    </member>
    <member name="P:Aspose.Imaging.Cache.MaxDiskSpaceForCache">
      <summary>
            Gets or sets the maximum available disk space for cache. The value specified is megabytes count.
            </summary>
      <value>
            The maximum available disk space for cache.
            </value>
      <remarks>Value of 0 will consume all available memory and serves as no upper limit.</remarks>
    </member>
    <member name="P:Aspose.Imaging.Cache.CacheType">
      <summary>
            Gets or sets the cache scheme used.
            </summary>
      <value>
            The cache scheme used.
            </value>
    </member>
    <member name="T:Aspose.Imaging.CacheType">
      <summary>
            Specifies the cache type to use.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.CacheType.Auto">
      <summary>
            Specifies auto cache type. The auto cache scheme will try to cache in-memory first then on disk.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.CacheType.CacheOnDiskOnly">
      <summary>
            The disk cache only.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.CacheType.CacheInMemoryOnly">
      <summary>
            The in-memory cache only.
            </summary>
    </member>
    <member name="T:Aspose.Imaging.CharacterSet">
      <summary>
            Represents the character set used.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.CharacterSet.Ansi">
      <summary>
            1252 Latin 1, 1250 Latin 2, 1256 Arabic character sets
            </summary>
    </member>
    <member name="F:Aspose.Imaging.CharacterSet.Default">
      <summary>
            The default character set.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.CharacterSet.Symbol">
      <summary>
            The symbol character set
            </summary>
    </member>
    <member name="F:Aspose.Imaging.CharacterSet.Shiftjis">
      <summary>
            DBCS, 932 Japanese character set.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.CharacterSet.Hangeul">
      <summary>
            DBCS, 949 Korean character set.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.CharacterSet.Hangul">
      <summary>
            DBCS, 949 Korean character set.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.CharacterSet.Gb2312">
      <summary>
            DBCS, 936 Simplified Chinese character set.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.CharacterSet.ChineseBig5">
      <summary>
            DBCS, 950 Traditional Chinese character set.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.CharacterSet.Oem">
      <summary>
            437 MS-DOS Latin 1, 852 MS-DOS Latin 2, 864 MS-DOS Arabic character sets.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.CharacterSet.Johab">
      <summary>
            DBCS, 1361 Korean character set.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.CharacterSet.Hebrew">
      <summary>
            1255 Hebrew character set.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.CharacterSet.Arabic">
      <summary>
            1256 Arabic character set.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.CharacterSet.Greek">
      <summary>
            1253 Greek character set.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.CharacterSet.Turkish">
      <summary>
            1254 Turkish character set.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.CharacterSet.Vietnamese">
      <summary>
            1258 Vietnamese character set.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.CharacterSet.Thai">
      <summary>
            874 Thai character set.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.CharacterSet.Easteurope">
      <summary>
            1250 Latin 2, Central Europe character set.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.CharacterSet.Russian">
      <summary>
            1251 Cyrillic (Slavic) character set.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.CharacterSet.Mac">
      <summary>
            10000 Mac Roman, 10029 Mac Central Europe, 10007 Mac Cyrillic character sets.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.CharacterSet.Baltic">
      <summary>
            1257 Baltic Rim character set.
            </summary>
    </member>
    <member name="T:Aspose.Imaging.CMYKColor">
      <summary>
                The CMYK color of pixel.
            </summary>
    </member>
    <member name="M:Aspose.Imaging.CMYKColor.FromParams(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Creates a <see cref="T:Aspose.Imaging.CMYKColor" /> structure from a 32-bit cyan, magenta, yellow and black values.
            </summary>
      <param name="cyan">
            The cyan component. Valid values are 0 through 255.
            </param>
      <param name="magenta">
            The magenta component. Valid values are 0 through 255.
            </param>
      <param name="yellow">
            The yellow component. Valid values are 0 through 255.
            </param>
      <param name="black">
            The black component. Valid values are 0 through 255.
            </param>
      <returns>
            The <see cref="T:Aspose.Imaging.CMYKColor" />.
            </returns>
    </member>
    <member name="M:Aspose.Imaging.CMYKColor.GetHashCode">
      <summary>
                The get hash code.
            </summary>
      <returns>
                The <see cref="T:System.Int32" />.
            </returns>
    </member>
    <member name="M:Aspose.Imaging.CMYKColor.ToColor(Aspose.Imaging.CMYKColor[])">
      <summary>
            The conversion from CMYKColor to Color using icc conversion  with default profiles.
            </summary>
      <param name="cmykPixels">
            The pixels of CMYKColor type in CMYK format.
            </param>
      <returns>
        <see>
          <cref>Color[]</cref>
        </see>
                .
            </returns>
    </member>
    <member name="M:Aspose.Imaging.CMYKColor.ToColor(Aspose.Imaging.CMYKColor)">
      <summary>
            The conversion from CMYKColor to Color.
            </summary>
      <param name="cmykPixel">
            The pixels of CMYKColor type in CMYK format.
            </param>
      <returns>
            The <see cref="T:Aspose.Imaging.Color[]" />.
            </returns>
    </member>
    <member name="M:Aspose.Imaging.CMYKColor.ToValue">
      <summary>
            The to value.
            </summary>
      <returns>
            The <see cref="T:System.Int64" />.
            </returns>
    </member>
    <member name="P:Aspose.Imaging.CMYKColor.Empty">
      <summary>
                Gets the empty.
            </summary>
    </member>
    <member name="P:Aspose.Imaging.CMYKColor.C">
      <summary>
                Gets the cyan component value of this <see cref="T:Aspose.Imaging.Color" /> structure.
            </summary>
      <value>
                The cyan component value of this <see cref="T:Aspose.Imaging.Color" />.
            </value>
    </member>
    <member name="P:Aspose.Imaging.CMYKColor.M">
      <summary>
                Gets the magenta component value of this <see cref="T:Aspose.Imaging.Color" /> structure.
            </summary>
      <value>
                The magenta component value of this <see cref="T:Aspose.Imaging.Color" />.
            </value>
    </member>
    <member name="P:Aspose.Imaging.CMYKColor.Y">
      <summary>
                Gets the yellow component value of this <see cref="T:Aspose.Imaging.Color" /> structure.
            </summary>
      <value>
                The yellow component value of this <see cref="T:Aspose.Imaging.Color" />.
            </value>
    </member>
    <member name="P:Aspose.Imaging.CMYKColor.K">
      <summary>
                Gets the black component value of this <see cref="T:Aspose.Imaging.Color" /> structure.
            </summary>
      <value>
                The black component value of this <see cref="T:Aspose.Imaging.Color" />.
            </value>
    </member>
    <member name="P:Aspose.Imaging.CMYKColor.IsEmpty">
      <summary>
                Gets a value indicating whether this <see cref="T:Aspose.Imaging.Color" /> structure is uninitialized.
            </summary>
      <value>This property returns true if this color is uninitialized; otherwise, false.</value>
    </member>
    <member name="T:Aspose.Imaging.Color">
      <summary>
            The color of the pixel.
            </summary>
    </member>
    <member name="M:Aspose.Imaging.Color.op_Equality(Aspose.Imaging.Color,Aspose.Imaging.Color)">
      <summary>
            Tests whether two specified <see cref="T:Aspose.Imaging.Color" /> structures are equivalent.
            </summary>
      <param name="left">The <see cref="T:Aspose.Imaging.Color" /> that is to the left of the equality operator.</param>
      <param name="right">The <see cref="T:Aspose.Imaging.Color" /> that is to the right of the equality operator.</param>
      <returns>True if the two <see cref="T:Aspose.Imaging.Color" /> structures are equal; otherwise, false.</returns>
    </member>
    <member name="M:Aspose.Imaging.Color.op_Inequality(Aspose.Imaging.Color,Aspose.Imaging.Color)">
      <summary>
            Tests whether two specified <see cref="T:Aspose.Imaging.Color" /> structures are different.
            </summary>
      <param name="left">The <see cref="T:Aspose.Imaging.Color" /> that is to the left of the inequality operator.</param>
      <param name="right">The <see cref="T:Aspose.Imaging.Color" /> that is to the right of the inequality operator.</param>
      <returns>True if the two <see cref="T:Aspose.Imaging.Color" /> structures are different; otherwise, false.</returns>
    </member>
    <member name="M:Aspose.Imaging.Color.FromArgb(System.Int32)">
      <summary>
            Creates a <see cref="T:Aspose.Imaging.Color" /> structure from a 32-bit ARGB value.
            </summary>
      <param name="argb">A value specifying the 32-bit ARGB value.</param>
      <returns>The <see cref="T:Aspose.Imaging.Color" /> structure that this method creates.</returns>
    </member>
    <member name="M:Aspose.Imaging.Color.FromArgb(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Creates a <see cref="T:Aspose.Imaging.Color" /> structure from the four ARGB component (alpha, red, green, and blue) values. Although this method allows a 32-bit value to be passed for each component, the value of each component is limited to 8 bits.
            </summary>
      <param name="alpha">The alpha component. Valid values are 0 through 255.</param>
      <param name="red">The red component. Valid values are 0 through 255.</param>
      <param name="green">The green component. Valid values are 0 through 255.</param>
      <param name="blue">The blue component. Valid values are 0 through 255.</param>
      <returns>The <see cref="T:Aspose.Imaging.Color" /> that this method creates.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="alpha" />, <paramref name="red" />, <paramref name="green" />, or <paramref name="blue" /> is less than 0 or greater than 255.</exception>
    </member>
    <member name="M:Aspose.Imaging.Color.FromArgb(System.Int32,Aspose.Imaging.Color)">
      <summary>
            Creates a <see cref="T:Aspose.Imaging.Color" /> structure from the specified <see cref="T:Aspose.Imaging.Color" /> structure, but with the new specified alpha value. Although this method allows a 32-bit value to be passed for the alpha value, the value is limited to 8 bits.
            </summary>
      <param name="alpha">The alpha value for the new <see cref="T:Aspose.Imaging.Color" />. Valid values are 0 through 255.</param>
      <param name="baseColor">The <see cref="T:Aspose.Imaging.Color" /> from which to create the new <see cref="T:Aspose.Imaging.Color" />.</param>
      <returns>The <see cref="T:Aspose.Imaging.Color" /> that this method creates.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="alpha" /> is less than 0 or greater than 255.</exception>
    </member>
    <member name="M:Aspose.Imaging.Color.FromArgb(System.Int32,System.Int32,System.Int32)">
      <summary>
            Creates a <see cref="T:Aspose.Imaging.Color" /> structure from the specified 8-bit color values (red, green, and blue). The alpha value is implicitly 255 (fully opaque). Although this method allows a 32-bit value to be passed for each color component, the value of each component is limited to 8 bits.
            </summary>
      <param name="red">The red component value for the new <see cref="T:Aspose.Imaging.Color" />. Valid values are 0 through 255.</param>
      <param name="green">The green component value for the new <see cref="T:Aspose.Imaging.Color" />. Valid values are 0 through 255.</param>
      <param name="blue">The blue component value for the new <see cref="T:Aspose.Imaging.Color" />. Valid values are 0 through 255.</param>
      <returns>The <see cref="T:Aspose.Imaging.Color" /> that this method creates.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="red" />, <paramref name="green" />, or <paramref name="blue" /> is less than 0 or greater than 255.</exception>
    </member>
    <member name="M:Aspose.Imaging.Color.FromKnownColor(Aspose.Imaging.KnownColor)">
      <summary>
            Creates a <see cref="T:Aspose.Imaging.Color" /> structure from the specified predefined color.
            </summary>
      <param name="color">An element of the <see cref="T:Aspose.Imaging.KnownColor" /> enumeration.</param>
      <returns>The <see cref="T:Aspose.Imaging.Color" /> that this method creates.</returns>
    </member>
    <member name="M:Aspose.Imaging.Color.FromName(System.String)">
      <summary>
            Creates a <see cref="T:Aspose.Imaging.Color" /> structure from the specified name of a predefined color.
            </summary>
      <param name="name">A string that is the name of a predefined color. Valid names are the same as the names of the elements of the <see cref="T:Aspose.Imaging.KnownColor" /> enumeration.</param>
      <returns>The <see cref="T:Aspose.Imaging.Color" /> that this method creates.</returns>
    </member>
    <member name="M:Aspose.Imaging.Color.GetBrightness">
      <summary>
            Gets the hue-saturation-brightness (HSB) brightness value for this <see cref="T:Aspose.Imaging.Color" /> structure.
            </summary>
      <returns>The brightness of this <see cref="T:Aspose.Imaging.Color" />. The brightness ranges from 0.0 through 1.0, where 0.0 represents black and 1.0 represents white.</returns>
    </member>
    <member name="M:Aspose.Imaging.Color.GetHue">
      <summary>
            Gets the hue-saturation-brightness (HSB) hue value, in degrees, for this <see cref="T:Aspose.Imaging.Color" /> structure.
            </summary>
      <returns>The hue, in degrees, of this <see cref="T:Aspose.Imaging.Color" />. The hue is measured in degrees, ranging from 0.0 through 360.0, in HSB color space.</returns>
    </member>
    <member name="M:Aspose.Imaging.Color.GetSaturation">
      <summary>
            Gets the hue-saturation-brightness (HSB) saturation value for this <see cref="T:Aspose.Imaging.Color" /> structure.
            </summary>
      <returns>The saturation of this <see cref="T:Aspose.Imaging.Color" />. The saturation ranges from 0.0 through 1.0, where 0.0 is grayscale and 1.0 is the most saturated.</returns>
    </member>
    <member name="M:Aspose.Imaging.Color.ToArgb">
      <summary>
            Gets the 32-bit ARGB value of this <see cref="T:Aspose.Imaging.Color" /> structure.
            </summary>
      <returns>The 32-bit ARGB value of this <see cref="T:Aspose.Imaging.Color" />.</returns>
    </member>
    <member name="M:Aspose.Imaging.Color.ToKnownColor">
      <summary>
            Gets the <see cref="T:Aspose.Imaging.KnownColor" /> value of this <see cref="T:Aspose.Imaging.Color" /> structure.
            </summary>
      <returns>An element of the <see cref="T:Aspose.Imaging.KnownColor" /> enumeration, if the <see cref="T:Aspose.Imaging.Color" /> is created from a predefined color by using either the <see cref="M:Aspose.Imaging.Color.FromName(System.String)" /> method or the <see cref="M:Aspose.Imaging.Color.FromKnownColor(Aspose.Imaging.KnownColor)" /> method; otherwise, 0.</returns>
    </member>
    <member name="M:Aspose.Imaging.Color.ToString">
      <summary>
            Converts this <see cref="T:Aspose.Imaging.Color" /> structure to a human-readable string.
            </summary>
      <returns>A string that is the name of this <see cref="T:Aspose.Imaging.Color" />, if the <see cref="T:Aspose.Imaging.Color" /> is created from a predefined color by using either the <see cref="M:Aspose.Imaging.Color.FromName(System.String)" /> method or the <see cref="M:Aspose.Imaging.Color.FromKnownColor(Aspose.Imaging.KnownColor)" /> method; otherwise, a string that consists of the ARGB component names and their values.</returns>
    </member>
    <member name="M:Aspose.Imaging.Color.Equals(System.Object)">
      <summary>
            Tests whether the specified object is a <see cref="T:Aspose.Imaging.Color" /> structure and is equivalent to this <see cref="T:Aspose.Imaging.Color" /> structure.
            </summary>
      <param name="obj">The object to test.</param>
      <returns>True if <paramref name="obj" /> is a <see cref="T:Aspose.Imaging.Color" /> structure equivalent to this <see cref="T:Aspose.Imaging.Color" /> structure; otherwise, false.</returns>
    </member>
    <member name="M:Aspose.Imaging.Color.GetHashCode">
      <summary>
            Returns a hash code for this <see cref="T:Aspose.Imaging.Color" /> structure.
            </summary>
      <returns>An integer value that specifies the hash code for this <see cref="T:Aspose.Imaging.Color" />.</returns>
    </member>
    <member name="M:Aspose.Imaging.Color.ToCMYK(Aspose.Imaging.Color[])">
      <summary>
            The conversion from Color to CMYKColor.
            </summary>
      <param name="pixels">
            The pixels of Color type in RGB format.
            </param>
      <returns>
            The <see cref="T:Aspose:Imaging:CMYKColor[]" />.
            </returns>
    </member>
    <member name="M:Aspose.Imaging.Color.ToCMYK(Aspose.Imaging.Color)">
      <summary>
            The conversion from Color to CMYKColor.
            </summary>
      <param name="pixel">
            The pixel of Color type in RGB format.
            </param>
      <returns>
            The <see cref="T:Aspose:Imaging:CMYKColor" />.
            </returns>
    </member>
    <member name="P:Aspose.Imaging.Color.Empty">
      <summary>
            Gets an empty <see cref="T:Aspose.Imaging.Color" />.
            </summary>
      <value>The empty <see cref="T:Aspose.Imaging.Color" />.</value>
    </member>
    <member name="P:Aspose.Imaging.Color.Transparent">
      <summary>
            Gets a system-defined color.
            </summary>
      <value>A <see cref="T:Aspose.Imaging.Color" /> representing a system-defined color.</value>
    </member>
    <member name="P:Aspose.Imaging.Color.AliceBlue">
      <summary>
            Gets a system-defined color.
            </summary>
      <value>A <see cref="T:Aspose.Imaging.Color" /> representing a system-defined color.</value>
    </member>
    <member name="P:Aspose.Imaging.Color.AntiqueWhite">
      <summary>
            Gets a system-defined color.
            </summary>
      <value>A <see cref="T:Aspose.Imaging.Color" /> representing a system-defined color.</value>
    </member>
    <member name="P:Aspose.Imaging.Color.Aqua">
      <summary>
            Gets a system-defined color.
            </summary>
      <value>A <see cref="T:Aspose.Imaging.Color" /> representing a system-defined color.</value>
    </member>
    <member name="P:Aspose.Imaging.Color.Aquamarine">
      <summary>
            Gets a system-defined color.
            </summary>
      <value>A <see cref="T:Aspose.Imaging.Color" /> representing a system-defined color.</value>
    </member>
    <member name="P:Aspose.Imaging.Color.Azure">
      <summary>
            Gets a system-defined color.
            </summary>
      <value>A <see cref="T:Aspose.Imaging.Color" /> representing a system-defined color.</value>
    </member>
    <member name="P:Aspose.Imaging.Color.Beige">
      <summary>
            Gets a system-defined color.
            </summary>
      <value>A <see cref="T:Aspose.Imaging.Color" /> representing a system-defined color.</value>
    </member>
    <member name="P:Aspose.Imaging.Color.Bisque">
      <summary>
            Gets a system-defined color.
            </summary>
      <value>A <see cref="T:Aspose.Imaging.Color" /> representing a system-defined color.</value>
    </member>
    <member name="P:Aspose.Imaging.Color.Black">
      <summary>
            Gets a system-defined color.
            </summary>
      <value>A <see cref="T:Aspose.Imaging.Color" /> representing a system-defined color.</value>
    </member>
    <member name="P:Aspose.Imaging.Color.BlanchedAlmond">
      <summary>
            Gets a system-defined color.
            </summary>
      <value>A <see cref="T:Aspose.Imaging.Color" /> representing a system-defined color.</value>
    </member>
    <member name="P:Aspose.Imaging.Color.Blue">
      <summary>
            Gets a system-defined color.
            </summary>
      <value>A <see cref="T:Aspose.Imaging.Color" /> representing a system-defined color.</value>
    </member>
    <member name="P:Aspose.Imaging.Color.BlueViolet">
      <summary>
            Gets a system-defined color.
            </summary>
      <value>A <see cref="T:Aspose.Imaging.Color" /> representing a system-defined color.</value>
    </member>
    <member name="P:Aspose.Imaging.Color.Brown">
      <summary>
            Gets a system-defined color.
            </summary>
      <value>A <see cref="T:Aspose.Imaging.Color" /> representing a system-defined color.</value>
    </member>
    <member name="P:Aspose.Imaging.Color.BurlyWood">
      <summary>
            Gets a system-defined color.
            </summary>
      <value>A <see cref="T:Aspose.Imaging.Color" /> representing a system-defined color.</value>
    </member>
    <member name="P:Aspose.Imaging.Color.CadetBlue">
      <summary>
            Gets a system-defined color.
            </summary>
      <value>A <see cref="T:Aspose.Imaging.Color" /> representing a system-defined color.</value>
    </member>
    <member name="P:Aspose.Imaging.Color.Chartreuse">
      <summary>
            Gets a system-defined color.
            </summary>
      <value>A <see cref="T:Aspose.Imaging.Color" /> representing a system-defined color.</value>
    </member>
    <member name="P:Aspose.Imaging.Color.Chocolate">
      <summary>
            Gets a system-defined color.
            </summary>
      <value>A <see cref="T:Aspose.Imaging.Color" /> representing a system-defined color.</value>
    </member>
    <member name="P:Aspose.Imaging.Color.Coral">
      <summary>
            Gets a system-defined color.
            </summary>
      <value>A <see cref="T:Aspose.Imaging.Color" /> representing a system-defined color.</value>
    </member>
    <member name="P:Aspose.Imaging.Color.CornflowerBlue">
      <summary>
            Gets a system-defined color.
            </summary>
      <value>A <see cref="T:Aspose.Imaging.Color" /> representing a system-defined color.</value>
    </member>
    <member name="P:Aspose.Imaging.Color.Cornsilk">
      <summary>
            Gets a system-defined color.
            </summary>
      <value>A <see cref="T:Aspose.Imaging.Color" /> representing a system-defined color.</value>
    </member>
    <member name="P:Aspose.Imaging.Color.Crimson">
      <summary>
            Gets a system-defined color.
            </summary>
      <value>A <see cref="T:Aspose.Imaging.Color" /> representing a system-defined color.</value>
    </member>
    <member name="P:Aspose.Imaging.Color.Cyan">
      <summary>
            Gets a system-defined color.
            </summary>
      <value>A <see cref="T:Aspose.Imaging.Color" /> representing a system-defined color.</value>
    </member>
    <member name="P:Aspose.Imaging.Color.DarkBlue">
      <summary>
            Gets a system-defined color.
            </summary>
      <value>A <see cref="T:Aspose.Imaging.Color" /> representing a system-defined color.</value>
    </member>
    <member name="P:Aspose.Imaging.Color.DarkCyan">
      <summary>
            Gets a system-defined color.
            </summary>
      <value>A <see cref="T:Aspose.Imaging.Color" /> representing a system-defined color.</value>
    </member>
    <member name="P:Aspose.Imaging.Color.DarkGoldenrod">
      <summary>
            Gets a system-defined color.
            </summary>
      <value>A <see cref="T:Aspose.Imaging.Color" /> representing a system-defined color.</value>
    </member>
    <member name="P:Aspose.Imaging.Color.DarkGray">
      <summary>
            Gets a system-defined color.
            </summary>
      <value>A <see cref="T:Aspose.Imaging.Color" /> representing a system-defined color.</value>
    </member>
    <member name="P:Aspose.Imaging.Color.DarkGreen">
      <summary>
            Gets a system-defined color.
            </summary>
      <value>A <see cref="T:Aspose.Imaging.Color" /> representing a system-defined color.</value>
    </member>
    <member name="P:Aspose.Imaging.Color.DarkKhaki">
      <summary>
            Gets a system-defined color.
            </summary>
      <value>A <see cref="T:Aspose.Imaging.Color" /> representing a system-defined color.</value>
    </member>
    <member name="P:Aspose.Imaging.Color.DarkMagenta">
      <summary>
            Gets a system-defined color.
            </summary>
      <value>A <see cref="T:Aspose.Imaging.Color" /> representing a system-defined color.</value>
    </member>
    <member name="P:Aspose.Imaging.Color.DarkOliveGreen">
      <summary>
            Gets a system-defined color.
            </summary>
      <value>A <see cref="T:Aspose.Imaging.Color" /> representing a system-defined color.</value>
    </member>
    <member name="P:Aspose.Imaging.Color.DarkOrange">
      <summary>
            Gets a system-defined color.
            </summary>
      <value>A <see cref="T:Aspose.Imaging.Color" /> representing a system-defined color.</value>
    </member>
    <member name="P:Aspose.Imaging.Color.DarkOrchid">
      <summary>
            Gets a system-defined color.
            </summary>
      <value>A <see cref="T:Aspose.Imaging.Color" /> representing a system-defined color.</value>
    </member>
    <member name="P:Aspose.Imaging.Color.DarkRed">
      <summary>
            Gets a system-defined color.
            </summary>
      <value>A <see cref="T:Aspose.Imaging.Color" /> representing a system-defined color.</value>
    </member>
    <member name="P:Aspose.Imaging.Color.DarkSalmon">
      <summary>
            Gets a system-defined color.
            </summary>
      <value>A <see cref="T:Aspose.Imaging.Color" /> representing a system-defined color.</value>
    </member>
    <member name="P:Aspose.Imaging.Color.DarkSeaGreen">
      <summary>
            Gets a system-defined color.
            </summary>
      <value>A <see cref="T:Aspose.Imaging.Color" /> representing a system-defined color.</value>
    </member>
    <member name="P:Aspose.Imaging.Color.DarkSlateBlue">
      <summary>
            Gets a system-defined color.
            </summary>
      <value>A <see cref="T:Aspose.Imaging.Color" /> representing a system-defined color.</value>
    </member>
    <member name="P:Aspose.Imaging.Color.DarkSlateGray">
      <summary>
            Gets a system-defined color.
            </summary>
      <value>A <see cref="T:Aspose.Imaging.Color" /> representing a system-defined color.</value>
    </member>
    <member name="P:Aspose.Imaging.Color.DarkTurquoise">
      <summary>
            Gets a system-defined color.
            </summary>
      <value>A <see cref="T:Aspose.Imaging.Color" /> representing a system-defined color.</value>
    </member>
    <member name="P:Aspose.Imaging.Color.DarkViolet">
      <summary>
            Gets a system-defined color.
            </summary>
      <value>A <see cref="T:Aspose.Imaging.Color" /> representing a system-defined color.</value>
    </member>
    <member name="P:Aspose.Imaging.Color.DeepPink">
      <summary>
            Gets a system-defined color.
            </summary>
      <value>A <see cref="T:Aspose.Imaging.Color" /> representing a system-defined color.</value>
    </member>
    <member name="P:Aspose.Imaging.Color.DeepSkyBlue">
      <summary>
            Gets a system-defined color.
            </summary>
      <value>A <see cref="T:Aspose.Imaging.Color" /> representing a system-defined color.</value>
    </member>
    <member name="P:Aspose.Imaging.Color.DimGray">
      <summary>
            Gets a system-defined color.
            </summary>
      <value>A <see cref="T:Aspose.Imaging.Color" /> representing a system-defined color.</value>
    </member>
    <member name="P:Aspose.Imaging.Color.DodgerBlue">
      <summary>
            Gets a system-defined color.
            </summary>
      <value>A <see cref="T:Aspose.Imaging.Color" /> representing a system-defined color.</value>
    </member>
    <member name="P:Aspose.Imaging.Color.Firebrick">
      <summary>
            Gets a system-defined color.
            </summary>
      <value>A <see cref="T:Aspose.Imaging.Color" /> representing a system-defined color.</value>
    </member>
    <member name="P:Aspose.Imaging.Color.FloralWhite">
      <summary>
            Gets a system-defined color.
            </summary>
      <value>A <see cref="T:Aspose.Imaging.Color" /> representing a system-defined color.</value>
    </member>
    <member name="P:Aspose.Imaging.Color.ForestGreen">
      <summary>
            Gets a system-defined color.
            </summary>
      <value>A <see cref="T:Aspose.Imaging.Color" /> representing a system-defined color.</value>
    </member>
    <member name="P:Aspose.Imaging.Color.Fuchsia">
      <summary>
            Gets a system-defined color.
            </summary>
      <value>A <see cref="T:Aspose.Imaging.Color" /> representing a system-defined color.</value>
    </member>
    <member name="P:Aspose.Imaging.Color.Gainsboro">
      <summary>
            Gets a system-defined color.
            </summary>
      <value>A <see cref="T:Aspose.Imaging.Color" /> representing a system-defined color.</value>
    </member>
    <member name="P:Aspose.Imaging.Color.GhostWhite">
      <summary>
            Gets a system-defined color.
            </summary>
      <value>A <see cref="T:Aspose.Imaging.Color" /> representing a system-defined color.</value>
    </member>
    <member name="P:Aspose.Imaging.Color.Gold">
      <summary>
            Gets a system-defined color.
            </summary>
      <value>A <see cref="T:Aspose.Imaging.Color" /> representing a system-defined color.</value>
    </member>
    <member name="P:Aspose.Imaging.Color.Goldenrod">
      <summary>
            Gets a system-defined color.
            </summary>
      <value>A <see cref="T:Aspose.Imaging.Color" /> representing a system-defined color.</value>
    </member>
    <member name="P:Aspose.Imaging.Color.Gray">
      <summary>
            Gets a system-defined color.
            </summary>
      <value>A <see cref="T:Aspose.Imaging.Color" /> structure representing a system-defined color.</value>
    </member>
    <member name="P:Aspose.Imaging.Color.Green">
      <summary>
            Gets a system-defined color.
            </summary>
      <value>A <see cref="T:Aspose.Imaging.Color" /> representing a system-defined color.</value>
    </member>
    <member name="P:Aspose.Imaging.Color.GreenYellow">
      <summary>
            Gets a system-defined color.
            </summary>
      <value>A <see cref="T:Aspose.Imaging.Color" /> representing a system-defined color.</value>
    </member>
    <member name="P:Aspose.Imaging.Color.Honeydew">
      <summary>
            Gets a system-defined color.
            </summary>
      <value>A <see cref="T:Aspose.Imaging.Color" /> representing a system-defined color.</value>
    </member>
    <member name="P:Aspose.Imaging.Color.HotPink">
      <summary>
            Gets a system-defined color.
            </summary>
      <value>A <see cref="T:Aspose.Imaging.Color" /> representing a system-defined color.</value>
    </member>
    <member name="P:Aspose.Imaging.Color.IndianRed">
      <summary>
            Gets a system-defined color.
            </summary>
      <value>A <see cref="T:Aspose.Imaging.Color" /> representing a system-defined color.</value>
    </member>
    <member name="P:Aspose.Imaging.Color.Indigo">
      <summary>
            Gets a system-defined color.
            </summary>
      <value>A <see cref="T:Aspose.Imaging.Color" /> representing a system-defined color.</value>
    </member>
    <member name="P:Aspose.Imaging.Color.Ivory">
      <summary>
            Gets a system-defined color.
            </summary>
      <value>A <see cref="T:Aspose.Imaging.Color" /> representing a system-defined color.</value>
    </member>
    <member name="P:Aspose.Imaging.Color.Khaki">
      <summary>
            Gets a system-defined color.
            </summary>
      <value>A <see cref="T:Aspose.Imaging.Color" /> representing a system-defined color.</value>
    </member>
    <member name="P:Aspose.Imaging.Color.Lavender">
      <summary>
            Gets a system-defined color.
            </summary>
      <value>A <see cref="T:Aspose.Imaging.Color" /> representing a system-defined color.</value>
    </member>
    <member name="P:Aspose.Imaging.Color.LavenderBlush">
      <summary>
            Gets a system-defined color.
            </summary>
      <value>A <see cref="T:Aspose.Imaging.Color" /> representing a system-defined color.</value>
    </member>
    <member name="P:Aspose.Imaging.Color.LawnGreen">
      <summary>
            Gets a system-defined color.
            </summary>
      <value>A <see cref="T:Aspose.Imaging.Color" /> representing a system-defined color.</value>
    </member>
    <member name="P:Aspose.Imaging.Color.LemonChiffon">
      <summary>
            Gets a system-defined color.
            </summary>
      <value>A <see cref="T:Aspose.Imaging.Color" /> representing a system-defined color.</value>
    </member>
    <member name="P:Aspose.Imaging.Color.LightBlue">
      <summary>
            Gets a system-defined color.
            </summary>
      <value>A <see cref="T:Aspose.Imaging.Color" /> representing a system-defined color.</value>
    </member>
    <member name="P:Aspose.Imaging.Color.LightCoral">
      <summary>
            Gets a system-defined color.
            </summary>
      <value>A <see cref="T:Aspose.Imaging.Color" /> representing a system-defined color.</value>
    </member>
    <member name="P:Aspose.Imaging.Color.LightCyan">
      <summary>
            Gets a system-defined color.
            </summary>
      <value>A <see cref="T:Aspose.Imaging.Color" /> representing a system-defined color.</value>
    </member>
    <member name="P:Aspose.Imaging.Color.LightGoldenrodYellow">
      <summary>
            Gets a system-defined color.
            </summary>
      <value>A <see cref="T:Aspose.Imaging.Color" /> representing a system-defined color.</value>
    </member>
    <member name="P:Aspose.Imaging.Color.LightGreen">
      <summary>
            Gets a system-defined color.
            </summary>
      <value>A <see cref="T:Aspose.Imaging.Color" /> representing a system-defined color.</value>
    </member>
    <member name="P:Aspose.Imaging.Color.LightGray">
      <summary>
            Gets a system-defined color.
            </summary>
      <value>A <see cref="T:Aspose.Imaging.Color" /> representing a system-defined color.</value>
    </member>
    <member name="P:Aspose.Imaging.Color.LightPink">
      <summary>
            Gets a system-defined color.
            </summary>
      <value>A <see cref="T:Aspose.Imaging.Color" /> representing a system-defined color.</value>
    </member>
    <member name="P:Aspose.Imaging.Color.LightSalmon">
      <summary>
            Gets a system-defined color.
            </summary>
      <value>A <see cref="T:Aspose.Imaging.Color" /> representing a system-defined color.</value>
    </member>
    <member name="P:Aspose.Imaging.Color.LightSeaGreen">
      <summary>
            Gets a system-defined color.
            </summary>
      <value>A <see cref="T:Aspose.Imaging.Color" /> representing a system-defined color.</value>
    </member>
    <member name="P:Aspose.Imaging.Color.LightSkyBlue">
      <summary>
            Gets a system-defined color.
            </summary>
      <value>A <see cref="T:Aspose.Imaging.Color" /> representing a system-defined color.</value>
    </member>
    <member name="P:Aspose.Imaging.Color.LightSlateGray">
      <summary>
            Gets a system-defined color.
            </summary>
      <value>A <see cref="T:Aspose.Imaging.Color" /> representing a system-defined color.</value>
    </member>
    <member name="P:Aspose.Imaging.Color.LightSteelBlue">
      <summary>
            Gets a system-defined color.
            </summary>
      <value>A <see cref="T:Aspose.Imaging.Color" /> representing a system-defined color.</value>
    </member>
    <member name="P:Aspose.Imaging.Color.LightYellow">
      <summary>
            Gets a system-defined color.
            </summary>
      <value>A <see cref="T:Aspose.Imaging.Color" /> representing a system-defined color.</value>
    </member>
    <member name="P:Aspose.Imaging.Color.Lime">
      <summary>
            Gets a system-defined color.
            </summary>
      <value>A <see cref="T:Aspose.Imaging.Color" /> representing a system-defined color.</value>
    </member>
    <member name="P:Aspose.Imaging.Color.LimeGreen">
      <summary>
            Gets a system-defined color.
            </summary>
      <value>A <see cref="T:Aspose.Imaging.Color" /> representing a system-defined color.</value>
    </member>
    <member name="P:Aspose.Imaging.Color.Linen">
      <summary>
            Gets a system-defined color.
            </summary>
      <value>A <see cref="T:Aspose.Imaging.Color" /> representing a system-defined color.</value>
    </member>
    <member name="P:Aspose.Imaging.Color.Magenta">
      <summary>
            Gets a system-defined color.
            </summary>
      <value>A <see cref="T:Aspose.Imaging.Color" /> representing a system-defined color.</value>
    </member>
    <member name="P:Aspose.Imaging.Color.Maroon">
      <summary>
            Gets a system-defined color.
            </summary>
      <value>A <see cref="T:Aspose.Imaging.Color" /> representing a system-defined color.</value>
    </member>
    <member name="P:Aspose.Imaging.Color.MediumAquamarine">
      <summary>
            Gets a system-defined color.
            </summary>
      <value>A <see cref="T:Aspose.Imaging.Color" /> representing a system-defined color.</value>
    </member>
    <member name="P:Aspose.Imaging.Color.MediumBlue">
      <summary>
            Gets a system-defined color.
            </summary>
      <value>A <see cref="T:Aspose.Imaging.Color" /> representing a system-defined color.</value>
    </member>
    <member name="P:Aspose.Imaging.Color.MediumOrchid">
      <summary>
            Gets a system-defined color.
            </summary>
      <value>A <see cref="T:Aspose.Imaging.Color" /> representing a system-defined color.</value>
    </member>
    <member name="P:Aspose.Imaging.Color.MediumPurple">
      <summary>
            Gets a system-defined color.
            </summary>
      <value>A <see cref="T:Aspose.Imaging.Color" /> representing a system-defined color.</value>
    </member>
    <member name="P:Aspose.Imaging.Color.MediumSeaGreen">
      <summary>
            Gets a system-defined color.
            </summary>
      <value>A <see cref="T:Aspose.Imaging.Color" /> representing a system-defined color.</value>
    </member>
    <member name="P:Aspose.Imaging.Color.MediumSlateBlue">
      <summary>
            Gets a system-defined color.
            </summary>
      <value>A <see cref="T:Aspose.Imaging.Color" /> representing a system-defined color.</value>
    </member>
    <member name="P:Aspose.Imaging.Color.MediumSpringGreen">
      <summary>
            Gets a system-defined color.
            </summary>
      <value>A <see cref="T:Aspose.Imaging.Color" /> representing a system-defined color.</value>
    </member>
    <member name="P:Aspose.Imaging.Color.MediumTurquoise">
      <summary>
            Gets a system-defined color.
            </summary>
      <value>A <see cref="T:Aspose.Imaging.Color" /> representing a system-defined color.</value>
    </member>
    <member name="P:Aspose.Imaging.Color.MediumVioletRed">
      <summary>
            Gets a system-defined color.
            </summary>
      <value>A <see cref="T:Aspose.Imaging.Color" /> representing a system-defined color.</value>
    </member>
    <member name="P:Aspose.Imaging.Color.MidnightBlue">
      <summary>
            Gets a system-defined color.
            </summary>
      <value>A <see cref="T:Aspose.Imaging.Color" /> representing a system-defined color.</value>
    </member>
    <member name="P:Aspose.Imaging.Color.MintCream">
      <summary>
            Gets a system-defined color.
            </summary>
      <value>A <see cref="T:Aspose.Imaging.Color" /> representing a system-defined color.</value>
    </member>
    <member name="P:Aspose.Imaging.Color.MistyRose">
      <summary>
            Gets a system-defined color.
            </summary>
      <value>A <see cref="T:Aspose.Imaging.Color" /> representing a system-defined color.</value>
    </member>
    <member name="P:Aspose.Imaging.Color.Moccasin">
      <summary>
            Gets a system-defined color.
            </summary>
      <value>A <see cref="T:Aspose.Imaging.Color" /> representing a system-defined color.</value>
    </member>
    <member name="P:Aspose.Imaging.Color.NavajoWhite">
      <summary>
            Gets a system-defined color.
            </summary>
      <value>A <see cref="T:Aspose.Imaging.Color" /> representing a system-defined color.</value>
    </member>
    <member name="P:Aspose.Imaging.Color.Navy">
      <summary>
            Gets a system-defined color.
            </summary>
      <value>A <see cref="T:Aspose.Imaging.Color" /> representing a system-defined color.</value>
    </member>
    <member name="P:Aspose.Imaging.Color.OldLace">
      <summary>
            Gets a system-defined color.
            </summary>
      <value>A <see cref="T:Aspose.Imaging.Color" /> representing a system-defined color.</value>
    </member>
    <member name="P:Aspose.Imaging.Color.Olive">
      <summary>
            Gets a system-defined color.
            </summary>
      <value>A <see cref="T:Aspose.Imaging.Color" /> representing a system-defined color.</value>
    </member>
    <member name="P:Aspose.Imaging.Color.OliveDrab">
      <summary>
            Gets a system-defined color.
            </summary>
      <value>A <see cref="T:Aspose.Imaging.Color" /> representing a system-defined color.</value>
    </member>
    <member name="P:Aspose.Imaging.Color.Orange">
      <summary>
            Gets a system-defined color.
            </summary>
      <value>A <see cref="T:Aspose.Imaging.Color" /> representing a system-defined color.</value>
    </member>
    <member name="P:Aspose.Imaging.Color.OrangeRed">
      <summary>
            Gets a system-defined color.
            </summary>
      <value>A <see cref="T:Aspose.Imaging.Color" /> representing a system-defined color.</value>
    </member>
    <member name="P:Aspose.Imaging.Color.Orchid">
      <summary>
            Gets a system-defined color.
            </summary>
      <value>A <see cref="T:Aspose.Imaging.Color" /> representing a system-defined color.</value>
    </member>
    <member name="P:Aspose.Imaging.Color.PaleGoldenrod">
      <summary>
            Gets a system-defined color.
            </summary>
      <value>A <see cref="T:Aspose.Imaging.Color" /> representing a system-defined color.</value>
    </member>
    <member name="P:Aspose.Imaging.Color.PaleGreen">
      <summary>
            Gets a system-defined color.
            </summary>
      <value>A <see cref="T:Aspose.Imaging.Color" /> representing a system-defined color.</value>
    </member>
    <member name="P:Aspose.Imaging.Color.PaleTurquoise">
      <summary>
            Gets a system-defined color.
            </summary>
      <value>A <see cref="T:Aspose.Imaging.Color" /> representing a system-defined color.</value>
    </member>
    <member name="P:Aspose.Imaging.Color.PaleVioletRed">
      <summary>
            Gets a system-defined color.
            </summary>
      <value>A <see cref="T:Aspose.Imaging.Color" /> representing a system-defined color.</value>
    </member>
    <member name="P:Aspose.Imaging.Color.PapayaWhip">
      <summary>
            Gets a system-defined color.
            </summary>
      <value>A <see cref="T:Aspose.Imaging.Color" /> representing a system-defined color.</value>
    </member>
    <member name="P:Aspose.Imaging.Color.PeachPuff">
      <summary>
            Gets a system-defined color.
            </summary>
      <value>A <see cref="T:Aspose.Imaging.Color" /> representing a system-defined color.</value>
    </member>
    <member name="P:Aspose.Imaging.Color.Peru">
      <summary>
            Gets a system-defined color.
            </summary>
      <value>A <see cref="T:Aspose.Imaging.Color" /> representing a system-defined color.</value>
    </member>
    <member name="P:Aspose.Imaging.Color.Pink">
      <summary>
            Gets a system-defined color.
            </summary>
      <value>A <see cref="T:Aspose.Imaging.Color" /> representing a system-defined color.</value>
    </member>
    <member name="P:Aspose.Imaging.Color.Plum">
      <summary>
            Gets a system-defined color.
            </summary>
      <value>A <see cref="T:Aspose.Imaging.Color" /> representing a system-defined color.</value>
    </member>
    <member name="P:Aspose.Imaging.Color.PowderBlue">
      <summary>
            Gets a system-defined color.
            </summary>
      <value>A <see cref="T:Aspose.Imaging.Color" /> representing a system-defined color.</value>
    </member>
    <member name="P:Aspose.Imaging.Color.Purple">
      <summary>
            Gets a system-defined color.
            </summary>
      <value>A <see cref="T:Aspose.Imaging.Color" /> representing a system-defined color.</value>
    </member>
    <member name="P:Aspose.Imaging.Color.Red">
      <summary>
            Gets a system-defined color.
            </summary>
      <value>A <see cref="T:Aspose.Imaging.Color" /> representing a system-defined color.</value>
    </member>
    <member name="P:Aspose.Imaging.Color.RosyBrown">
      <summary>
            Gets a system-defined color.
            </summary>
      <value>A <see cref="T:Aspose.Imaging.Color" /> representing a system-defined color.</value>
    </member>
    <member name="P:Aspose.Imaging.Color.RoyalBlue">
      <summary>
            Gets a system-defined color.
            </summary>
      <value>A <see cref="T:Aspose.Imaging.Color" /> representing a system-defined color.</value>
    </member>
    <member name="P:Aspose.Imaging.Color.SaddleBrown">
      <summary>
            Gets a system-defined color.
            </summary>
      <value>A <see cref="T:Aspose.Imaging.Color" /> representing a system-defined color.</value>
    </member>
    <member name="P:Aspose.Imaging.Color.Salmon">
      <summary>
            Gets a system-defined color.
            </summary>
      <value>A <see cref="T:Aspose.Imaging.Color" /> representing a system-defined color.</value>
    </member>
    <member name="P:Aspose.Imaging.Color.SandyBrown">
      <summary>
            Gets a system-defined color.
            </summary>
      <value>A <see cref="T:Aspose.Imaging.Color" /> representing a system-defined color.</value>
    </member>
    <member name="P:Aspose.Imaging.Color.SeaGreen">
      <summary>
            Gets a system-defined color.
            </summary>
      <value>A <see cref="T:Aspose.Imaging.Color" /> representing a system-defined color.</value>
    </member>
    <member name="P:Aspose.Imaging.Color.SeaShell">
      <summary>
            Gets a system-defined color.
            </summary>
      <value>A <see cref="T:Aspose.Imaging.Color" /> representing a system-defined color.</value>
    </member>
    <member name="P:Aspose.Imaging.Color.Sienna">
      <summary>
            Gets a system-defined color.
            </summary>
      <value>A <see cref="T:Aspose.Imaging.Color" /> representing a system-defined color.</value>
    </member>
    <member name="P:Aspose.Imaging.Color.Silver">
      <summary>
            Gets a system-defined color.
            </summary>
      <value>A <see cref="T:Aspose.Imaging.Color" /> representing a system-defined color.</value>
    </member>
    <member name="P:Aspose.Imaging.Color.SkyBlue">
      <summary>
            Gets a system-defined color.
            </summary>
      <value>A <see cref="T:Aspose.Imaging.Color" /> representing a system-defined color.</value>
    </member>
    <member name="P:Aspose.Imaging.Color.SlateBlue">
      <summary>
            Gets a system-defined color.
            </summary>
      <value>A <see cref="T:Aspose.Imaging.Color" /> representing a system-defined color.</value>
    </member>
    <member name="P:Aspose.Imaging.Color.SlateGray">
      <summary>
            Gets a system-defined color.
            </summary>
      <value>A <see cref="T:Aspose.Imaging.Color" /> representing a system-defined color.</value>
    </member>
    <member name="P:Aspose.Imaging.Color.Snow">
      <summary>
            Gets a system-defined color.
            </summary>
      <value>A <see cref="T:Aspose.Imaging.Color" /> representing a system-defined color.</value>
    </member>
    <member name="P:Aspose.Imaging.Color.SpringGreen">
      <summary>
            Gets a system-defined color.
            </summary>
      <value>A <see cref="T:Aspose.Imaging.Color" /> representing a system-defined color.</value>
    </member>
    <member name="P:Aspose.Imaging.Color.SteelBlue">
      <summary>
            Gets a system-defined color.
            </summary>
      <value>A <see cref="T:Aspose.Imaging.Color" /> representing a system-defined color.</value>
    </member>
    <member name="P:Aspose.Imaging.Color.Tan">
      <summary>
            Gets a system-defined color.
            </summary>
      <value>A <see cref="T:Aspose.Imaging.Color" /> representing a system-defined color.</value>
    </member>
    <member name="P:Aspose.Imaging.Color.Teal">
      <summary>
            Gets a system-defined color.
            </summary>
      <value>A <see cref="T:Aspose.Imaging.Color" /> representing a system-defined color.</value>
    </member>
    <member name="P:Aspose.Imaging.Color.Thistle">
      <summary>
            Gets a system-defined color.
            </summary>
      <value>A <see cref="T:Aspose.Imaging.Color" /> representing a system-defined color.</value>
    </member>
    <member name="P:Aspose.Imaging.Color.Tomato">
      <summary>
            Gets a system-defined color.
            </summary>
      <value>A <see cref="T:Aspose.Imaging.Color" /> representing a system-defined color.</value>
    </member>
    <member name="P:Aspose.Imaging.Color.Turquoise">
      <summary>
            Gets a system-defined color.
            </summary>
      <value>A <see cref="T:Aspose.Imaging.Color" /> representing a system-defined color.</value>
    </member>
    <member name="P:Aspose.Imaging.Color.Violet">
      <summary>
            Gets a system-defined color.
            </summary>
      <value>A <see cref="T:Aspose.Imaging.Color" /> representing a system-defined color.</value>
    </member>
    <member name="P:Aspose.Imaging.Color.Wheat">
      <summary>
            Gets a system-defined color.
            </summary>
      <value>A <see cref="T:Aspose.Imaging.Color" /> representing a system-defined color.</value>
    </member>
    <member name="P:Aspose.Imaging.Color.White">
      <summary>
            Gets a system-defined color.
            </summary>
      <value>A <see cref="T:Aspose.Imaging.Color" /> representing a system-defined color.</value>
    </member>
    <member name="P:Aspose.Imaging.Color.WhiteSmoke">
      <summary>
            Gets a system-defined color.
            </summary>
      <value>A <see cref="T:Aspose.Imaging.Color" /> representing a system-defined color.</value>
    </member>
    <member name="P:Aspose.Imaging.Color.Yellow">
      <summary>
            Gets a system-defined color.
            </summary>
      <value>A <see cref="T:Aspose.Imaging.Color" /> representing a system-defined color.</value>
    </member>
    <member name="P:Aspose.Imaging.Color.YellowGreen">
      <summary>
            Gets a system-defined color.
            </summary>
      <value>A <see cref="T:Aspose.Imaging.Color" /> representing a system-defined color.</value>
    </member>
    <member name="P:Aspose.Imaging.Color.R">
      <summary>
            Gets the red component value of this <see cref="T:Aspose.Imaging.Color" /> structure.
            </summary>
      <value>The red component value of this <see cref="T:Aspose.Imaging.Color" />.</value>
    </member>
    <member name="P:Aspose.Imaging.Color.G">
      <summary>
            Gets the green component value of this <see cref="T:Aspose.Imaging.Color" /> structure.
            </summary>
      <value>The green component value of this <see cref="T:Aspose.Imaging.Color" />.</value>
    </member>
    <member name="P:Aspose.Imaging.Color.B">
      <summary>
            Gets the blue component value of this <see cref="T:Aspose.Imaging.Color" /> structure.
            </summary>
      <value>The blue component value of this <see cref="T:Aspose.Imaging.Color" />.</value>
    </member>
    <member name="P:Aspose.Imaging.Color.A">
      <summary>
            Gets the alpha component value of this <see cref="T:Aspose.Imaging.Color" /> structure.
            </summary>
      <value>The alpha component value of this <see cref="T:Aspose.Imaging.Color" />.</value>
    </member>
    <member name="P:Aspose.Imaging.Color.IsKnownColor">
      <summary>
            Gets a value indicating whether this <see cref="T:Aspose.Imaging.Color" /> structure is a predefined color. Predefined colors are represented by the elements of the <see cref="T:Aspose.Imaging.KnownColor" /> enumeration.
            </summary>
      <value>True if this <see cref="T:Aspose.Imaging.Color" /> was created from a predefined color by using either the <see cref="M:Aspose.Imaging.Color.FromName(System.String)" /> method or the <see cref="M:Aspose.Imaging.Color.FromKnownColor(Aspose.Imaging.KnownColor)" /> method; otherwise, false.</value>
    </member>
    <member name="P:Aspose.Imaging.Color.IsEmpty">
      <summary>
            Gets a value indicating whether this <see cref="T:Aspose.Imaging.Color" /> structure is uninitialized.
            </summary>
      <value>This property returns true if this color is uninitialized; otherwise, false.</value>
    </member>
    <member name="P:Aspose.Imaging.Color.IsNamedColor">
      <summary>
            Gets a value indicating whether this <see cref="T:Aspose.Imaging.Color" /> structure is a named color or a member of the <see cref="T:Aspose.Imaging.KnownColor" /> enumeration.
            </summary>
      <value>True if this <see cref="T:Aspose.Imaging.Color" /> was created by using either the <see cref="M:Aspose.Imaging.Color.FromName(System.String)" /> method or the <see cref="M:Aspose.Imaging.Color.FromKnownColor(Aspose.Imaging.KnownColor)" /> method; otherwise, false.</value>
    </member>
    <member name="P:Aspose.Imaging.Color.Name">
      <summary>
            Gets the name of this <see cref="T:Aspose.Imaging.Color" />.
            </summary>
      <value>The name of this <see cref="T:Aspose.Imaging.Color" />.</value>
    </member>
    <member name="T:Aspose.Imaging.ColorAdjustType">
      <summary>
            Specifies which objects use color adjustment information.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.ColorAdjustType.Default">
      <summary>
            Color adjustment information that is used by all GDI+ objects that do not have their own color adjustment information.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.ColorAdjustType.Bitmap">
      <summary>
            Color adjustment information for Bitmap objects.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.ColorAdjustType.Brush">
      <summary>
            Color adjustment information for Brush objects.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.ColorAdjustType.Pen">
      <summary>
            Color adjustment information for Pen objects.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.ColorAdjustType.Text">
      <summary>
            Color adjustment information for text.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.ColorAdjustType.Count">
      <summary>
            The number of types specified.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.ColorAdjustType.Any">
      <summary>
            The number of types specified.
            </summary>
    </member>
    <member name="T:Aspose.Imaging.ColorBlend">
      <summary>
            Defines arrays of colors and positions used for interpolating color blending in a multicolor gradient. This class cannot be inherited.
            </summary>
    </member>
    <member name="M:Aspose.Imaging.ColorBlend.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.ColorBlend" /> class.
            </summary>
    </member>
    <member name="M:Aspose.Imaging.ColorBlend.#ctor(System.Int32)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.ColorBlend" /> class with the specified number of colors and positions.
            </summary>
      <param name="count">The number of colors and positions in this <see cref="T:Aspose.Imaging.ColorBlend" />.</param>
    </member>
    <member name="M:Aspose.Imaging.ColorBlend.op_Equality(Aspose.Imaging.ColorBlend,Aspose.Imaging.ColorBlend)">
      <summary>
            Tests whether two specified <see cref="T:Aspose.Imaging.ColorBlend" /> classes are different.
            </summary>
      <param name="colorBlend1">The <see cref="T:Aspose.Imaging.ColorBlend" /> that is to the left of the inequality operator.</param>
      <param name="colorBlend2">The <see cref="T:Aspose.Imaging.ColorBlend" /> that is to the right of the inequality operator.</param>
      <returns>True if the two <see cref="T:Aspose.Imaging.ColorBlend" /> classes are different; otherwise, false.</returns>
    </member>
    <member name="M:Aspose.Imaging.ColorBlend.op_Inequality(Aspose.Imaging.ColorBlend,Aspose.Imaging.ColorBlend)">
      <summary>
            Tests whether two specified <see cref="T:Aspose.Imaging.ColorBlend" /> classes are equivalent.
            </summary>
      <param name="colorBlend1">The <see cref="T:Aspose.Imaging.ColorBlend" /> that is to the left of the equality operator.</param>
      <param name="colorBlend2">The <see cref="T:Aspose.Imaging.ColorBlend" /> that is to the right of the equality operator.</param>
      <returns>True if the two <see cref="T:Aspose.Imaging.ColorBlend" /> classes are equal; otherwise, false.</returns>
    </member>
    <member name="M:Aspose.Imaging.ColorBlend.Equals(System.Object)">
      <summary>
            Tests whether the specified object is a <see cref="T:Aspose.Imaging.ColorBlend" /> class and is equivalent to this <see cref="T:Aspose.Imaging.ColorBlend" /> class.
            </summary>
      <param name="obj">The object to test.</param>
      <returns>True if <paramref name="obj" /> is a <see cref="T:Aspose.Imaging.ColorBlend" /> class equivalent to this <see cref="T:Aspose.Imaging.ColorBlend" /> class; otherwise, false.</returns>
    </member>
    <member name="M:Aspose.Imaging.ColorBlend.GetHashCode">
      <summary>
            Returns a hash code for this instance.
            </summary>
      <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
    </member>
    <member name="P:Aspose.Imaging.ColorBlend.Colors">
      <summary>
            Gets or sets an array of colors that represents the colors to use at corresponding positions along a gradient.
            </summary>
      <returns>An array of <see cref="T:Aspose.Imaging.Color" /> structures that represents the colors to use at corresponding positions along a gradient.</returns>
    </member>
    <member name="P:Aspose.Imaging.ColorBlend.Positions">
      <summary>
            Gets or sets the positions along a gradient line.
            </summary>
      <returns>An array of values that specify percentages of distance along the gradient line.</returns>
    </member>
    <member name="T:Aspose.Imaging.ColorChannelFlag">
      <summary>
            Specifies individual channels in the CMYK (cyan, magenta, yellow, black) color space. This enumeration is used by the SetOutputChannel methods.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.ColorChannelFlag.ColorChannelC">
      <summary>
            The cyan color channel.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.ColorChannelFlag.ColorChannelM">
      <summary>
            The magenta color channel.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.ColorChannelFlag.ColorChannelY">
      <summary>
            The yellow color channel.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.ColorChannelFlag.ColorChannelK">
      <summary>
            The black color channel.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.ColorChannelFlag.ColorChannelLast">
      <summary>
            The last selected channel should be used.
            </summary>
    </member>
    <member name="T:Aspose.Imaging.ColorPalette">
      <summary>
            Defines an array of colors that make up a color palette. The colors are 32-bit ARGB colors. Not inheritable.
            </summary>
    </member>
    <member name="T:Aspose.Imaging.IColorPalette">
      <summary>
            The color palette interface.
            </summary>
    </member>
    <member name="M:Aspose.Imaging.IColorPalette.GetNearestColorIndex(Aspose.Imaging.Color)">
      <summary>
            Gets the index of the nearest color.
            </summary>
      <param name="color">The color.</param>
      <returns>The index of the nearest color.</returns>
    </member>
    <member name="M:Aspose.Imaging.IColorPalette.GetColor(System.Int32)">
      <summary>
            Gets the palette color by index.
            </summary>
      <param name="index">The palette color index.</param>
      <returns>The color palette entry specified by the <paramref name="index" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException"> if color palette <paramref name="index" /> specified is out of the palette entries range.</exception>
    </member>
    <member name="P:Aspose.Imaging.IColorPalette.EntriesCount">
      <summary>
            Gets the entries count.
            </summary>
      <value>The entries count.</value>
    </member>
    <member name="P:Aspose.Imaging.IColorPalette.Entries">
      <summary>
            Gets an array of <see cref="T:Aspose.Imaging.Color" /> structures.
            </summary>
      <value>The entries.</value>
      <returns>
            The array of <see cref="T:Aspose.Imaging.Color" /> structure that make up this <see cref="T:Aspose.Imaging.ColorPalette" />.
            </returns>
    </member>
    <member name="P:Aspose.Imaging.IColorPalette.IsCompactPalette">
      <summary>
            Gets a value indicating whether compact palette is used.
            </summary>
      <value>
        <c>true</c> if compact palette is used; otherwise, <c>false</c>.</value>
      <remarks>Compact palette means that image will contain only the specified palette entries if possible or in other words the image will be more compact and occupy less space;
            otherwise there will be 2^BitsPerPixel entries and image will reserve more space for all possible palette entries.
            Setting this value to true and changing palette entries may cause performance penalty since data movement may occur so use it carefully.</remarks>
    </member>
    <member name="M:Aspose.Imaging.ColorPalette.#ctor(Aspose.Imaging.Color[],System.Boolean)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.ColorPalette" /> class.
            </summary>
      <param name="entries">The color palette entries.</param>
      <param name="isCompactPalette">Indicating whether compact it palette.</param>
    </member>
    <member name="M:Aspose.Imaging.ColorPalette.#ctor(Aspose.Imaging.Color[])">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.ColorPalette" /> and IsCompactPalette is false.
            </summary>
      <param name="entries">The color palette entries.</param>
    </member>
    <member name="M:Aspose.Imaging.ColorPalette.CopyPalette(Aspose.Imaging.IColorPalette,System.Boolean)">
      <summary>
            Copies the palette.
            </summary>
      <param name="colorPalette">The color palette.</param>
      <param name="useCompactPalette">Indicating whether compact palette.</param>
      <returns>The newly created and copied palette or null if null palette passed.</returns>
    </member>
    <member name="M:Aspose.Imaging.ColorPalette.CopyPalette(Aspose.Imaging.IColorPalette)">
      <summary>
            Copies the palette.
            </summary>
      <param name="colorPalette">The color palette.</param>
      <returns>The newly created and copied palette or null if null palette passed.</returns>
    </member>
    <member name="M:Aspose.Imaging.ColorPalette.GetNearestColorIndex(Aspose.Imaging.Color)">
      <summary>
            Gets the index of the nearest color.
            </summary>
      <param name="color">The color.</param>
      <returns>The index of the nearest color.</returns>
    </member>
    <member name="M:Aspose.Imaging.ColorPalette.GetColor(System.Int32)">
      <summary>
            Gets the palette color by index.
            </summary>
      <param name="index">The palette color index.</param>
      <returns>The color palette entry specified by the <paramref name="index" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException"> if color palette <paramref name="index" /> specified is out of the palette entries range.</exception>
    </member>
    <member name="P:Aspose.Imaging.ColorPalette.EntriesCount">
      <summary>
            Gets the entries count.
            </summary>
      <value>The entries count.</value>
    </member>
    <member name="P:Aspose.Imaging.ColorPalette.Entries">
      <summary>
            Gets an array of <see cref="T:Aspose.Imaging.Color" /> structures.
            </summary>
      <value>The entries.</value>
      <returns>
            The array of <see cref="T:Aspose.Imaging.Color" /> structure that make up this <see cref="T:Aspose.Imaging.ColorPalette" />.
            </returns>
    </member>
    <member name="P:Aspose.Imaging.ColorPalette.IsCompactPalette">
      <summary>
            Gets or sets a value indicating whether compact palette is used.
            </summary>
      <value>
        <c>true</c> if compact palette is used; otherwise, <c>false</c>.</value>
      <remarks>Compact palette means that image will contain only the specified palette entries if possible or in other words the image will be more compact and occupy less space;
            otherwise there will be 2^BitsPerPixel entries and image will reserve more space for all possible palette entries.
            Setting this value to true and changing palette entries may cause performance penalty since data movement may occur so use it carefully.</remarks>
    </member>
    <member name="T:Aspose.Imaging.ColorPaletteHelper">
      <summary>
            Helper class for color palettes manipulation.
            </summary>
    </member>
    <member name="M:Aspose.Imaging.ColorPaletteHelper.CreateMonochrome">
      <summary>
            Creates a monochrome color palette containing 2 colors only.
            </summary>
      <returns>
            Color palette for monochrome images.
            </returns>
    </member>
    <member name="M:Aspose.Imaging.ColorPaletteHelper.Create4Bit">
      <summary>
            Creates the 4 bit color palette.
            </summary>
      <returns>The 4 bit color palette.</returns>
    </member>
    <member name="M:Aspose.Imaging.ColorPaletteHelper.Create4BitGrayscale(System.Boolean)">
      <summary>
            Creates the 4 bit grayscale palette.
            </summary>
      <param name="minIsWhite">if set to <c>true</c> the palette starts with white color, otherwise it starts with black color.</param>
      <returns>
            The 4 bit grayscale palette.
            </returns>
    </member>
    <member name="M:Aspose.Imaging.ColorPaletteHelper.Create8Bit">
      <summary>
            Creates the 8 bit color palette.
            </summary>
      <returns>The 8 bit color palette.</returns>
    </member>
    <member name="M:Aspose.Imaging.ColorPaletteHelper.Create8BitGrayscale(System.Boolean)">
      <summary>
            Creates the 8 bit grayscale palette.
            </summary>
      <param name="minIsWhite">if set to <c>true</c> the palette starts with white color, otherwise it starts with black color.</param>
      <returns>
            The 8 bit grayscale palette.
            </returns>
    </member>
    <member name="M:Aspose.Imaging.ColorPaletteHelper.GetCloseImagePalette(Aspose.Imaging.RasterImage,System.Int32)">
      <summary>
            Gets color palette from raster image (palletizes image) in case the image does not have one. In case palette exists it will be used instead performing calculations.
            </summary>
      <param name="image">The raster image.</param>
      <param name="entriesCount">The desired entries count.</param>
      <returns>
            The color palette which starts with the most frequent colors from the <paramref name="image" /> and contains <paramref name="entriesCount" /> entries.
            </returns>
    </member>
    <member name="M:Aspose.Imaging.ColorPaletteHelper.GetUniformColorPalette(Aspose.Imaging.RasterImage)">
      <summary>
            Get uniform 256 color palette.
            </summary>
      <param name="image">
            The image.
            </param>
      <returns>
            The <see cref="T:Aspose.Imaging.ColorPalette" />.
            </returns>
    </member>
    <member name="M:Aspose.Imaging.ColorPaletteHelper.GetDownscalePalette(Aspose.Imaging.RasterImage)">
      <summary>
            Get 256 color palette, composed from upper bits of initial image color values.
            </summary>
      <param name="image">
            The image.
            </param>
      <returns>
            The <see cref="T:Aspose.Imaging.ColorPalette" />.
            </returns>
    </member>
    <member name="T:Aspose.Imaging.CompositingQuality">
      <summary>
            Specifies the quality level to use during compositing.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.CompositingQuality.Invalid">
      <summary>
            Invalid quality.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.CompositingQuality.Default">
      <summary>
            Default quality.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.CompositingQuality.HighSpeed">
      <summary>
            High speed, low quality.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.CompositingQuality.HighQuality">
      <summary>
            High quality, low speed compositing.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.CompositingQuality.GammaCorrected">
      <summary>
            Gamma correction is used.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.CompositingQuality.AssumeLinear">
      <summary>
            Assume linear values.
            </summary>
    </member>
    <member name="T:Aspose.Imaging.IImageCreator">
      <summary>
            The image creator.
            </summary>
    </member>
    <member name="M:Aspose.Imaging.IImageCreator.Create(Aspose.Imaging.StreamContainer,Aspose.Imaging.ImageOptionsBase,System.Int32,System.Int32)">
      <summary>
            Creates a new image instance with <paramref name="imageOptions"></paramref>.
            </summary>
      <param name="streamContainer">The stream container to create image data in.</param>
      <param name="imageOptions">The image options.</param>
      <param name="width">width of new image</param>
      <param name="height">height of new image</param>
      <returns>
            A new image instance.
            </returns>
    </member>
    <member name="T:Aspose.Imaging.IImageCreatorDescriptor">
      <summary>
            The image creator descriptor specifying the creator properties. The creator descriptor is used to overcome
            the necessity to contain each image creator instance in memory and multithreading issues.
            </summary>
    </member>
    <member name="T:Aspose.Imaging.IImageDescriptor">
      <summary>
            The image descriptor. Contains base properties and methods for all other image descriptor types.
            </summary>
    </member>
    <member name="P:Aspose.Imaging.IImageDescriptor.SupportedFormat">
      <summary>
            Gets the supported format.
            </summary>
      <value>The supported format.</value>
    </member>
    <member name="M:Aspose.Imaging.IImageCreatorDescriptor.CanCreate(Aspose.Imaging.ImageOptionsBase)">
      <summary>
            Determines whether image creator can create a new image using the <paramref name="imageOptions" />.
            </summary>
      <param name="imageOptions">The image options.</param>
      <returns>
        <c>True</c> if image creator created by this descriptor can create image data using the specified <paramref name="imageOptions" />; otherwise, <c>false</c>.
            </returns>
    </member>
    <member name="M:Aspose.Imaging.IImageCreatorDescriptor.CreateInstance">
      <summary>
            Creates a new creator instance.
            </summary>
      <returns>A new creator instance.</returns>
    </member>
    <member name="T:Aspose.Imaging.CustomLineCap">
      <summary>
            Encapsulates a custom user-defined line cap.
            </summary>
    </member>
    <member name="M:Aspose.Imaging.CustomLineCap.#ctor(Aspose.Imaging.GraphicsPath,Aspose.Imaging.GraphicsPath)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.CustomLineCap" /> class with the specified outline and fill.
            </summary>
      <param name="fillPath">A <see cref="T:Aspose.Imaging.GraphicsPath" /> object that defines the fill for the custom cap.</param>
      <param name="strokePath">A <see cref="T:Aspose.Imaging.GraphicsPath" /> object that defines the outline of the custom cap.</param>
    </member>
    <member name="M:Aspose.Imaging.CustomLineCap.#ctor(Aspose.Imaging.GraphicsPath,Aspose.Imaging.GraphicsPath,Aspose.Imaging.LineCap)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.CustomLineCap" /> class from the specified existing <see cref="T:Aspose.Imaging.LineCap" /> enumeration with the specified outline and fill.
            </summary>
      <param name="fillPath">A <see cref="T:Aspose.Imaging.GraphicsPath" /> object that defines the fill for the custom cap.</param>
      <param name="strokePath">A <see cref="T:Aspose.Imaging.GraphicsPath" /> object that defines the outline of the custom cap.</param>
      <param name="baseCap">The line cap from which to create the custom cap.</param>
    </member>
    <member name="M:Aspose.Imaging.CustomLineCap.#ctor(Aspose.Imaging.GraphicsPath,Aspose.Imaging.GraphicsPath,Aspose.Imaging.LineCap,System.Single)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.CustomLineCap" /> class from the specified existing <see cref="T:Aspose.Imaging.LineCap" /> enumeration with the specified outline, fill, and inset.
            </summary>
      <param name="fillPath">A <see cref="T:Aspose.Imaging.GraphicsPath" /> object that defines the fill for the custom cap.</param>
      <param name="strokePath">A <see cref="T:Aspose.Imaging.GraphicsPath" /> object that defines the outline of the custom cap.</param>
      <param name="baseCap">The line cap from which to create the custom cap.</param>
      <param name="baseInset">The distance between the cap and the line.</param>
    </member>
    <member name="M:Aspose.Imaging.CustomLineCap.SetStrokeCaps(Aspose.Imaging.LineCap,Aspose.Imaging.LineCap)">
      <summary>
            Sets the caps used to start and end lines that make up this custom cap.
            </summary>
      <param name="startCap">The <see cref="T:Aspose.Imaging.LineCap" /> enumeration used at the beginning of a line within this cap.</param>
      <param name="endCap">The <see cref="T:Aspose.Imaging.LineCap" /> enumeration used at the end of a line within this cap.</param>
    </member>
    <member name="M:Aspose.Imaging.CustomLineCap.GetStrokeCaps(Aspose.Imaging.LineCap@,Aspose.Imaging.LineCap@)">
      <summary>
            Gets the caps used to start and end lines that make up this custom cap.
            </summary>
      <param name="startCap">The <see cref="T:Aspose.Imaging.LineCap" /> enumeration used at the beginning of a line within this cap.</param>
      <param name="endCap">The <see cref="T:Aspose.Imaging.LineCap" /> enumeration used at the end of a line within this cap.</param>
    </member>
    <member name="P:Aspose.Imaging.CustomLineCap.StrokeJoin">
      <summary>
            Gets or sets the <see cref="T:Aspose.Imaging.LineJoin" /> enumeration that determines how lines that compose this <see cref="T:Aspose.Imaging.CustomLineCap" /> object are joined.
            </summary>
      <value>The <see cref="T:Aspose.Imaging.LineJoin" /> enumeration this <see cref="T:Aspose.Imaging.CustomLineCap" /> object uses to join lines.</value>
    </member>
    <member name="P:Aspose.Imaging.CustomLineCap.BaseCap">
      <summary>
            Gets or sets the <see cref="T:Aspose.Imaging.LineCap" /> enumeration on which this <see cref="T:Aspose.Imaging.CustomLineCap" /> is based.
            </summary>
      <value>The <see cref="T:Aspose.Imaging.LineCap" /> enumeration on which this <see cref="T:Aspose.Imaging.CustomLineCap" /> is based.</value>
    </member>
    <member name="P:Aspose.Imaging.CustomLineCap.BaseInset">
      <summary>
            Gets or sets the distance between the cap and the line.
            </summary>
      <value>The distance between the beginning of the cap and the end of the line.</value>
    </member>
    <member name="P:Aspose.Imaging.CustomLineCap.WidthScale">
      <summary>
            Gets or sets the amount by which to scale this <see cref="T:Aspose.Imaging.CustomLineCap" /> Class object with respect to the width of the <see cref="T:System.Drawing.Pen" /> object.
            </summary>
      <value>The amount by which to scale the cap.</value>
    </member>
    <member name="T:Aspose.Imaging.DashCap">
      <summary>
            Specifies the type of graphic shape to use on both ends of each dash in a dashed line.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.DashCap.Flat">
      <summary>
            Specifies a square cap that squares off both ends of each dash.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.DashCap.Round">
      <summary>
            Specifies a circular cap that rounds off both ends of each dash.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.DashCap.Triangle">
      <summary>
            Specifies a triangular cap that points both ends of each dash.
            </summary>
    </member>
    <member name="T:Aspose.Imaging.DashStyle">
      <summary>
            Specifies the style of dashed lines drawn with a <see cref="T:Aspose.Imaging.Pen" /> object.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.DashStyle.Solid">
      <summary>
            Specifies a solid line.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.DashStyle.Dash">
      <summary>
            Specifies a line consisting of dashes.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.DashStyle.Dot">
      <summary>
            Specifies a line consisting of dots.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.DashStyle.DashDot">
      <summary>
            Specifies a line consisting of a repeating pattern of dash-dot.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.DashStyle.DashDotDot">
      <summary>
            Specifies a line consisting of a repeating pattern of dash-dot-dot.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.DashStyle.Custom">
      <summary>
            Specifies a user-defined custom dash style.
            </summary>
    </member>
    <member name="T:Aspose.Imaging.DataRecoveryMode">
      <summary>
            The data recovery mode.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.DataRecoveryMode.None">
      <summary>
            No data recovery is implied. Whenever the file format has some corrupted data the appropriate exception is thrown.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.DataRecoveryMode.ConsistentRecover">
      <summary>
            The consistent recovery mode tries to recover all data as long as corruption does not break the file format and allows correct further processing.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.DataRecoveryMode.MaximalRecover">
      <summary>
            The maximal recovery mode recovers all data even if the file format has corrupted structure and further processing may yield unattended effects.
            </summary>
    </member>
    <member name="T:Aspose.Imaging.DataStreamSupporter">
      <summary>
            The data stream container.
            </summary>
    </member>
    <member name="M:Aspose.Imaging.DataStreamSupporter.CacheData">
      <summary>
            Caches the data and ensures no additional data loading will be performed from the underlying <see cref="P:Aspose.Imaging.DataStreamSupporter.DataStreamContainer" />.
            </summary>
    </member>
    <member name="M:Aspose.Imaging.DataStreamSupporter.Save">
      <summary>
            Saves the object's data to the current <see cref="T:Aspose.Imaging.DataStreamSupporter" />.
            </summary>
    </member>
    <member name="M:Aspose.Imaging.DataStreamSupporter.Save(System.IO.Stream)">
      <summary>
            Saves the object's data to the specified stream.
            </summary>
      <param name="stream">The stream to save the object's data to.</param>
    </member>
    <member name="M:Aspose.Imaging.DataStreamSupporter.SaveData(System.IO.Stream)">
      <summary>
            Saves the data.
            </summary>
      <param name="stream">The stream to save data to.</param>
    </member>
    <member name="M:Aspose.Imaging.DataStreamSupporter.Save(System.String)">
      <summary>
            Saves the object's data to the specified file location.
            </summary>
      <param name="filePath">The file path to save the object's data to.</param>
    </member>
    <member name="M:Aspose.Imaging.DataStreamSupporter.Save(System.String,System.Boolean)">
      <summary>
            Saves the object's data to the specified file location.
            </summary>
      <param name="filePath">The file path to save the object's data to.</param>
      <param name="overWrite">if set to <c>true</c> over write the file contents, otherwise append will occur.</param>
    </member>
    <member name="M:Aspose.Imaging.DataStreamSupporter.ReleaseManagedResources">
      <summary>
            Releases the managed resources. Make sure no unmanaged resources are released here, since they may have been already released.
            </summary>
    </member>
    <member name="M:Aspose.Imaging.DataStreamSupporter.OnDataStreamContainerChanging(Aspose.Imaging.StreamContainer)">
      <summary>
            Called when data stream container is changing.
            </summary>
      <param name="streamContainer">The stream container.</param>
    </member>
    <member name="P:Aspose.Imaging.DataStreamSupporter.DataStreamContainer">
      <summary>
            Gets the object's data stream.
            </summary>
      <value>The object's data stream.</value>
    </member>
    <member name="P:Aspose.Imaging.DataStreamSupporter.IsCached">
      <summary>
            Gets a value indicating whether object's data is cached currently and no data readig is required.
            </summary>
      <value>
        <c>true</c> if object's data is cached; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="T:Aspose.Imaging.DitheringMethods">
      <summary>
            The dithering methods used to control color conversion.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.DitheringMethods.PaletteIgnore">
      <summary>
            The palette is ignored
            </summary>
    </member>
    <member name="F:Aspose.Imaging.DitheringMethods.PaletteConversion">
      <summary>
            The palette is not ignored and wise color conversion should be applied.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.DitheringMethods.CustomConverter">
      <summary>
            The custom converter.
            </summary>
    </member>
    <member name="T:Aspose.Imaging.Dithering.DitheringMethod">
      <summary>
            Dithering method.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Dithering.DitheringMethod.None">
      <summary>
            No dithering.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Dithering.DitheringMethod.FloydSteinbergDithering">
      <summary>
            The Floyd-Steinberg dithering.
            </summary>
    </member>
    <member name="T:Aspose.Imaging.Dithering.DitheringMode">
      <summary>
            Dithering settings to be applied to image upon saving.
            </summary>
    </member>
    <member name="P:Aspose.Imaging.Dithering.DitheringMode.Method">
      <summary>
            Dithering algorithm selection.
            </summary>
    </member>
    <member name="P:Aspose.Imaging.Dithering.DitheringMode.Bits">
      <summary>
            The sampling factor of dithered image.
            </summary>
    </member>
    <member name="P:Aspose.Imaging.Dithering.DitheringMode.CustomPalette">
      <summary>
            The custom palette for dithering.
            </summary>
    </member>
    <member name="T:Aspose.Imaging.Dithering.NamespaceDoc">
      <summary>
            The namespace provides different helper classes for color dithering.
            </summary>
    </member>
    <member name="T:Aspose.Imaging.Exceptions.CompressorException">
      <summary>
            The compressor exception.
            </summary>
    </member>
    <member name="T:Aspose.Imaging.Exceptions.FrameworkException">
      <summary>
            The imaging framework exception. This class is a core class for all Aspose.Imaging exceptions.
            Introduced to discriminate between the exceptions thrown by the Aspose.Imaging engine and all other exception types.
            </summary>
    </member>
    <member name="M:Aspose.Imaging.Exceptions.FrameworkException.#ctor(System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.Exceptions.FrameworkException" /> class.
            </summary>
      <param name="message">The message.</param>
    </member>
    <member name="M:Aspose.Imaging.Exceptions.FrameworkException.#ctor(System.String,System.Exception)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.Exceptions.FrameworkException" /> class.
            </summary>
      <param name="message">The message.</param>
      <param name="innerException">The inner exception.</param>
    </member>
    <member name="M:Aspose.Imaging.Exceptions.CompressorException.#ctor(System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.Exceptions.CompressorException" /> class.
            </summary>
      <param name="message">The exception message.</param>
    </member>
    <member name="M:Aspose.Imaging.Exceptions.CompressorException.#ctor(System.String,System.Exception)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.Exceptions.CompressorException" /> class.
            </summary>
      <param name="message">The exception message.</param>
      <param name="innerException">The inner exception.</param>
    </member>
    <member name="T:Aspose.Imaging.Exceptions.Compressors.DeflateCompressorException">
      <summary>
            The Deflate compressor exception.
            </summary>
    </member>
    <member name="M:Aspose.Imaging.Exceptions.Compressors.DeflateCompressorException.#ctor(System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.Exceptions.Compressors.DeflateCompressorException" /> class.
            </summary>
      <param name="message">The exception message.</param>
    </member>
    <member name="M:Aspose.Imaging.Exceptions.Compressors.DeflateCompressorException.#ctor(System.String,System.Exception)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.Exceptions.Compressors.DeflateCompressorException" /> class.
            </summary>
      <param name="message">The exception message.</param>
      <param name="innerException">The inner exception.</param>
    </member>
    <member name="T:Aspose.Imaging.Exceptions.Compressors.LzwCompressorException">
      <summary>
            The lzw compressor exception.
            </summary>
    </member>
    <member name="M:Aspose.Imaging.Exceptions.Compressors.LzwCompressorException.#ctor(System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.Exceptions.Compressors.LzwCompressorException" /> class.
            </summary>
      <param name="message">The exception message.</param>
    </member>
    <member name="M:Aspose.Imaging.Exceptions.Compressors.LzwCompressorException.#ctor(System.String,System.Exception)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.Exceptions.Compressors.LzwCompressorException" /> class.
            </summary>
      <param name="message">The exception message.</param>
      <param name="innerException">The inner exception.</param>
    </member>
    <member name="T:Aspose.Imaging.Exceptions.Compressors.NamespaceDoc">
      <summary>
            The namespace contains exceptions thrown by one of the compression algorithms supported.
            </summary>
    </member>
    <member name="T:Aspose.Imaging.Exceptions.Compressors.RleCompressorException">
      <summary>
            The rle compressor exception.
            </summary>
    </member>
    <member name="M:Aspose.Imaging.Exceptions.Compressors.RleCompressorException.#ctor(System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.Exceptions.Compressors.RleCompressorException" /> class.
            </summary>
      <param name="message">The exception message.</param>
    </member>
    <member name="M:Aspose.Imaging.Exceptions.Compressors.RleCompressorException.#ctor(System.String,System.Exception)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.Exceptions.Compressors.RleCompressorException" /> class.
            </summary>
      <param name="message">The exception message.</param>
      <param name="innerException">The inner exception.</param>
    </member>
    <member name="T:Aspose.Imaging.Exceptions.ImageCreateException">
      <summary>
            The image create exception. Occurs during image creation.
            </summary>
    </member>
    <member name="T:Aspose.Imaging.Exceptions.ImageException">
      <summary>
            The image exception.
            </summary>
    </member>
    <member name="M:Aspose.Imaging.Exceptions.ImageException.#ctor(System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.Exceptions.ImageException" /> class.
            </summary>
      <param name="message">The exception message.</param>
    </member>
    <member name="M:Aspose.Imaging.Exceptions.ImageException.#ctor(System.String,System.Exception)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.Exceptions.ImageException" /> class.
            </summary>
      <param name="message">The exception message.</param>
      <param name="innerException">The inner exception.</param>
    </member>
    <member name="M:Aspose.Imaging.Exceptions.ImageCreateException.#ctor(System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.Exceptions.ImageCreateException" /> class.
            </summary>
      <param name="message">The exception message.</param>
    </member>
    <member name="M:Aspose.Imaging.Exceptions.ImageCreateException.#ctor(System.String,System.Exception)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.Exceptions.ImageCreateException" /> class.
            </summary>
      <param name="message">The exception message.</param>
      <param name="innerException">The inner exception.</param>
    </member>
    <member name="T:Aspose.Imaging.Exceptions.ImageFormats.BmpImageException">
      <summary>
            The bmp image exception.
            </summary>
    </member>
    <member name="M:Aspose.Imaging.Exceptions.ImageFormats.BmpImageException.#ctor(System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.Exceptions.ImageFormats.BmpImageException" /> class.
            </summary>
      <param name="message">The exception message.</param>
    </member>
    <member name="M:Aspose.Imaging.Exceptions.ImageFormats.BmpImageException.#ctor(System.String,System.Exception)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.Exceptions.ImageFormats.BmpImageException" /> class.
            </summary>
      <param name="message">The exception message.</param>
      <param name="innerException">The inner exception.</param>
    </member>
    <member name="T:Aspose.Imaging.Exceptions.ImageFormats.GifImageException">
      <summary>
            The Gif image exception.
            </summary>
    </member>
    <member name="M:Aspose.Imaging.Exceptions.ImageFormats.GifImageException.#ctor(System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.Exceptions.ImageFormats.GifImageException" /> class.
            </summary>
      <param name="message">The exception message.</param>
    </member>
    <member name="M:Aspose.Imaging.Exceptions.ImageFormats.GifImageException.#ctor(System.String,System.Exception)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.Exceptions.ImageFormats.GifImageException" /> class.
            </summary>
      <param name="message">The exception message.</param>
      <param name="innerException">The inner exception.</param>
    </member>
    <member name="T:Aspose.Imaging.Exceptions.ImageFormats.JpegException">
      <summary>
            Exceptions for Jpeg files
            </summary>
    </member>
    <member name="M:Aspose.Imaging.Exceptions.ImageFormats.JpegException.#ctor(System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.Exceptions.ImageFormats.JpegException" /> class.
            </summary>
      <param name="message">The exception message.</param>
    </member>
    <member name="M:Aspose.Imaging.Exceptions.ImageFormats.JpegException.#ctor(System.String,System.Exception)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.Exceptions.ImageFormats.JpegException" /> class.
            </summary>
      <param name="message">The message.</param>
      <param name="innerException">The inner exception.</param>
    </member>
    <member name="T:Aspose.Imaging.Exceptions.ImageFormats.NamespaceDoc">
      <summary>
            The namespace contains exceptions thrown by one of the file formats supported.
            </summary>
    </member>
    <member name="T:Aspose.Imaging.Exceptions.ImageFormats.PsdImageException">
      <summary>
            The psd image exception.
            </summary>
    </member>
    <member name="M:Aspose.Imaging.Exceptions.ImageFormats.PsdImageException.#ctor(System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.Exceptions.ImageFormats.PsdImageException" /> class.
            </summary>
      <param name="message">The exception message.</param>
    </member>
    <member name="M:Aspose.Imaging.Exceptions.ImageFormats.PsdImageException.#ctor(System.String,System.Exception)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.Exceptions.ImageFormats.PsdImageException" /> class.
            </summary>
      <param name="message">The exception message.</param>
      <param name="innerException">The inner exception.</param>
    </member>
    <member name="T:Aspose.Imaging.Exceptions.ImageFormats.PsdImageResourceException">
      <summary>
            The psd image resource exception.
            </summary>
    </member>
    <member name="M:Aspose.Imaging.Exceptions.ImageFormats.PsdImageResourceException.#ctor(System.String,Aspose.Imaging.FileFormats.Psd.ResourceBlock)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.Exceptions.ImageFormats.PsdImageResourceException" /> class.
            </summary>
      <param name="message">The exception message.</param>
      <param name="resource">The resource.</param>
    </member>
    <member name="M:Aspose.Imaging.Exceptions.ImageFormats.PsdImageResourceException.#ctor(System.String,Aspose.Imaging.FileFormats.Psd.ResourceBlock,System.Exception)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.Exceptions.ImageFormats.PsdImageResourceException" /> class.
            </summary>
      <param name="message">The exception message.</param>
      <param name="resource">The resource.</param>
      <param name="innerException">The inner exception.</param>
    </member>
    <member name="P:Aspose.Imaging.Exceptions.ImageFormats.PsdImageResourceException.Resource">
      <summary>
            Gets the psd resource which caused this exception.
            </summary>
      <value>The resource.</value>
    </member>
    <member name="T:Aspose.Imaging.Exceptions.ImageFormats.TiffImageException">
      <summary>
            The Tiff image exception
            </summary>
    </member>
    <member name="M:Aspose.Imaging.Exceptions.ImageFormats.TiffImageException.#ctor(System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.Exceptions.ImageFormats.TiffImageException" /> class.
            </summary>
      <param name="message">The exception message.</param>
    </member>
    <member name="M:Aspose.Imaging.Exceptions.ImageFormats.TiffImageException.#ctor(System.String,System.Exception)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.Exceptions.ImageFormats.TiffImageException" /> class.
            </summary>
      <param name="message">The message.</param>
      <param name="innerException">The inner exception.</param>
    </member>
    <member name="M:Aspose.Imaging.Exceptions.ImageFormats.TiffImageException.#ctor(System.String,Aspose.Imaging.ImageOptions.TiffOptionsError)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.Exceptions.ImageFormats.TiffImageException" /> class.
            </summary>
      <param name="message">The message.</param>
      <param name="error">The error.</param>
    </member>
    <member name="M:Aspose.Imaging.Exceptions.ImageFormats.TiffImageException.#ctor(Aspose.Imaging.ImageOptions.TiffOptionsError)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.Exceptions.ImageFormats.TiffImageException" /> class.
            </summary>
      <param name="error">The error.</param>
    </member>
    <member name="P:Aspose.Imaging.Exceptions.ImageFormats.TiffImageException.OptionsError">
      <summary>
            Gets the tiff options error.
            </summary>
      <value>
            The tiff options error.
            </value>
    </member>
    <member name="T:Aspose.Imaging.Exceptions.ImageLoadException">
      <summary>
            The image load exception. Occurs during image loading.
            </summary>
    </member>
    <member name="M:Aspose.Imaging.Exceptions.ImageLoadException.#ctor(System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.Exceptions.ImageLoadException" /> class.
            </summary>
      <param name="message">The exception message.</param>
    </member>
    <member name="M:Aspose.Imaging.Exceptions.ImageLoadException.#ctor(System.String,System.Exception)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.Exceptions.ImageLoadException" /> class.
            </summary>
      <param name="message">The exception message.</param>
      <param name="innerException">The inner exception.</param>
    </member>
    <member name="T:Aspose.Imaging.Exceptions.ImageSaveException">
      <summary>
            The image save exception. Occurs during image saving.
            </summary>
    </member>
    <member name="M:Aspose.Imaging.Exceptions.ImageSaveException.#ctor(System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.Exceptions.ImageSaveException" /> class.
            </summary>
      <param name="message">The exception message.</param>
    </member>
    <member name="M:Aspose.Imaging.Exceptions.ImageSaveException.#ctor(System.String,System.Exception)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.Exceptions.ImageSaveException" /> class.
            </summary>
      <param name="message">The exception message.</param>
      <param name="innerException">The inner exception.</param>
    </member>
    <member name="T:Aspose.Imaging.Exceptions.NamespaceDoc">
      <summary>
            The namespace contains exceptions thrown by any of the core Imaging components.
            </summary>
    </member>
    <member name="T:Aspose.Imaging.Exif.Enums.ExifColorSpace">
      <summary>
                exif color space enum.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Exif.Enums.ExifColorSpace.sRGB">
      <summary>
                SRGB color space.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Exif.Enums.ExifColorSpace.AdobeRGB">
      <summary>
                Adobe rgb color space.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Exif.Enums.ExifColorSpace.Uncalibrated">
      <summary>
                Uncalibrated color space.
            </summary>
    </member>
    <member name="T:Aspose.Imaging.Exif.Enums.ExifContrast">
      <summary>
                exif normal soft hard enum.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Exif.Enums.ExifContrast.Normal">
      <summary>
                Normal contrast.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Exif.Enums.ExifContrast.Low">
      <summary>
                Low contrast.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Exif.Enums.ExifContrast.High">
      <summary>
                High contrast.
            </summary>
    </member>
    <member name="T:Aspose.Imaging.Exif.Enums.ExifCustomRendered">
      <summary>
                exif custom rendered enum.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Exif.Enums.ExifCustomRendered.NormalProcess">
      <summary>
                Normal render process.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Exif.Enums.ExifCustomRendered.CustomProcess">
      <summary>
                Custom render process.
            </summary>
    </member>
    <member name="T:Aspose.Imaging.Exif.Enums.ExifExposureMode">
      <summary>
                exif exposure mode enum.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Exif.Enums.ExifExposureMode.Auto">
      <summary>
                Auto exposure.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Exif.Enums.ExifExposureMode.Manual">
      <summary>
                Manual exposure.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Exif.Enums.ExifExposureMode.AutoBracket">
      <summary>
                Auto bracket.
            </summary>
    </member>
    <member name="T:Aspose.Imaging.Exif.Enums.ExifExposureProgram">
      <summary>
                exif exposure program enum.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Exif.Enums.ExifExposureProgram.Notdefined">
      <summary>
                Not defined.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Exif.Enums.ExifExposureProgram.Manual">
      <summary>
                Manual program.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Exif.Enums.ExifExposureProgram.Auto">
      <summary>
                Auto exposure.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Exif.Enums.ExifExposureProgram.Aperturepriority">
      <summary>
                Aperture priority.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Exif.Enums.ExifExposureProgram.Shutterpriority">
      <summary>
                Shutter priority.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Exif.Enums.ExifExposureProgram.Creativeprogram">
      <summary>
                Creative program.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Exif.Enums.ExifExposureProgram.Actionprogram">
      <summary>
                Action program.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Exif.Enums.ExifExposureProgram.Portraitmode">
      <summary>
                Portrait mode.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Exif.Enums.ExifExposureProgram.Landscapemode">
      <summary>
                Landscape mode.
            </summary>
    </member>
    <member name="T:Aspose.Imaging.Exif.Enums.ExifFileSource">
      <summary>
                exif file source enum.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Exif.Enums.ExifFileSource.Others">
      <summary>
            The others.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Exif.Enums.ExifFileSource.FilmScanner">
      <summary>
                Film scanner.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Exif.Enums.ExifFileSource.ReflexionPrintScanner">
      <summary>
                Reflexion print scanner.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Exif.Enums.ExifFileSource.DigitalStillCamera">
      <summary>
                Digital still camera.
            </summary>
    </member>
    <member name="T:Aspose.Imaging.Exif.Enums.ExifFlash">
      <summary>
                Flash mode.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Exif.Enums.ExifFlash.Noflash">
      <summary>
                No flash fired.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Exif.Enums.ExifFlash.Fired">
      <summary>
                Flash fired.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Exif.Enums.ExifFlash.FiredReturnLightNotDetected">
      <summary>
                Flash fired, return light not detected.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Exif.Enums.ExifFlash.FiredReturnLightDetected">
      <summary>
                Flash fired, return light detected.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Exif.Enums.ExifFlash.YesCompulsory">
      <summary>
                Flash fired, compulsory flash mode.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Exif.Enums.ExifFlash.YesCompulsoryReturnLightNotDetected">
      <summary>
                Flash fired, compulsory mode, return light not detected.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Exif.Enums.ExifFlash.YesCompulsoryReturnLightDetected">
      <summary>
                Flash fired, compulsory mode, return light detected.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Exif.Enums.ExifFlash.NoCompulsory">
      <summary>
                Flash did not fire, compulsory flash mode.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Exif.Enums.ExifFlash.NoDidNotFireReturnLightNotDetected">
      <summary>
                Flash did not fire, return light not detected.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Exif.Enums.ExifFlash.NoAuto">
      <summary>
                Flash did not fire, auto mode.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Exif.Enums.ExifFlash.YesAuto">
      <summary>
                Flash firedm auto mode.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Exif.Enums.ExifFlash.YesAutoReturnLightNotDetected">
      <summary>
                Flash fired, auto mode, return light not detected.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Exif.Enums.ExifFlash.YesAutoReturnLightDetected">
      <summary>
                Flash fired, auto mode, return light detected.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Exif.Enums.ExifFlash.NoFlashFunction">
      <summary>
                No flash function.
            </summary>
    </member>
    <member name="T:Aspose.Imaging.Exif.Enums.ExifGainControl">
      <summary>
                exif gain control enum.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Exif.Enums.ExifGainControl.None">
      <summary>
                No gain control.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Exif.Enums.ExifGainControl.LowGainUp">
      <summary>
                Low gain up.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Exif.Enums.ExifGainControl.HighGainUp">
      <summary>
                High gain up.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Exif.Enums.ExifGainControl.LowGainDown">
      <summary>
                Low gain down.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Exif.Enums.ExifGainControl.HighGainDown">
      <summary>
                High gain down.
            </summary>
    </member>
    <member name="T:Aspose.Imaging.Exif.Enums.ExifGPSAltitudeRef">
      <summary>
                exif gps altitude ref enum.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Exif.Enums.ExifGPSAltitudeRef.AboveSeaLevel">
      <summary>
                Above sea level.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Exif.Enums.ExifGPSAltitudeRef.BelowSeaLevel">
      <summary>
                Below sea level.
            </summary>
    </member>
    <member name="T:Aspose.Imaging.Exif.Enums.ExifLightSource">
      <summary>
                The exif light source.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Exif.Enums.ExifLightSource.Unknown">
      <summary>
                The unknown.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Exif.Enums.ExifLightSource.Daylight">
      <summary>
                The daylight.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Exif.Enums.ExifLightSource.Fluorescent">
      <summary>
                The fluorescent.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Exif.Enums.ExifLightSource.Tungsten">
      <summary>
                The tungsten.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Exif.Enums.ExifLightSource.Flash">
      <summary>
                The flash.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Exif.Enums.ExifLightSource.Fineweather">
      <summary>
                The fineweather.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Exif.Enums.ExifLightSource.Cloudyweather">
      <summary>
                The cloudyweather.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Exif.Enums.ExifLightSource.Shade">
      <summary>
                The shade.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Exif.Enums.ExifLightSource.DaylightFluorescent">
      <summary>
                The daylight fluorescent.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Exif.Enums.ExifLightSource.DayWhiteFluorescent">
      <summary>
                The day white fluorescent.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Exif.Enums.ExifLightSource.CoolWhiteFluorescent">
      <summary>
                The cool white fluorescent.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Exif.Enums.ExifLightSource.WhiteFluorescent">
      <summary>
                The white fluorescent.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Exif.Enums.ExifLightSource.StandardlightA">
      <summary>
                The standardlight a.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Exif.Enums.ExifLightSource.StandardlightB">
      <summary>
                The standardlight b.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Exif.Enums.ExifLightSource.StandardlightC">
      <summary>
                The standardlight c.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Exif.Enums.ExifLightSource.D55">
      <summary>
                The d55 value(5500K).
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Exif.Enums.ExifLightSource.D65">
      <summary>
                The d65 value(6500K).
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Exif.Enums.ExifLightSource.D75">
      <summary>
                The d75 value(7500K).
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Exif.Enums.ExifLightSource.D50">
      <summary>
                The d50 value(5000K).
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Exif.Enums.ExifLightSource.ISOstudiotungsten">
      <summary>
                The iso studio tungsten lightsource.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Exif.Enums.ExifLightSource.Otherlightsource">
      <summary>
                The otherlightsource.
            </summary>
    </member>
    <member name="T:Aspose.Imaging.Exif.Enums.ExifMeteringMode">
      <summary>
                exif metering mode enum.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Exif.Enums.ExifMeteringMode.Unknown">
      <summary>
                Undefined mode
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Exif.Enums.ExifMeteringMode.Average">
      <summary>
                Average metering
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Exif.Enums.ExifMeteringMode.Centerweightedaverage">
      <summary>
                Center weighted average.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Exif.Enums.ExifMeteringMode.Spot">
      <summary>
                Spot metering
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Exif.Enums.ExifMeteringMode.MultiSpot">
      <summary>
                Multi spot metering
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Exif.Enums.ExifMeteringMode.MultiSegment">
      <summary>
                Multi segment metering.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Exif.Enums.ExifMeteringMode.Partial">
      <summary>
                Partial metering.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Exif.Enums.ExifMeteringMode.Other">
      <summary>
                For other modes.
            </summary>
    </member>
    <member name="T:Aspose.Imaging.Exif.Enums.ExifOrientation">
      <summary>
                Exif image orientation.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Exif.Enums.ExifOrientation.TopLeft">
      <summary>
                Top left. Default orientation.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Exif.Enums.ExifOrientation.TopRight">
      <summary>
                Top right. Horizontally reversed.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Exif.Enums.ExifOrientation.BottomRight">
      <summary>
                Bottom right. Rotated by 180 degrees.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Exif.Enums.ExifOrientation.BottomLeft">
      <summary>
                Bottom left. Rotated by 180 degrees and then horizontally reversed.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Exif.Enums.ExifOrientation.LeftTop">
      <summary>
                Left top. Rotated by 90 degrees counterclockwise and then horizontally reversed.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Exif.Enums.ExifOrientation.RightTop">
      <summary>
                Right top. Rotated by 90 degrees clockwise.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Exif.Enums.ExifOrientation.RightBottom">
      <summary>
                Right bottom. Rotated by 90 degrees clockwise and then horizontally reversed.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Exif.Enums.ExifOrientation.LeftBottom">
      <summary>
                Left bottom. Rotated by 90 degrees counterclockwise.
            </summary>
    </member>
    <member name="T:Aspose.Imaging.Exif.Enums.ExifSaturation">
      <summary>
                exif saturation enum.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Exif.Enums.ExifSaturation.Normal">
      <summary>
                Normal saturation.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Exif.Enums.ExifSaturation.Low">
      <summary>
                Low saturation.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Exif.Enums.ExifSaturation.High">
      <summary>
                High saturation.
            </summary>
    </member>
    <member name="T:Aspose.Imaging.Exif.Enums.ExifSceneCaptureType">
      <summary>
                exif scene capture type enum.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Exif.Enums.ExifSceneCaptureType.Standard">
      <summary>
                Standard scene.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Exif.Enums.ExifSceneCaptureType.Landscape">
      <summary>
                Landscape scene.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Exif.Enums.ExifSceneCaptureType.Portrait">
      <summary>
                Portrait scene.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Exif.Enums.ExifSceneCaptureType.NightScene">
      <summary>
                Night scene.
            </summary>
    </member>
    <member name="T:Aspose.Imaging.Exif.Enums.ExifSensingMethod">
      <summary>
                exif sensing method enum.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Exif.Enums.ExifSensingMethod.Notdefined">
      <summary>
                Not defined.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Exif.Enums.ExifSensingMethod.OneChipColorArea">
      <summary>
                One chip color area.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Exif.Enums.ExifSensingMethod.TwoChipColorArea">
      <summary>
                Two chip color area.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Exif.Enums.ExifSensingMethod.ThreeChipColorArea">
      <summary>
                Three chip color area.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Exif.Enums.ExifSensingMethod.Colorsequentialarea">
      <summary>
                Color Sequential area.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Exif.Enums.ExifSensingMethod.Trilinearsensor">
      <summary>
                Trilinear sensor.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Exif.Enums.ExifSensingMethod.Colorsequentiallinear">
      <summary>
                Color sequential linear sensor.
            </summary>
    </member>
    <member name="T:Aspose.Imaging.Exif.Enums.ExifSubjectDistanceRange">
      <summary>
                exif subject distance range enum.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Exif.Enums.ExifSubjectDistanceRange.Unknown">
      <summary>
                Unknown subject distance range
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Exif.Enums.ExifSubjectDistanceRange.Macro">
      <summary>
                Macro range
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Exif.Enums.ExifSubjectDistanceRange.CloseView">
      <summary>
                Close view.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Exif.Enums.ExifSubjectDistanceRange.DistantView">
      <summary>
                Distant view.
            </summary>
    </member>
    <member name="T:Aspose.Imaging.Exif.Enums.ExifUnit">
      <summary>
                exif unit enum.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Exif.Enums.ExifUnit.None">
      <summary>
                Undefined units
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Exif.Enums.ExifUnit.Inch">
      <summary>
                Inch units
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Exif.Enums.ExifUnit.Cm">
      <summary>
                Metric centimeter units
            </summary>
    </member>
    <member name="T:Aspose.Imaging.Exif.Enums.ExifWhiteBalance">
      <summary>
                exif white balance enum.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Exif.Enums.ExifWhiteBalance.Auto">
      <summary>
                Auto white balance
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Exif.Enums.ExifWhiteBalance.Manual">
      <summary>
                Manual  white balance
            </summary>
    </member>
    <member name="T:Aspose.Imaging.Exif.Enums.ExifYCbCrPositioning">
      <summary>
                exif y cb cr positioning enum.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Exif.Enums.ExifYCbCrPositioning.Centered">
      <summary>
                Centered YCbCr
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Exif.Enums.ExifYCbCrPositioning.CoSited">
      <summary>
                Co-sited position
            </summary>
    </member>
    <member name="T:Aspose.Imaging.Exif.Enums.NamespaceDoc">
      <summary>
            The namespace contains EXIF enumerations.
            </summary>
    </member>
    <member name="T:Aspose.Imaging.Exif.ExifData">
      <summary>
                Exif data container.
            </summary>
    </member>
    <member name="M:Aspose.Imaging.Exif.ExifData.#ctor">
      <summary>
                Initializes a new instance of the <see cref="T:Aspose.Imaging.Exif.ExifData" /> class.
            </summary>
    </member>
    <member name="M:Aspose.Imaging.Exif.ExifData.#ctor(Aspose.Imaging.FileFormats.Tiff.TiffDataType[])">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.Exif.ExifData" /> class with data from array.
            </summary>
      <param name="exifdata">
            Array of exif tags.
            </param>
    </member>
    <member name="M:Aspose.Imaging.Exif.ExifData.RemoveTag(Aspose.Imaging.Exif.ExifProperties)">
      <summary>
            Remove tag from container
            </summary>
      <param name="tag">
            Tag to remove
            </param>
    </member>
    <member name="P:Aspose.Imaging.Exif.ExifData.ApertureValue">
      <summary>
                Gets or sets the aperture value.
            </summary>
    </member>
    <member name="P:Aspose.Imaging.Exif.ExifData.BodySerialNumber">
      <summary>
                Gets or sets camera body serial number.
            </summary>
    </member>
    <member name="P:Aspose.Imaging.Exif.ExifData.BrightnessValue">
      <summary>
                Gets or sets the brightness value.
            </summary>
    </member>
    <member name="P:Aspose.Imaging.Exif.ExifData.CFAPattern">
      <summary>
                Gets or sets the cfa pattern.
            </summary>
    </member>
    <member name="P:Aspose.Imaging.Exif.ExifData.CameraOwnerName">
      <summary>
                Get or set camera owner name
            </summary>
    </member>
    <member name="P:Aspose.Imaging.Exif.ExifData.ColorSpace">
      <summary>
                Gets or sets the color space.
            </summary>
    </member>
    <member name="P:Aspose.Imaging.Exif.ExifData.ComponentsConfiguration">
      <summary>
                Gets or sets the components configuration.
            </summary>
    </member>
    <member name="P:Aspose.Imaging.Exif.ExifData.CompressedBitsPerPixel">
      <summary>
                Gets or sets the compressed bits per pixel.
            </summary>
    </member>
    <member name="P:Aspose.Imaging.Exif.ExifData.Contrast">
      <summary>
                Gets or sets the contrast.
            </summary>
    </member>
    <member name="P:Aspose.Imaging.Exif.ExifData.CustomRendered">
      <summary>
                Gets or sets the custom rendered.
            </summary>
    </member>
    <member name="P:Aspose.Imaging.Exif.ExifData.DateTimeDigitized">
      <summary>
                Gets or sets the date time digitized.
            </summary>
    </member>
    <member name="P:Aspose.Imaging.Exif.ExifData.DateTimeOriginal">
      <summary>
                Gets or sets the date time original.
            </summary>
    </member>
    <member name="P:Aspose.Imaging.Exif.ExifData.DeviceSettingDescription">
      <summary>
                Gets or sets device  settings description
            </summary>
    </member>
    <member name="P:Aspose.Imaging.Exif.ExifData.DigitalZoomRatio">
      <summary>
                Gets or sets the digital zoom ratio.
            </summary>
    </member>
    <member name="P:Aspose.Imaging.Exif.ExifData.ExifVersion">
      <summary>
                Gets or sets the exif version.
            </summary>
    </member>
    <member name="P:Aspose.Imaging.Exif.ExifData.ExposureBiasValue">
      <summary>
                Gets or sets the exposure bias value.
            </summary>
    </member>
    <member name="P:Aspose.Imaging.Exif.ExifData.ExposureIndex">
      <summary>
                Gets or sets the exposure index.
            </summary>
    </member>
    <member name="P:Aspose.Imaging.Exif.ExifData.ExposureMode">
      <summary>
                Gets or sets the exposure mode.
            </summary>
    </member>
    <member name="P:Aspose.Imaging.Exif.ExifData.ExposureProgram">
      <summary>
                Gets or sets the exposure program.
            </summary>
    </member>
    <member name="P:Aspose.Imaging.Exif.ExifData.ExposureTime">
      <summary>
                Gets or sets the exposure time.
            </summary>
    </member>
    <member name="P:Aspose.Imaging.Exif.ExifData.FNumber">
      <summary>
                Gets or sets the f number.
            </summary>
    </member>
    <member name="P:Aspose.Imaging.Exif.ExifData.FileSource">
      <summary>
                Gets or sets the file source type.
            </summary>
    </member>
    <member name="P:Aspose.Imaging.Exif.ExifData.Flash">
      <summary>
                Gets or sets the flash.
            </summary>
    </member>
    <member name="P:Aspose.Imaging.Exif.ExifData.FlashEnergy">
      <summary>
                Gets or sets the flash energy.
            </summary>
    </member>
    <member name="P:Aspose.Imaging.Exif.ExifData.FlashpixVersion">
      <summary>
                Gets or sets the flashpix version.
            </summary>
    </member>
    <member name="P:Aspose.Imaging.Exif.ExifData.FocalLength">
      <summary>
                Gets or sets the focal length.
            </summary>
    </member>
    <member name="P:Aspose.Imaging.Exif.ExifData.FocalLengthIn35MmFilm">
      <summary>
                Gets or sets the focal length in 35 mm film.
            </summary>
    </member>
    <member name="P:Aspose.Imaging.Exif.ExifData.FocalPlaneResolutionUnit">
      <summary>
                Gets or sets the focal plane resolution unit.
            </summary>
    </member>
    <member name="P:Aspose.Imaging.Exif.ExifData.FocalPlaneXResolution">
      <summary>
                Gets or sets the focal plane x resolution.
            </summary>
    </member>
    <member name="P:Aspose.Imaging.Exif.ExifData.FocalPlaneYResolution">
      <summary>
                Gets or sets the focal plane y resolution.
            </summary>
    </member>
    <member name="P:Aspose.Imaging.Exif.ExifData.GPSAltitude">
      <summary>
                Gets or sets the gps altitude.
            </summary>
    </member>
    <member name="P:Aspose.Imaging.Exif.ExifData.GPSAltitudeRef">
      <summary>
                Gets or sets the gps altitude ref.
            </summary>
    </member>
    <member name="P:Aspose.Imaging.Exif.ExifData.GPSAreaInformation">
      <summary>
                Gets or sets the gps area information.
            </summary>
    </member>
    <member name="P:Aspose.Imaging.Exif.ExifData.GPSDOP">
      <summary>
                Gets or sets the gpsdop.
            </summary>
    </member>
    <member name="P:Aspose.Imaging.Exif.ExifData.GPSDestBearing">
      <summary>
                Gets or sets the gps dest bearing.
            </summary>
    </member>
    <member name="P:Aspose.Imaging.Exif.ExifData.GPSDestBearingRef">
      <summary>
                Gets or sets the gps dest bearing ref.
            </summary>
    </member>
    <member name="P:Aspose.Imaging.Exif.ExifData.GPSDestDistance">
      <summary>
                Gets or sets the gps dest distance.
            </summary>
    </member>
    <member name="P:Aspose.Imaging.Exif.ExifData.GPSDestDistanceRef">
      <summary>
                Gets or sets the gps dest distance ref.
            </summary>
    </member>
    <member name="P:Aspose.Imaging.Exif.ExifData.GPSDestLatitude">
      <summary>
                Gets or sets the gps dest latitude.
            </summary>
    </member>
    <member name="P:Aspose.Imaging.Exif.ExifData.GPSDestLatitudeRef">
      <summary>
                Gets or sets the gps dest latitude ref.
            </summary>
    </member>
    <member name="P:Aspose.Imaging.Exif.ExifData.GPSDestLongitude">
      <summary>
                Gets or sets the gps dest longitude.
            </summary>
    </member>
    <member name="P:Aspose.Imaging.Exif.ExifData.GPSDestLongitudeRef">
      <summary>
                Gets or sets the gps dest longitude ref.
            </summary>
    </member>
    <member name="P:Aspose.Imaging.Exif.ExifData.GPSDifferential">
      <summary>
                Gets or sets the gps differential.
            </summary>
    </member>
    <member name="P:Aspose.Imaging.Exif.ExifData.GPSImgDirection">
      <summary>
                Gets or sets the gps img direction.
            </summary>
    </member>
    <member name="P:Aspose.Imaging.Exif.ExifData.GPSImgDirectionRef">
      <summary>
                Gets or sets the gps img direction ref.
            </summary>
    </member>
    <member name="P:Aspose.Imaging.Exif.ExifData.GPSDateStamp">
      <summary>
                Gets or sets the gps img direction ref.
            </summary>
    </member>
    <member name="P:Aspose.Imaging.Exif.ExifData.GPSLatitude">
      <summary>
                Gets or sets the gps latitude.
            </summary>
    </member>
    <member name="P:Aspose.Imaging.Exif.ExifData.GPSLatitudeRef">
      <summary>
                Gets or sets the gps latitude ref.
            </summary>
    </member>
    <member name="P:Aspose.Imaging.Exif.ExifData.GPSLongitude">
      <summary>
                Gets or sets the gps longitude.
            </summary>
    </member>
    <member name="P:Aspose.Imaging.Exif.ExifData.GPSLongitudeRef">
      <summary>
                Gets or sets the gps longitude ref.
            </summary>
    </member>
    <member name="P:Aspose.Imaging.Exif.ExifData.GPSMapDatum">
      <summary>
                Gets or sets the gps map datum.
            </summary>
    </member>
    <member name="P:Aspose.Imaging.Exif.ExifData.GPSMeasureMode">
      <summary>
                Gets or sets the gps measure mode.
            </summary>
    </member>
    <member name="P:Aspose.Imaging.Exif.ExifData.GPSProcessingMethod">
      <summary>
                Gets or sets the gps processing method.
            </summary>
    </member>
    <member name="P:Aspose.Imaging.Exif.ExifData.GPSSatellites">
      <summary>
                Gets or sets the gps satellites.
            </summary>
    </member>
    <member name="P:Aspose.Imaging.Exif.ExifData.GPSSpeed">
      <summary>
                Gets or sets the gps speed.
            </summary>
    </member>
    <member name="P:Aspose.Imaging.Exif.ExifData.GPSSpeedRef">
      <summary>
                Gets or sets the gps speed ref.
            </summary>
    </member>
    <member name="P:Aspose.Imaging.Exif.ExifData.GPSStatus">
      <summary>
                Gets or sets the gps status.
            </summary>
    </member>
    <member name="P:Aspose.Imaging.Exif.ExifData.GPSTimestamp">
      <summary>
                Gets or sets the gps timestamp.
            </summary>
    </member>
    <member name="P:Aspose.Imaging.Exif.ExifData.GPSTrack">
      <summary>
                Gets or sets the gps track.
            </summary>
    </member>
    <member name="P:Aspose.Imaging.Exif.ExifData.GPSTrackRef">
      <summary>
                Gets or sets the gps track ref.
            </summary>
    </member>
    <member name="P:Aspose.Imaging.Exif.ExifData.GPSVersionID">
      <summary>
                Gets or sets the gps version id.
            </summary>
    </member>
    <member name="P:Aspose.Imaging.Exif.ExifData.GainControl">
      <summary>
                Gets or sets the gain control.
            </summary>
    </member>
    <member name="P:Aspose.Imaging.Exif.ExifData.Gamma">
      <summary>
                Get or set gamma.
            </summary>
    </member>
    <member name="P:Aspose.Imaging.Exif.ExifData.ISOSpeed">
      <summary>
                Gets or sets ISO speed
            </summary>
    </member>
    <member name="P:Aspose.Imaging.Exif.ExifData.ISOSpeedLatitudeYYY">
      <summary>
                Gets or sets ISO Speed Latitude YYY value
            </summary>
    </member>
    <member name="P:Aspose.Imaging.Exif.ExifData.ISOSpeedLatitudeZZZ">
      <summary>
                Gets or sets ISO Speed Latitude YYY value
            </summary>
    </member>
    <member name="P:Aspose.Imaging.Exif.ExifData.PhotographicSensitivity">
      <summary>
                Gets or sets the iso speed ratings.
            </summary>
    </member>
    <member name="P:Aspose.Imaging.Exif.ExifData.ImageUniqueID">
      <summary>
                Gets or sets the image unique id.
            </summary>
    </member>
    <member name="P:Aspose.Imaging.Exif.ExifData.LensMake">
      <summary>
                Get or set maker of lens
            </summary>
    </member>
    <member name="P:Aspose.Imaging.Exif.ExifData.LensModel">
      <summary>
                Get or set lens model
            </summary>
    </member>
    <member name="P:Aspose.Imaging.Exif.ExifData.LensSerialNumber">
      <summary>
                Get  or set lens serial number
            </summary>
    </member>
    <member name="P:Aspose.Imaging.Exif.ExifData.LensSpecification">
      <summary>
                Gets or sets lens specification
            </summary>
    </member>
    <member name="P:Aspose.Imaging.Exif.ExifData.LightSource">
      <summary>
                Gets or sets the light source.
            </summary>
    </member>
    <member name="P:Aspose.Imaging.Exif.ExifData.MakerNoteData">
      <summary>
                Gets the maker note data.
            </summary>
    </member>
    <member name="P:Aspose.Imaging.Exif.ExifData.MakerNoteRawData">
      <summary>
                Gets or sets the maker note raw data.
            </summary>
    </member>
    <member name="P:Aspose.Imaging.Exif.ExifData.MaxApertureValue">
      <summary>
                Gets or sets the max aperture value.
            </summary>
    </member>
    <member name="P:Aspose.Imaging.Exif.ExifData.MeteringMode">
      <summary>
                Gets or sets the metering mode.
            </summary>
    </member>
    <member name="P:Aspose.Imaging.Exif.ExifData.OECF">
      <summary>
                Gets or sets the oecf.
            </summary>
    </member>
    <member name="P:Aspose.Imaging.Exif.ExifData.PixelXDimension">
      <summary>
                Gets or sets the pixel x dimension.
            </summary>
    </member>
    <member name="P:Aspose.Imaging.Exif.ExifData.PixelYDimension">
      <summary>
                Gets or sets the pixel y dimension.
            </summary>
    </member>
    <member name="P:Aspose.Imaging.Exif.ExifData.Properties">
      <summary>
                Gets or sets the properties.
            </summary>
    </member>
    <member name="P:Aspose.Imaging.Exif.ExifData.RecommendedExposureIndex">
      <summary>
                Gets or sets recommended exposure index
            </summary>
    </member>
    <member name="P:Aspose.Imaging.Exif.ExifData.RelatedSoundFile">
      <summary>
                Gets or sets the related sound file.
            </summary>
    </member>
    <member name="P:Aspose.Imaging.Exif.ExifData.Saturation">
      <summary>
                Gets or sets the saturation.
            </summary>
    </member>
    <member name="P:Aspose.Imaging.Exif.ExifData.SceneCaptureType">
      <summary>
                Gets or sets the scene capture type.
            </summary>
    </member>
    <member name="P:Aspose.Imaging.Exif.ExifData.SceneType">
      <summary>
                Gets or sets the scene type.
            </summary>
    </member>
    <member name="P:Aspose.Imaging.Exif.ExifData.SensingMethod">
      <summary>
                Gets or sets the sensing method.
            </summary>
    </member>
    <member name="P:Aspose.Imaging.Exif.ExifData.SensitivityType">
      <summary>
                Get or set sensitivity type
            </summary>
    </member>
    <member name="P:Aspose.Imaging.Exif.ExifData.Sharpness">
      <summary>
                Gets or sets the sharpness.
            </summary>
    </member>
    <member name="P:Aspose.Imaging.Exif.ExifData.ShutterSpeedValue">
      <summary>
                Gets or sets the shutter speed value.
            </summary>
    </member>
    <member name="P:Aspose.Imaging.Exif.ExifData.SpatialFrequencyResponse">
      <summary>
                Gets or sets the spatial frequency response.
            </summary>
    </member>
    <member name="P:Aspose.Imaging.Exif.ExifData.SpectralSensitivity">
      <summary>
                Gets or sets the spectral sensitivity.
            </summary>
    </member>
    <member name="P:Aspose.Imaging.Exif.ExifData.StandardOutputSensitivity">
      <summary>
                Gets or sets standard output sensitivity
            </summary>
    </member>
    <member name="P:Aspose.Imaging.Exif.ExifData.SubjectArea">
      <summary>
                Gets or sets the subject area.
            </summary>
    </member>
    <member name="P:Aspose.Imaging.Exif.ExifData.SubjectDistance">
      <summary>
                Gets or sets the subject distance.
            </summary>
    </member>
    <member name="P:Aspose.Imaging.Exif.ExifData.SubjectDistanceRange">
      <summary>
                Gets or sets the subject distance range.
            </summary>
    </member>
    <member name="P:Aspose.Imaging.Exif.ExifData.SubjectLocation">
      <summary>
                Gets or sets the subject location.
            </summary>
    </member>
    <member name="P:Aspose.Imaging.Exif.ExifData.SubsecTime">
      <summary>
                Gets or sets the subsec time.
            </summary>
    </member>
    <member name="P:Aspose.Imaging.Exif.ExifData.SubsecTimeDigitized">
      <summary>
                Gets or sets the subsec time digitized.
            </summary>
    </member>
    <member name="P:Aspose.Imaging.Exif.ExifData.SubsecTimeOriginal">
      <summary>
                Gets or sets the subsec time original.
            </summary>
    </member>
    <member name="P:Aspose.Imaging.Exif.ExifData.UserComment">
      <summary>
                Gets or sets the user comment.
            </summary>
    </member>
    <member name="P:Aspose.Imaging.Exif.ExifData.WhiteBalance">
      <summary>
                Gets or sets the white balance.
            </summary>
    </member>
    <member name="P:Aspose.Imaging.Exif.ExifData.WhitePoint">
      <summary>
                Gets or sets the white point.
            </summary>
    </member>
    <member name="P:Aspose.Imaging.Exif.ExifData.CommonTags">
      <summary>
                Get tags, which belong to common section. This applies only to jpeg images, in tiff format tiffOptions are being used instead
            </summary>
    </member>
    <member name="P:Aspose.Imaging.Exif.ExifData.ExifTags">
      <summary>
                Get tags which belong to exif section
            </summary>
    </member>
    <member name="P:Aspose.Imaging.Exif.ExifData.GPSTags">
      <summary>
                Get tags, which belong to gps section
            </summary>
    </member>
    <member name="T:Aspose.Imaging.Exif.ExifProperties">
      <summary>
                Exif tags list
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Exif.ExifProperties.ImageWidth">
      <summary>
                The number of columns of image data, equal to the number of pixels per row.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Exif.ExifProperties.ImageLength">
      <summary>
                The number of rows of image data.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Exif.ExifProperties.BitsPerSample">
      <summary>
                The number of bits per image component. In this standard each component of the image is 8 bits, so the value for this tag is 8.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Exif.ExifProperties.Compression">
      <summary>
                The compression scheme used for the image data. When a primary image is JPEG compressed, this designation is not necessary and is omitted.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Exif.ExifProperties.PhotometricInterpretation">
      <summary>
                The pixel composition.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Exif.ExifProperties.ImageDescription">
      <summary>
                A character string giving the title of the image. It may be a comment such as "1988 company picnic" or the like.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Exif.ExifProperties.Make">
      <summary>
                The manufacturer of the recording equipment. This is the manufacturer of the DSC, scanner, video digitizer or other equipment that generated the image. When the field is left blank, it is treated as unknown.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Exif.ExifProperties.Model">
      <summary>
                The model name or model number of the equipment. This is the model name or number of the DSC, scanner, video digitizer or other equipment that generated the image. When the field is left blank, it is treated as unknown.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Exif.ExifProperties.Orientation">
      <summary>
                The image orientation viewed in terms of rows and columns.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Exif.ExifProperties.SamplesPerPixel">
      <summary>
                The number of components per pixel. Since this standard applies to RGB and YCbCr images, the value set for this tag is 3.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Exif.ExifProperties.XResolution">
      <summary>
                The number of pixels per ResolutionUnit in the ImageWidth direction. When the image resolution is unknown, 72 [dpi] is designated.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Exif.ExifProperties.YResolution">
      <summary>
                The number of pixels per ResolutionUnit in the ImageLength direction. The same value as XResolution is designated.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Exif.ExifProperties.PlanarConfiguration">
      <summary>
                Indicates whether pixel components are recorded in a chunky or planar format. If this field does not exist, the TIFF default of 1 (chunky) is assumed.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Exif.ExifProperties.ResolutionUnit">
      <summary>
                The unit for measuring XResolution and YResolution. The same unit is used for both XResolution and YResolution. If the image resolution is unknown, 2 (inches) is designated.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Exif.ExifProperties.TransferFunction">
      <summary>
                A transfer function for the image, described in tabular style. Normally this tag is not necessary, since color space is specified in the color space information ColorSpace tag.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Exif.ExifProperties.Software">
      <summary>
                This tag records the name and version of the software or firmware of the camera or image input device used to generate the image. The detailed format is not specified, but it is recommended that the example shown below be followed. When the field is left blank, it is treated as unknown.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Exif.ExifProperties.DateTime">
      <summary>
                The date and time of image creation. In Exif standard, it is the date and time the file was changed.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Exif.ExifProperties.Artist">
      <summary>
                This tag records the name of the camera owner, photographer or image creator. The detailed format is not specified, but it is recommended that the information be written as in the example below for ease of Interoperability. When the field is left blank, it is treated as unknown. Ex.) "Camera owner, John Smith; Photographer, Michael Brown; Image creator, Ken James"
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Exif.ExifProperties.WhitePoint">
      <summary>
                The chromaticity of the white point of the image. Normally this tag is not necessary, since color space is specified in the colorspace information ColorSpace tag.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Exif.ExifProperties.PrimaryChromaticities">
      <summary>
                The chromaticity of the three primary colors of the image. Normally this tag is not necessary, since colorspace is specified in the colorspace information ColorSpace tag.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Exif.ExifProperties.YCbCrCoefficients">
      <summary>
                The matrix coefficients for transformation from RGB to YCbCr image data.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Exif.ExifProperties.YCbCrSubSampling">
      <summary>
                The sampling ratio of chrominance components in relation to the luminance component.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Exif.ExifProperties.YCbCrPositioning">
      <summary>
                The position of chrominance components in relation to the
                luminance component. This field is designated only for
                JPEG compressed data or uncompressed YCbCr data. The TIFF
                default is 1 (centered); but when Y:Cb:Cr = 4:2:2 it is
                recommended in this standard that 2 (co-sited) be used to
                record data, in order to improve the image quality when viewed
                on TV systems. When this field does not exist, the reader shall
                assume the TIFF default. In the case of Y:Cb:Cr = 4:2:0, the
                TIFF default (centered) is recommended. If the reader
                does not have the capability of supporting both kinds of
                YCbCrPositioning, it shall follow the TIFF default regardless
                of the value in this field. It is preferable that readers "
                be able to support both centered and co-sited positioning.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Exif.ExifProperties.ReferenceBlackWhite">
      <summary>
                The reference black point value and reference white point
                value. No defaults are given in TIFF, but the values below are given as defaults here.
                The color space is declared
                in a color space information tag, with the default
                being the value that gives the optimal image characteristics
                Interoperability these conditions
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Exif.ExifProperties.Copyright">
      <summary>
                Copyright information. In this standard the tag is used to
                indicate both the photographer and editor copyrights. It is
                the copyright notice of the person or organization claiming
                rights to the image. The Interoperability copyright
                statement including date and rights should be written in this
                field; e.g., "Copyright, John Smith, 19xx. All rights
                reserved.". In this standard the field records both the
                photographer and editor copyrights, with each recorded in a
                separate part of the statement. When there is a clear distinction
                between the photographer and editor copyrights, these are to be
                written in the order of photographer followed by editor copyright,
                separated by NULL (in this case since the statement also ends with
                a NULL, there are two NULL codes). When only the photographer
                copyright is given, it is terminated by one NULL code . When only
                the editor copyright is given, the photographer copyright part
                consists of one space followed by a terminating NULL code, then
                the editor copyright is given. When the field is left blank, it is
                treated as unknown.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Exif.ExifProperties.ExposureTime">
      <summary>
                Exposure time, given in seconds.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Exif.ExifProperties.FNumber">
      <summary>
                The F number.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Exif.ExifProperties.ExposureProgram">
      <summary>
                The class of the program used by the camera to set exposure when the picture is taken.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Exif.ExifProperties.SpectralSensitivity">
      <summary>
                Indicates the spectral sensitivity of each channel of the camera used.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Exif.ExifProperties.PhotographicSensitivity">
      <summary>
                Indicates the ISO Speed and ISO Latitude of the camera or input device as specified in ISO 12232.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Exif.ExifProperties.OECF">
      <summary>
                Indicates the Opto-Electric Conversion Function (OECF) specified in ISO 14524.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Exif.ExifProperties.ExifVersion">
      <summary>
                The exif version.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Exif.ExifProperties.DateTimeOriginal">
      <summary>
                The date and time when the original image data was generated.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Exif.ExifProperties.DateTimeDigitized">
      <summary>
                The date time digitized.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Exif.ExifProperties.ComponentsConfiguration">
      <summary>
                The components configuration.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Exif.ExifProperties.CompressedBitsPerPixel">
      <summary>
                Specific to compressed data; states the compressed bits per pixel.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Exif.ExifProperties.ShutterSpeedValue">
      <summary>
                The shutter speed value.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Exif.ExifProperties.ApertureValue">
      <summary>
                The lens aperture value.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Exif.ExifProperties.BrightnessValue">
      <summary>
                The brightness value.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Exif.ExifProperties.ExposureBiasValue">
      <summary>
                The exposure bias value.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Exif.ExifProperties.MaxApertureValue">
      <summary>
                The max aperture value.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Exif.ExifProperties.SubjectDistance">
      <summary>
                The distance to the subject, given in meters.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Exif.ExifProperties.MeteringMode">
      <summary>
                The metering mode.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Exif.ExifProperties.LightSource">
      <summary>
                The kind light source.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Exif.ExifProperties.Flash">
      <summary>
                Indicates the status of flash when the image was shot.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Exif.ExifProperties.FocalLength">
      <summary>
                The actual focal length of the lens, in mm.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Exif.ExifProperties.SubjectArea">
      <summary>
                This tag indicates the location and area of the main subject in the overall scene.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Exif.ExifProperties.MakerNote">
      <summary>
                A tag for manufacturers of Exif writers to record any desired information. The contents are up to the manufacturer, but this tag should not be used for any other than its intended purpose.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Exif.ExifProperties.UserComment">
      <summary>
                A tag for Exif users to write keywords or comments on the image besides those in ImageDescription, and without the character code limitations of the ImageDescription tag.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Exif.ExifProperties.SubsecTime">
      <summary>
                A tag used to record fractions of seconds for the DateTime tag.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Exif.ExifProperties.SubsecTimeOriginal">
      <summary>
                A tag used to record fractions of seconds for the DateTimeOriginal tag.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Exif.ExifProperties.SubsecTimeDigitized">
      <summary>
                A tag used to record fractions of seconds for the DateTimeDigitized tag.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Exif.ExifProperties.FlashpixVersion">
      <summary>
                The Flashpix format version supported by a FPXR file.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Exif.ExifProperties.ColorSpace">
      <summary>
                The color space information tag (ColorSpace) is always recorded as the color space specifier.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Exif.ExifProperties.RelatedSoundFile">
      <summary>
                The related sound file.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Exif.ExifProperties.FlashEnergy">
      <summary>
                Indicates the strobe energy at the time the image is captured, as measured in Beam Candle Power Seconds(BCPS).
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Exif.ExifProperties.SpatialFrequencyResponse">
      <summary>
                This tag records the camera or input device spatial frequency table and SFR values in the direction of image width, image height, and diagonal direction, as specified in ISO 12233.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Exif.ExifProperties.FocalPlaneXResolution">
      <summary>
                Indicates the number of pixels in the image width (X) direction per FocalPlaneResolutionUnit on the camera focal plane.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Exif.ExifProperties.FocalPlaneYResolution">
      <summary>
                Indicates the number of pixels in the image height (Y) direction per FocalPlaneResolutionUnit on the camera focal plane.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Exif.ExifProperties.FocalPlaneResolutionUnit">
      <summary>
                Indicates the unit for measuring FocalPlaneXResolution and FocalPlaneYResolution. This value is the same as the ResolutionUnit.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Exif.ExifProperties.SubjectLocation">
      <summary>
                Indicates the location of the main subject in the scene. The value of this tag represents the pixel at the center of the main subject relative to the left edge, prior to rotation processing as per the Rotation tag.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Exif.ExifProperties.ExposureIndex">
      <summary>
                Indicates the exposure index selected on the camera or input device at the time the image is captured.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Exif.ExifProperties.SensingMethod">
      <summary>
                Indicates the image sensor type on the camera or input device.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Exif.ExifProperties.FileSource">
      <summary>
                The file source.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Exif.ExifProperties.SceneType">
      <summary>
                Indicates the type of scene. If a DSC recorded the image, this tag value shall always be set to 1, indicating that the image was directly photographed.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Exif.ExifProperties.CFAPattern">
      <summary>
                Indicates the color filter array (CFA) geometric pattern of the image sensor when a one-chip color area sensor is used. It does not apply to all sensing methods.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Exif.ExifProperties.CustomRendered">
      <summary>
                This tag indicates the use of special processing on image data, such as rendering geared to output. When special processing is performed, the reader is expected to disable or minimize any further processing.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Exif.ExifProperties.ExposureMode">
      <summary>
                This tag indicates the exposure mode set when the image was shot. In auto-bracketing mode, the camera shoots a series of frames of the same scene at different exposure settings.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Exif.ExifProperties.WhiteBalance">
      <summary>
                This tag indicates the white balance mode set when the image was shot.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Exif.ExifProperties.DigitalZoomRatio">
      <summary>
                This tag indicates the digital zoom ratio when the image was shot. If the numerator of the recorded value is 0, this indicates that digital zoom was not used.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Exif.ExifProperties.FocalLengthIn35MmFilm">
      <summary>
                This tag indicates the equivalent focal length assuming a 35mm film camera, in mm. A value of 0 means the focal length is unknown. Note that this tag differs from the FocalLength tag.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Exif.ExifProperties.SceneCaptureType">
      <summary>
                This tag indicates the type of scene that was shot. It can also be used to record the mode in which the image was shot.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Exif.ExifProperties.GainControl">
      <summary>
                This tag indicates the degree of overall image gain adjustment.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Exif.ExifProperties.Contrast">
      <summary>
                This tag indicates the direction of contrast processing applied by the camera when the image was shot.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Exif.ExifProperties.Saturation">
      <summary>
                This tag indicates the direction of saturation processing applied by the camera when the image was shot.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Exif.ExifProperties.Sharpness">
      <summary>
                This tag indicates the direction of sharpness processing applied by the camera when the image was shot
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Exif.ExifProperties.DeviceSettingDescription">
      <summary>
                This tag indicates information on the picture-taking conditions of a particular camera model. The tag is used only to indicate the picture-taking conditions in the reader.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Exif.ExifProperties.SubjectDistanceRange">
      <summary>
                This tag indicates the distance to the subject.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Exif.ExifProperties.ImageUniqueID">
      <summary>
                The image unique id.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Exif.ExifProperties.GPSVersionID">
      <summary>
                Indicates the version of GPSInfoIFD.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Exif.ExifProperties.GPSLatitudeRef">
      <summary>
                Indicates whether the latitude is north or south latitude.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Exif.ExifProperties.GPSLatitude">
      <summary>
                Indicates the latitude. The latitude is expressed as three RATIONAL values giving the degrees, minutes, and
                seconds, respectively. If latitude is expressed as degrees, minutes and seconds, a typical format would be
                dd/1,mm/1,ss/1. When degrees and minutes are used and, for example, fractions of minutes are given up to two
                decimal places, the format would be dd/1,mmmm/100,0/1.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Exif.ExifProperties.GPSLongitudeRef">
      <summary>
                Indicates whether the longitude is east or west longitude.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Exif.ExifProperties.GPSLongitude">
      <summary>
                Indicates the longitude. The longitude is expressed as three RATIONAL values giving the degrees, minutes, and
                seconds, respectively. If longitude is expressed as degrees, minutes and seconds, a typical format would be
                ddd/1,mm/1,ss/1. When degrees and minutes are used and, for example, fractions of minutes are given up to two
                decimal places, the format would be ddd/1,mmmm/100,0/1.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Exif.ExifProperties.GPSAltitudeRef">
      <summary>
                Indicates the altitude used as the reference altitude. If the reference is sea level and the altitude is above sea level,
                0 is given. If the altitude is below sea level, a value of 1 is given and the altitude is indicated as an absolute value in
                the GPSAltitude tag.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Exif.ExifProperties.GPSAltitude">
      <summary>
                Indicates the altitude based on the reference in GPSAltitudeRef. Altitude is expressed as one RATIONAL value.
                The reference unit is meters.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Exif.ExifProperties.GPSTimestamp">
      <summary>
                Indicates the time as UTC (Coordinated Universal Time). TimeStamp is expressed as three RATIONAL values
                giving the hour, minute, and second.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Exif.ExifProperties.GPSSatellites">
      <summary>
                Indicates the GPS satellites used for measurements. This tag can be used to describe the number of satellites,
                their ID number, angle of elevation, azimuth, SNR and other information in ASCII notation. The format is not
                specified. If the GPS receiver is incapable of taking measurements, value of the tag shall be set to NULL.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Exif.ExifProperties.GPSStatus">
      <summary>
                Indicates the status of the GPS receiver when the image is recorded.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Exif.ExifProperties.GPSMeasureMode">
      <summary>
                Indicates the GPS measurement mode. - 2- or 3- dimensional.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Exif.ExifProperties.GPSDOP">
      <summary>
                Indicates the GPS DOP (data degree of precision). An HDOP value is written during two-dimensional measurement,
                and PDOP during three-dimensional measurement.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Exif.ExifProperties.GPSSpeedRef">
      <summary>
                Indicates the unit used to express the GPS receiver speed of movement. 'K' 'M' and 'N' represents kilometers per
                hour, miles per hour, and knots.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Exif.ExifProperties.GPSSpeed">
      <summary>
                Indicates the speed of GPS receiver movement.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Exif.ExifProperties.GPSTrackRef">
      <summary>
                Indicates the reference for giving the direction of GPS receiver movement. 'T' denotes true direction and 'M' is
                magnetic direction.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Exif.ExifProperties.GPSTrack">
      <summary>
                Indicates the direction of GPS receiver movement. The range of values is from 0.00 to 359.99.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Exif.ExifProperties.GPSImgDirectionRef">
      <summary>
                Indicates the reference for giving the direction of the image when it is captured. 'T' denotes true direction and 'M' is
                magnetic direction.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Exif.ExifProperties.GPSImgDirection">
      <summary>
                Indicates the direction of the image when it was captured. The range of values is from 0.00 to 359.99.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Exif.ExifProperties.GPSMapDatum">
      <summary>
                Indicates the geodetic survey data used by the GPS receiver.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Exif.ExifProperties.GPSDestLatitudeRef">
      <summary>
                Indicates whether the latitude of the destination point is north or south latitude. The ASCII value 'N' indicates north
                latitude, and 'S' is south latitude.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Exif.ExifProperties.GPSDestLatitude">
      <summary>
                Indicates the latitude of the destination point. The latitude is expressed as three RATIONAL values giving the
                degrees, minutes, and seconds, respectively. If latitude is expressed as degrees, minutes and seconds, a typical
                format would be dd/1,mm/1,ss/1. When degrees and minutes are used and, for example, fractions of minutes are
                given up to two decimal places, the format would be dd/1,mmmm/100,0/1.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Exif.ExifProperties.GPSDestLongitudeRef">
      <summary>
                Indicates whether the longitude of the destination point is east or west longitude. ASCII 'E' indicates east longitude,
                and 'W' is west longitude.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Exif.ExifProperties.GPSDestLongitude">
      <summary>
                Indicates the longitude of the destination point. The longitude is expressed as three RATIONAL values giving the
                degrees, minutes, and seconds, respectively. If longitude is expressed as degrees, minutes and seconds, a typical
                format would be ddd/1,mm/1,ss/1. When degrees and minutes are used and, for example, fractions of minutes are
                given up to two decimal places, the format would be ddd/1,mmmm/100,0/1.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Exif.ExifProperties.GPSDestBearingRef">
      <summary>
                Indicates the reference used for giving the bearing to the destination point. 'T' denotes true direction and 'M' is
                magnetic direction.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Exif.ExifProperties.GPSDestBearing">
      <summary>
                Indicates the bearing to the destination point. The range of values is from 0.00 to 359.99.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Exif.ExifProperties.GPSDestDistanceRef">
      <summary>
                Indicates the unit used to express the distance to the destination point. 'K', 'M' and 'N' represent kilometers, miles
                and knots.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Exif.ExifProperties.GPSDestDistance">
      <summary>
                Indicates the distance to the destination point.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Exif.ExifProperties.GPSProcessingMethod">
      <summary>
                A character string recording the name of the method used for location finding.
                The first byte indicates the character code used, and this is followed by the name
                of the method.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Exif.ExifProperties.GPSAreaInformation">
      <summary>
                A character string recording the name of the GPS area. The first byte indicates
                the character code used, and this is followed by the name of the GPS area.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Exif.ExifProperties.GPSDateStamp">
      <summary>
                A character string recording date and time information relative to UTC
                (Coordinated Universal Time). The format is YYYY:MM:DD.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Exif.ExifProperties.GPSDifferential">
      <summary>
                Indicates whether differential correction is applied to the GPS receiver.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Exif.ExifProperties.StripOffsets">
      <summary>
                For each strip, the byte offset of that strip. It is recommended that this be selected so the number of strip bytes does not exceed 64 Kbytes.
                Aux tag.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Exif.ExifProperties.JPEGInterchangeFormat">
      <summary>
                The offset to the start byte (SOI) of JPEG compressed thumbnail data. This is not used for primary image JPEG data.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Exif.ExifProperties.JPEGInterchangeFormatLength">
      <summary>
                The number of bytes of JPEG compressed thumbnail data. This is not used for primary image JPEG data. JPEG thumbnails are not divided but are recorded as a continuous JPEG bitstream from SOI to EOI. Appn and COM markers should not be recorded. Compressed thumbnails must be recorded in no more than 64 Kbytes, including all other data to be recorded in APP1.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Exif.ExifProperties.ExifIfdPointer">
      <summary>
                A pointer to the Exif IFD. Interoperability, Exif IFD has the same structure as that of the IFD specified in TIFF. ordinarily, however, it does not contain image data as in the case of TIFF.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Exif.ExifProperties.GPSIfdPointer">
      <summary>
                The gps ifd pointer.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Exif.ExifProperties.RowsPerStrip">
      <summary>
                The number of rows per strip. This is the number of rows in the image of one strip when an image is divided into strips.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Exif.ExifProperties.StripByteCounts">
      <summary>
                The total number of bytes in each strip.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Exif.ExifProperties.PixelXDimension">
      <summary>
                Information specific to compressed data. When a compressed file is recorded, the valid width of the meaningful image shall be recorded in this tag, whether or not there is padding data or a restart marker.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Exif.ExifProperties.PixelYDimension">
      <summary>
                Information specific to compressed data. When a compressed file is recorded, the valid height of the meaningful image shall be recorded in this tag
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Exif.ExifProperties.Gamma">
      <summary>
            Gamma value
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Exif.ExifProperties.SensitivityType">
      <summary>
            Type of photographic sensitivity
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Exif.ExifProperties.StandardOutputSensitivity">
      <summary>
            Indicates standard output sensitivity of camera
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Exif.ExifProperties.RecommendedExposureIndex">
      <summary>
            Indicates recommended exposure index
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Exif.ExifProperties.ISOSpeed">
      <summary>
            Information about iso speed value as defined in ISO 12232
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Exif.ExifProperties.ISOSpeedLatitudeYYY">
      <summary>
            This tag indicates ISO speed latitude yyy value as defined in ISO 12232
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Exif.ExifProperties.ISOSpeedLatitudeZZZ">
      <summary>
            This tag indicates ISO speed latitude zzz value as defined in ISO 12232
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Exif.ExifProperties.CameraOwnerName">
      <summary>
            Contains camera owner name
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Exif.ExifProperties.BodySerialNumber">
      <summary>
            Contains camera body serial number
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Exif.ExifProperties.LensMake">
      <summary>
            This tag records lens manufacturer
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Exif.ExifProperties.LensModel">
      <summary>
            This tag records lens`s model name and model number
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Exif.ExifProperties.LensSerialNumber">
      <summary>
            This tag records the serial number of interchangable lens
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Exif.ExifProperties.LensSpecification">
      <summary>
            This tag notes minimum focal length, maximum focal length, minimum F number in the minimum focal length and minimum F number in maximum focal length
            </summary>
    </member>
    <member name="T:Aspose.Imaging.Exif.JpegExifData">
      <summary>
                Exif data container for jpeg files.
            </summary>
    </member>
    <member name="M:Aspose.Imaging.Exif.JpegExifData.EstimateExifSize">
      <summary>
                The estimation of exif segment size. Segment size must be less than 65528 bytes in order to produce correct jpeg image.
            </summary>
      <returns>
                The <see cref="T:System.Int32" />.
            </returns>
    </member>
    <member name="P:Aspose.Imaging.Exif.JpegExifData.Artist">
      <summary>
                Gets or sets the artist.
            </summary>
    </member>
    <member name="P:Aspose.Imaging.Exif.JpegExifData.BitsPerSample">
      <summary>
                Gets or sets the cfa pattern.
            </summary>
    </member>
    <member name="P:Aspose.Imaging.Exif.JpegExifData.Compression">
      <summary>
                Gets or sets the compression.
            </summary>
    </member>
    <member name="P:Aspose.Imaging.Exif.JpegExifData.Copyright">
      <summary>
                Gets or sets the copyright.
            </summary>
    </member>
    <member name="P:Aspose.Imaging.Exif.JpegExifData.DateTime">
      <summary>
                Gets or sets the date time.
            </summary>
    </member>
    <member name="P:Aspose.Imaging.Exif.JpegExifData.ImageDescription">
      <summary>
                Gets or sets the image description.
            </summary>
    </member>
    <member name="P:Aspose.Imaging.Exif.JpegExifData.ImageLength">
      <summary>
                Gets or sets the image length.
            </summary>
    </member>
    <member name="P:Aspose.Imaging.Exif.JpegExifData.ImageWidth">
      <summary>
                Gets or sets the image width.
            </summary>
    </member>
    <member name="P:Aspose.Imaging.Exif.JpegExifData.Make">
      <summary>
                Gets or sets the make.
            </summary>
    </member>
    <member name="P:Aspose.Imaging.Exif.JpegExifData.Model">
      <summary>
                Gets or sets the model.
            </summary>
    </member>
    <member name="P:Aspose.Imaging.Exif.JpegExifData.Orientation">
      <summary>
                Gets or sets the orientation.
            </summary>
    </member>
    <member name="P:Aspose.Imaging.Exif.JpegExifData.PhotometricInterpretation">
      <summary>
            Gets or sets the photometric interpretation.
            </summary>
    </member>
    <member name="P:Aspose.Imaging.Exif.JpegExifData.PlanarConfiguration">
      <summary>
            Gets or sets the planar configuration.
            </summary>
    </member>
    <member name="P:Aspose.Imaging.Exif.JpegExifData.PrimaryChromaticities">
      <summary>
                Gets or sets the primary chromaticities.
            </summary>
    </member>
    <member name="P:Aspose.Imaging.Exif.JpegExifData.ReferenceBlackWhite">
      <summary>
                Gets or sets the reference black white.
            </summary>
    </member>
    <member name="P:Aspose.Imaging.Exif.JpegExifData.ResolutionUnit">
      <summary>
                Gets or sets the resolution unit.
            </summary>
    </member>
    <member name="P:Aspose.Imaging.Exif.JpegExifData.SamplesPerPixel">
      <summary>
            Gets or sets the samples per pixel.
            </summary>
    </member>
    <member name="P:Aspose.Imaging.Exif.JpegExifData.Software">
      <summary>
                Gets or sets the software.
            </summary>
    </member>
    <member name="P:Aspose.Imaging.Exif.JpegExifData.Thumbnail">
      <summary>
                Gets or sets the thumbnail image.
            </summary>
    </member>
    <member name="P:Aspose.Imaging.Exif.JpegExifData.TransferFunction">
      <summary>
                Gets or sets the transfer function.
            </summary>
    </member>
    <member name="P:Aspose.Imaging.Exif.JpegExifData.XResolution">
      <summary>
                Gets or sets the x resolution.
            </summary>
    </member>
    <member name="P:Aspose.Imaging.Exif.JpegExifData.YCbCrCoefficients">
      <summary>
                Gets or sets the y cb cr coefficients.
            </summary>
    </member>
    <member name="P:Aspose.Imaging.Exif.JpegExifData.YCbCrPositioning">
      <summary>
                Gets or sets the y cb cr positioning.
            </summary>
    </member>
    <member name="P:Aspose.Imaging.Exif.JpegExifData.YCbCrSubSampling">
      <summary>
            Gets or sets the y-cb-cr subsampling.
            </summary>
    </member>
    <member name="P:Aspose.Imaging.Exif.JpegExifData.YResolution">
      <summary>
                Gets or sets the y resolution.
            </summary>
    </member>
    <member name="T:Aspose.Imaging.Exif.NamespaceDoc">
      <summary>
            The namespace contains EXIF related helper classes and methods.
            </summary>
    </member>
    <member name="T:Aspose.Imaging.IImageExporter">
      <summary>
            The image exporter. Can export data from internal Aspose.Imaging format to a specified data format.
            </summary>
    </member>
    <member name="M:Aspose.Imaging.IImageExporter.Export(Aspose.Imaging.Image,System.IO.Stream,Aspose.Imaging.ImageOptionsBase)">
      <summary>
            Exports the specified image data into specified data format.
            </summary>
      <param name="image">The image data to export.</param>
      <param name="stream">The stream to export data to.</param>
      <param name="optionsBase">Options for image export</param>
    </member>
    <member name="T:Aspose.Imaging.IImageExporterDescriptor">
      <summary>
            Represents the image exporter descriptor. The exporter descriptor is used to overcome the necessity to contain each exporter instance
            in memory and multithreading issues.
            </summary>
    </member>
    <member name="M:Aspose.Imaging.IImageExporterDescriptor.CanExport(Aspose.Imaging.Image,Aspose.Imaging.ImageOptionsBase)">
      <summary>
            Determines whether image exporter can export the specified image to the specified image format specified by save options.
            </summary>
      <param name="image">The image to export.</param>
      <param name="optionsBase">The options base.</param>
      <returns>
        <c>True</c> if exporter created by this descriptor can export the specified image to the specified file format; otherwise, <c>false</c>.
            </returns>
    </member>
    <member name="M:Aspose.Imaging.IImageExporterDescriptor.CreateInstance">
      <summary>
            Creates a new exporter instance.
            </summary>
      <returns>A new exporter instance.</returns>
    </member>
    <member name="T:Aspose.Imaging.Extensions.FileFormatExtensions">
      <summary>
            Contains <see cref="T:Aspose.Imaging.FileFormat" /> extension methods.
            </summary>
    </member>
    <member name="M:Aspose.Imaging.Extensions.FileFormatExtensions.IsSingleFormatDefined(Aspose.Imaging.FileFormat)">
      <summary>
            Determines whether single file format is defined.
            </summary>
      <param name="fileFormat">The file format to check.</param>
      <returns>
        <c>True</c> if single file format is defined; otherwise, <c>false</c>.
            </returns>
    </member>
    <member name="T:Aspose.Imaging.Extensions.NamespaceDoc">
      <summary>
            The namespace contains extension methods.
            </summary>
    </member>
    <member name="T:Aspose.Imaging.Extensions.PointExtensions">
      <summary>
            Contains extension methods for <see cref="T:Aspose.Imaging.Point" /> and <see cref="T:Aspose.Imaging.PointF" /> structures.
            </summary>
    </member>
    <member name="M:Aspose.Imaging.Extensions.PointExtensions.ToPointsArray(Aspose.Imaging.Point[])">
      <summary>
            Converts the <see cref="T:Aspose.Imaging.Point" /> array to the <see cref="T:Aspose.Imaging.PointF" /> array.
            </summary>
      <param name="points">The <see cref="T:Aspose.Imaging.Point" /> array to convert.</param>
      <returns>The converted <see cref="T:Aspose.Imaging.PointF" /> array.</returns>
    </member>
    <member name="M:Aspose.Imaging.Extensions.PointExtensions.ToSilverlightPoint(Aspose.Imaging.Point)">
      <summary>
            Converts the <see cref="T:Aspose.Imaging.Point" /> to the <see cref="T:System.Windows.Point" />.
            </summary>
      <param name="point">The <see cref="T:Aspose.Imaging.Point" /> to convert.</param>
      <returns>The converted <see cref="T:System.Windows.Point" />.</returns>
    </member>
    <member name="M:Aspose.Imaging.Extensions.PointExtensions.ToSilverlightPoint(Aspose.Imaging.PointF)">
      <summary>
            Converts the <see cref="T:Aspose.Imaging.PointF" /> to the <see cref="T:System.Windows.Point" />.
            </summary>
      <param name="point">The <see cref="T:Aspose.Imaging.PointF" /> to convert.</param>
      <returns>The converted <see cref="T:System.Windows.Point" />.</returns>
    </member>
    <member name="M:Aspose.Imaging.Extensions.PointExtensions.ToAsposePoint(System.Windows.Point)">
      <summary>
            Converts the <see cref="T:System.Windows.Point" /> to the <see cref="T:Aspose.Imaging.PointF" />.
            </summary>
      <param name="point">The <see cref="T:System.Windows.Point" /> to convert.</param>
      <returns>The converted <see cref="T:Aspose.Imaging.PointF" />.</returns>
    </member>
    <member name="T:Aspose.Imaging.Figure">
      <summary>
            The figure. A container for shapes.
            </summary>
      <example>This examples make use of GraphicsPath and Graphics class to create and manipulate Figures on an Image surface. Example creates a new Image (of type Tiff) and draw paths with the help of GraphicsPath class. At the end DrawPath method exposed by Graphics class is called to render the paths on surface.<code>[C#]

//Create an instance of memory stream
using (MemoryStream stream = new MemoryStream())
{
    //Create an instance of TiffOptions and set its various properties
    Aspose.Imaging.ImageOptions.TiffOptions tiffOptions = new Aspose.Imaging.ImageOptions.TiffOptions();
        
    //Set the source for the instance of ImageOptions
    tiffOptions.Source = new Aspose.Imaging.Sources.StreamSource(stream);

    //Create an instance of Image 
    using (Aspose.Imaging.Image image = Aspose.Imaging.Image.Create(tiffOptions, 500, 500))
    {
        //Create and initialize an instance of Graphics class
        Aspose.Imaging.Graphics graphics = new Aspose.Imaging.Graphics(image);

        //Clear Graphics surface
        graphics.Clear(Color.Wheat);

        //Create an instance of GraphicsPath class
        Aspose.Imaging.GraphicsPath graphicspath = new Aspose.Imaging.GraphicsPath();

        //Create an instance of Figure class
        Aspose.Imaging.Figure figure = new Aspose.Imaging.Figure();

        //Add Shapes to Figure object
        figure.AddShape(new Aspose.Imaging.Shapes.RectangleShape(new RectangleF(10, 10, 300, 300)));
        figure.AddShape(new Aspose.Imaging.Shapes.EllipseShape(new RectangleF(50, 50, 300, 300)));
        figure.AddShape(new Aspose.Imaging.Shapes.PieShape(new Rectangle(new Point(250, 250), new Size(200, 200)), 0, 45));

        //Add Figure object to GraphicsPath
        graphicspath.AddFigure(figure);

        //Draw path with Pen object of color Black
        graphics.DrawPath(new Pen(Aspose.Imaging.Color.Black, 2), graphicspath);

        // save all changes.
        image.Save();
    }
}</code><code>[Visual Basic]

'Create an instance of memory stream
Using stream As MemoryStream = New MemoryStream()
'Create an instance of TiffOptions and set its various properties
Dim tiffOptions As Aspose.Imaging.ImageOptions.TiffOptions = New Aspose.Imaging.ImageOptions.TiffOptions()

'Set the source for the instance of ImageOptions
    tiffOptions.Source = New Aspose.Imaging.Sources.StreamSource(stream)

'Create an instance of Image 
    Using image As Aspose.Imaging.Image = Aspose.Imaging.Image.Create(tiffOptions, 500, 500)
'Create and initialize an instance of Graphics class
Dim graphics As Aspose.Imaging.Graphics = New Aspose.Imaging.Graphics(image)

'Clear Graphics surface
        graphics.Clear(Color.Wheat)

'Create an instance of GraphicsPath class
Dim graphicspath As Aspose.Imaging.GraphicsPath = New Aspose.Imaging.GraphicsPath()

'Create an instance of Figure class
Dim figure As Aspose.Imaging.Figure = New Aspose.Imaging.Figure()

'Add Shapes to Figure object
        figure.AddShape(New Aspose.Imaging.Shapes.RectangleShape(New RectangleF(10, 10, 300, 300)))
        figure.AddShape(New Aspose.Imaging.Shapes.EllipseShape(New RectangleF(50, 50, 300, 300)))
        figure.AddShape(New Aspose.Imaging.Shapes.PieShape(New Rectangle(New Point(250, 250), New Size(200, 200)), 0, 45))

'Add Figure object to GraphicsPath
        graphicspath.AddFigure(figure)

'Draw path with Pen object of color Black
        graphics.DrawPath(New Pen(Aspose.Imaging.Color.Black, 2), graphicspath)

' save all changes.
        image.Save()
    End Using
End Using</code></example>
    </member>
    <member name="T:Aspose.Imaging.ObjectWithBounds">
      <summary>
            The object having bounds.
            </summary>
    </member>
    <member name="M:Aspose.Imaging.ObjectWithBounds.GetBounds(Aspose.Imaging.Matrix)">
      <summary>
            Gets the object's bounds.
            </summary>
      <param name="matrix">The matrix to apply before bounds will be calculated.</param>
      <returns>The estimated object's bounds.</returns>
    </member>
    <member name="M:Aspose.Imaging.ObjectWithBounds.GetBounds(Aspose.Imaging.Matrix,Aspose.Imaging.Pen)">
      <summary>
            Gets the object's bounds.
            </summary>
      <param name="matrix">The matrix to apply before bounds will be calculated.</param>
      <param name="pen">The pen to use for object. This can influence the object's bounds size.</param>
      <returns>The estimated object's bounds.</returns>
    </member>
    <member name="M:Aspose.Imaging.ObjectWithBounds.Transform(Aspose.Imaging.Matrix)">
      <summary>
            Applies the specified transformation to the shape.
            </summary>
      <param name="transform">The transformation to apply.</param>
    </member>
    <member name="P:Aspose.Imaging.ObjectWithBounds.Bounds">
      <summary>
            Gets the object's bounds.
            </summary>
      <value>The object's bounds.</value>
    </member>
    <member name="M:Aspose.Imaging.Figure.AddShape(Aspose.Imaging.Shape)">
      <summary>
            Adds a shape to the figure.
            </summary>
      <param name="shape">The shape to add.</param>
      <example>This examples make use of GraphicsPath and Graphics class to create and manipulate Figures on an Image surface. Example creates a new Image (of type Tiff) and draw paths with the help of GraphicsPath class. At the end DrawPath method exposed by Graphics class is called to render the paths on surface.<code>[C#]

//Create an instance of memory stream
using (MemoryStream stream = new MemoryStream())
{
    //Create an instance of TiffOptions and set its various properties
    Aspose.Imaging.ImageOptions.TiffOptions tiffOptions = new Aspose.Imaging.ImageOptions.TiffOptions();
        
    //Set the source for the instance of ImageOptions
    tiffOptions.Source = new Aspose.Imaging.Sources.StreamSource(stream);

    //Create an instance of Image 
    using (Aspose.Imaging.Image image = Aspose.Imaging.Image.Create(tiffOptions, 500, 500))
    {
        //Create and initialize an instance of Graphics class
        Aspose.Imaging.Graphics graphics = new Aspose.Imaging.Graphics(image);

        //Clear Graphics surface
        graphics.Clear(Color.Wheat);

        //Create an instance of GraphicsPath class
        Aspose.Imaging.GraphicsPath graphicspath = new Aspose.Imaging.GraphicsPath();

        //Create an instance of Figure class
        Aspose.Imaging.Figure figure = new Aspose.Imaging.Figure();

        //Add Shapes to Figure object
        figure.AddShape(new Aspose.Imaging.Shapes.RectangleShape(new RectangleF(10, 10, 300, 300)));
        figure.AddShape(new Aspose.Imaging.Shapes.EllipseShape(new RectangleF(50, 50, 300, 300)));
        figure.AddShape(new Aspose.Imaging.Shapes.PieShape(new Rectangle(new Point(250, 250), new Size(200, 200)), 0, 45));

        //Add Figure object to GraphicsPath
        graphicspath.AddFigure(figure);

        //Draw path with Pen object of color Black
        graphics.DrawPath(new Pen(Aspose.Imaging.Color.Black, 2), graphicspath);

        // save all changes.
        image.Save();
    }
}</code><code>[Visual Basic]

'Create an instance of memory stream
Using stream As MemoryStream = New MemoryStream()
'Create an instance of TiffOptions and set its various properties
Dim tiffOptions As Aspose.Imaging.ImageOptions.TiffOptions = New Aspose.Imaging.ImageOptions.TiffOptions()

'Set the source for the instance of ImageOptions
    tiffOptions.Source = New Aspose.Imaging.Sources.StreamSource(stream)

'Create an instance of Image 
    Using image As Aspose.Imaging.Image = Aspose.Imaging.Image.Create(tiffOptions, 500, 500)
'Create and initialize an instance of Graphics class
Dim graphics As Aspose.Imaging.Graphics = New Aspose.Imaging.Graphics(image)

'Clear Graphics surface
        graphics.Clear(Color.Wheat)

'Create an instance of GraphicsPath class
Dim graphicspath As Aspose.Imaging.GraphicsPath = New Aspose.Imaging.GraphicsPath()

'Create an instance of Figure class
Dim figure As Aspose.Imaging.Figure = New Aspose.Imaging.Figure()

'Add Shapes to Figure object
        figure.AddShape(New Aspose.Imaging.Shapes.RectangleShape(New RectangleF(10, 10, 300, 300)))
        figure.AddShape(New Aspose.Imaging.Shapes.EllipseShape(New RectangleF(50, 50, 300, 300)))
        figure.AddShape(New Aspose.Imaging.Shapes.PieShape(New Rectangle(New Point(250, 250), New Size(200, 200)), 0, 45))

'Add Figure object to GraphicsPath
        graphicspath.AddFigure(figure)

'Draw path with Pen object of color Black
        graphics.DrawPath(New Pen(Aspose.Imaging.Color.Black, 2), graphicspath)

' save all changes.
        image.Save()
    End Using
End Using</code></example>
    </member>
    <member name="M:Aspose.Imaging.Figure.AddShapes(Aspose.Imaging.Shape[])">
      <summary>
            Adds a range of shapes to the figure.
            </summary>
      <param name="shapes">The shapes to add.</param>
      <example>This example creates a new Image and draws a variety of shapes using Figures and GraphicsPath on the Image surface<code>[C#]

//Creates an instance of BmpOptions and set its various properties            
Aspose.Imaging.ImageOptions.BmpOptions bmpOptions = new Aspose.Imaging.ImageOptions.BmpOptions();
bmpOptions.BitsPerPixel = 24;

// create a new source based on memory stream.
bmpOptions.Source = new Aspose.Imaging.Sources.StreamSource(new System.IO.MemoryStream(), true);

//Create an instance of Image 
using (Aspose.Imaging.Image image = Aspose.Imaging.Image.Create(bmpOptions, 500, 500))
{
    //Create and initialize an instance of Graphics class
    Aspose.Imaging.Graphics graphics = new Aspose.Imaging.Graphics(image);

    //Clear Graphics surface
    graphics.Clear(Color.Wheat);

    //Create an instance of GraphicsPath class
    Aspose.Imaging.GraphicsPath graphicspath = new Aspose.Imaging.GraphicsPath();

    //Create an instance of Figure class
    Aspose.Imaging.Figure figure1 = new Aspose.Imaging.Figure();

    //Add Shape to Figure object
    figure1.AddShape(new Aspose.Imaging.Shapes.EllipseShape(new RectangleF(50, 50, 300, 300)));
    figure1.AddShape(new Aspose.Imaging.Shapes.PieShape(new Rectangle(new Point(110, 110), new Size(200, 200)), 0, 90));

    //Create an instance of Figure class
    Aspose.Imaging.Figure figure2 = new Aspose.Imaging.Figure();

    //Add Shape to Figure object
    figure2.AddShape(new Aspose.Imaging.Shapes.ArcShape(new RectangleF(10, 10, 300, 300), 0, 45));
    figure2.AddShape(new Aspose.Imaging.Shapes.PolygonShape(new[] { new PointF(150, 10), new PointF(150, 200), new PointF(250, 300), new PointF(350, 400) }, true));
    figure2.AddShape(new Aspose.Imaging.Shapes.RectangleShape(new Rectangle(new Point(250, 250), new Size(200, 200))));

    //Add Figure object to GraphicsPath
    graphicspath.AddFigures(new[] { figure1, figure2 });

    //Draw path with Pen object of color Black
    graphics.DrawPath(new Pen(Aspose.Imaging.Color.Black, 2), graphicspath);

    // save all changes.
    image.Save();
}</code><code>[Visual Basic]

'Creates an instance of BmpOptions and set its various properties            
Dim bmpOptions As Aspose.Imaging.ImageOptions.BmpOptions = New Aspose.Imaging.ImageOptions.BmpOptions()
bmpOptions.BitsPerPixel = 24

' create a new source based on memory stream.
bmpOptions.Source = New Aspose.Imaging.Sources.StreamSource(New System.IO.MemoryStream(), True)

'Create an instance of Image 
Using image As Aspose.Imaging.Image = Aspose.Imaging.Image.Create(bmpOptions, 500, 500)
'Create and initialize an instance of Graphics class
Dim graphics As Aspose.Imaging.Graphics = New Aspose.Imaging.Graphics(image)

'Clear Graphics surface
    graphics.Clear(Color.Wheat)

'Create an instance of GraphicsPath class
Dim graphicspath As Aspose.Imaging.GraphicsPath = New Aspose.Imaging.GraphicsPath()

'Create an instance of Figure class
Dim figure1 As Aspose.Imaging.Figure = New Aspose.Imaging.Figure()

'Add Shape to Figure object
    figure1.AddShape(New Aspose.Imaging.Shapes.EllipseShape(New RectangleF(50, 50, 300, 300)))
    figure1.AddShape(New Aspose.Imaging.Shapes.PieShape(New Rectangle(New Point(110, 110), New Size(200, 200)), 0, 90))

'Create an instance of Figure class
Dim figure2 As Aspose.Imaging.Figure = New Aspose.Imaging.Figure()

'Add Shape to Figure object
    figure2.AddShape(New Aspose.Imaging.Shapes.ArcShape(New RectangleF(10, 10, 300, 300), 0, 45))
    figure2.AddShape(New Aspose.Imaging.Shapes.PolygonShape(New() { New PointF(150, 10), New PointF(150, 200), New PointF(250, 300), New PointF(350, 400) }, True))
    figure2.AddShape(New Aspose.Imaging.Shapes.RectangleShape(New Rectangle(New Point(250, 250), New Size(200, 200))))

'Add Figure object to GraphicsPath
    graphicspath.AddFigures(New() { figure1, figure2 })

'Draw path with Pen object of color Black
    graphics.DrawPath(New Pen(Aspose.Imaging.Color.Black, 2), graphicspath)

' save all changes.
    image.Save()
End Using</code></example>
    </member>
    <member name="M:Aspose.Imaging.Figure.RemoveShape(Aspose.Imaging.Shape)">
      <summary>
            Removes a shape from the figure.
            </summary>
      <param name="shape">The shape to remove.</param>
    </member>
    <member name="M:Aspose.Imaging.Figure.RemoveShapes(Aspose.Imaging.Shape[])">
      <summary>
            Removes a range of shapes from the figure.
            </summary>
      <param name="shapes">The shapes range to remove.</param>
    </member>
    <member name="M:Aspose.Imaging.Figure.Reverse">
      <summary>
            Reverses this figure shapes order and shapes point order.
            </summary>
    </member>
    <member name="M:Aspose.Imaging.Figure.GetBounds(Aspose.Imaging.Matrix)">
      <summary>
            Gets the object's bounds.
            </summary>
      <param name="matrix">The matrix to apply before bounds will be calculated.</param>
      <returns>The estimated object's bounds.</returns>
    </member>
    <member name="M:Aspose.Imaging.Figure.GetBounds(Aspose.Imaging.Matrix,Aspose.Imaging.Pen)">
      <summary>
            Gets the object's bounds.
            </summary>
      <param name="matrix">The matrix to apply before bounds will be calculated.</param>
      <param name="pen">The pen to use for object. This can influence the object's bounds size.</param>
      <returns>The estimated object's bounds.</returns>
    </member>
    <member name="M:Aspose.Imaging.Figure.Transform(Aspose.Imaging.Matrix)">
      <summary>
            Applies the specified transformation to the shape.
            </summary>
      <param name="transform">The transformation to apply.</param>
    </member>
    <member name="P:Aspose.Imaging.Figure.Shapes">
      <summary>
            Gets the figure shapes.
            </summary>
      <value>The figure shapes.</value>
    </member>
    <member name="P:Aspose.Imaging.Figure.Bounds">
      <summary>
            Gets or sets the object's bounds.
            </summary>
      <value>The object's bounds.</value>
    </member>
    <member name="P:Aspose.Imaging.Figure.IsClosed">
      <summary>
            Gets or sets a value indicating whether this figure is closed. A closed figure will make a difference only in case where
            the first and the last figure's shapes are continuous shapes. In such case the first point of the first shape will be
            connected by a straight line from the last point of the last shape.
            </summary>
      <value>
        <c>True</c> if this figure is closed; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:Aspose.Imaging.Figure.Segments">
      <summary>
            Gets the whole figure segments.
            </summary>
      <value>The figure segments.</value>
    </member>
    <member name="T:Aspose.Imaging.FileFormat">
      <summary>
            One of supported imaging file formats.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormat.Undefined">
      <summary>
            Undefined file format.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormat.Custom">
      <summary>
            Custom file format.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormat.Bmp">
      <summary>
            Bmp file format.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormat.Gif">
      <summary>
            Gif file format.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormat.Jpeg">
      <summary>
            Jpeg file format.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormat.Png">
      <summary>
            Png file format.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormat.Tiff">
      <summary>
            Tiff file format.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormat.Psd">
      <summary>
            Psd file format.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormat.Dxf">
      <summary>
            Dxf file format
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormat.Dwg">
      <summary>
            Dwg file format
            </summary>
    </member>
    <member name="T:Aspose.Imaging.FileFormats.Bmp.BitmapCompression">
      <summary>
            Specifies different bitmap compression methods.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Bmp.BitmapCompression.Rgb">
      <summary>
            No compression.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Bmp.BitmapCompression.Rle8">
      <summary>
            RLE 8-bit/pixel compression. Can be used only with 8-bit/pixel bitmaps.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Bmp.BitmapCompression.Rle4">
      <summary>
            RLE 4-bit/pixel compression. Can be used only with 4-bit/pixel bitmaps.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Bmp.BitmapCompression.Bitfields">
      <summary>
            Bit fields. Can be used only with 16 and 32-bit/pixel bitmaps.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Bmp.BitmapCompression.Jpeg">
      <summary>
            JPEG compression. The bitmap contains a JPEG image.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Bmp.BitmapCompression.Png">
      <summary>
            PNG compression. The bitmap contains a PNG image.
            </summary>
    </member>
    <member name="T:Aspose.Imaging.FileFormats.Bmp.BmpImage">
      <summary>
            A bmp image.
            </summary>
    </member>
    <member name="T:Aspose.Imaging.RasterCachedImage">
      <summary>
            Represents a raster image supporting raster graphics operations. This image caches pixel data when required.
            </summary>
    </member>
    <member name="T:Aspose.Imaging.RasterImage">
      <summary>
            Represents a raster image supporting raster graphics operations.
            </summary>
      <example>This example shows how to Loads Pixel information in an Array of Type Color, manipulates the array and set it back to the image. To perform these operations, this example creates a new Image file (in GIF format) uisng MemoryStream object.<code>[C#]

//Create an instance of MemoryStream
using (System.IO.MemoryStream stream = new System.IO.MemoryStream())
{
    //Create an instance of GifOptions and set its various properties including the Source property
    Aspose.Imaging.ImageOptions.GifOptions gifOptions = new Aspose.Imaging.ImageOptions.GifOptions();
    gifOptions.Source = new Aspose.Imaging.Sources.StreamSource(stream);

    //Create an instance of Image
    using (Aspose.Imaging.RasterImage image = (Aspose.Imaging.RasterImage)Aspose.Imaging.Image.Create(gifOptions, 500, 500))
    {
        //Get the pixels of image by specifying the area as image boundary
        Aspose.Imaging.Color[] pixels = image.LoadPixels(image.Bounds);

        //Loop over the Array and sets color of alrenative indexed pixel
        for (int index = 0; index &lt; pixels.Length; index++)
        {
            if (index % 2 == 0)
            {
                //Set the indexed pixel color to yellow
                pixels[index] = Aspose.Imaging.Color.Yellow;
            }
            else
            {
                //Set the indexed pixel color to blue
                pixels[index] = Aspose.Imaging.Color.Blue;
            }
        }

        //Apply the pixel changes to the image
        image.SavePixels(image.Bounds, pixels);

        // save all changes.
        image.Save();
    }
}</code><code>[Visual Basic]

'Create an instance of MemoryStream
Using stream As System.IO.MemoryStream = New System.IO.MemoryStream()
'Create an instance of GifOptions and set its various properties including the Source property
Dim gifOptions As Aspose.Imaging.ImageOptions.GifOptions = New Aspose.Imaging.ImageOptions.GifOptions()
    gifOptions.Source = New Aspose.Imaging.Sources.StreamSource(stream)

'Create an instance of Image
    Using image As Aspose.Imaging.RasterImage = CType(Aspose.Imaging.Image.Create(gifOptions, 500, 500), Aspose.Imaging.RasterImage)
'Get the pixels of image by specifying the area as image boundary
Dim pixels As Aspose.Imaging.Color() = image.LoadPixels(image.Bounds)

'Loop over the Array and sets color of alrenative indexed pixel
Dim index As Integer = 0
        Do While index &lt; pixels.Length
            If index Mod 2 = 0 Then
'Set the indexed pixel color to yellow
                pixels(index) = Aspose.Imaging.Color.Yellow
            Else
'Set the indexed pixel color to blue
                pixels(index) = Aspose.Imaging.Color.Blue
            End If
            index += 1
        Loop

'Apply the pixel changes to the image
        image.SavePixels(image.Bounds, pixels)

' save all changes.
        image.Save()
    End Using
End Using</code></example>
    </member>
    <member name="T:Aspose.Imaging.Image">
      <summary>
            The image is the base class for all type of images.
            </summary>
      <example>This example creates a new Image file in memory as specified by Source property of the BmpOptions instance.<code>[C#]

//Creates an instance of BmpOptions and set its various properties
Aspose.Imaging.ImageOptions.BmpOptions bmpOptions = new Aspose.Imaging.ImageOptions.BmpOptions();
bmpOptions.BitsPerPixel = 24;
using (MemoryStream ms = new MemoryStream())
{
    //Create an instance of StreamSource and assign it as Source for the instance of BmpOptions
    bmpOptions.Source = new Aspose.Imaging.Sources.StreamSource(ms, false);

    //Creates an instance of Image 
    using (Aspose.Imaging.Image image = Aspose.Imaging.Image.Create(bmpOptions, 500, 500))
    {
        //do some image processing

        // save all changes
        image.Save();
    }
}</code><code>[Visual Basic]

'Creates an instance of BmpOptions and set its various properties
Dim bmpOptions As Aspose.Imaging.ImageOptions.BmpOptions = New Aspose.Imaging.ImageOptions.BmpOptions()
bmpOptions.BitsPerPixel = 24
Using ms As MemoryStream = New MemoryStream()
'Create an instance of StreamSource and assign it as Source for the instance of BmpOptions
    bmpOptions.Source = New Aspose.Imaging.Sources.StreamSource(ms, False)

'Creates an instance of Image 
    Using image As Aspose.Imaging.Image = Aspose.Imaging.Image.Create(bmpOptions, 500, 500)
'do some image processing

' save all changes
        image.Save()
    End Using
End Using</code></example>
    </member>
    <member name="T:Aspose.Imaging.IObjectWithBounds">
      <summary>
            Represents an object with bounds.
            </summary>
    </member>
    <member name="P:Aspose.Imaging.IObjectWithBounds.Size">
      <summary>
            Gets the object size.
            </summary>
      <value>The object size.</value>
    </member>
    <member name="P:Aspose.Imaging.IObjectWithBounds.Bounds">
      <summary>
            Gets the object bounds.
            </summary>
      <value>The object bounds.</value>
    </member>
    <member name="P:Aspose.Imaging.IObjectWithBounds.Width">
      <summary>
            Gets the object width.
            </summary>
      <value>The object width.</value>
    </member>
    <member name="P:Aspose.Imaging.IObjectWithBounds.Height">
      <summary>
            Gets the object height.
            </summary>
      <value>The object height.</value>
    </member>
    <member name="M:Aspose.Imaging.Image.#ctor">
      <summary>
              Initializes a new instance of the <see cref="T:Aspose.Imaging.Image" /> class.
            </summary>
    </member>
    <member name="M:Aspose.Imaging.Image.#ctor(Aspose.Imaging.IColorPalette)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.Image" /> class.
            </summary>
      <param name="colorPalette">
            The color palette.
            </param>
    </member>
    <member name="M:Aspose.Imaging.Image.CanLoad(System.String)">
      <summary>
            Determines whether image can be loaded from the specified file path.
            </summary>
      <param name="filePath">
            The file path.
            </param>
      <returns>
        <c>true</c> if image can be loaded from the specified file; otherwise, <c>false</c>.
            </returns>
    </member>
    <member name="M:Aspose.Imaging.Image.CanLoad(System.String,Aspose.Imaging.LoadOptions)">
      <summary>
            Determines whether image can be loaded from the specified file path and optionally using the specified open options.
            </summary>
      <param name="filePath">
            The file path.
            </param>
      <param name="loadOptions">
            The load options.
            </param>
      <returns>
        <c>true</c> if image can be loaded from the specified file; otherwise, <c>false</c>.
            </returns>
    </member>
    <member name="M:Aspose.Imaging.Image.CanLoad(System.IO.Stream)">
      <summary>
            Determines whether image can be loaded from the specified stream.
            </summary>
      <param name="stream">
            The stream to load from.
            </param>
      <returns>
        <c>true</c> if image can be loaded from the specified stream; otherwise, <c>false</c>.
            </returns>
    </member>
    <member name="M:Aspose.Imaging.Image.CanLoad(System.IO.Stream,Aspose.Imaging.LoadOptions)">
      <summary>
            Determines whether image can be loaded from the specified stream and optionally using the specified <paramref name="loadOptions" />.
            </summary>
      <param name="stream">
            The stream to load from.
            </param>
      <param name="loadOptions">
            The load options.
            </param>
      <returns>
        <c>true</c> if image can be loaded from the specified stream; otherwise, <c>false</c>.
            </returns>
    </member>
    <member name="M:Aspose.Imaging.Image.Create(Aspose.Imaging.ImageOptionsBase,System.Int32,System.Int32)">
      <summary>
            Creates a new image using the specified create options.
            </summary>
      <param name="imageOptions">
            The image options.
            </param>
      <param name="width">
            The width.
            </param>
      <param name="height">
            The height.
            </param>
      <returns>
            The newly created image.
            </returns>
      <example>This example creates a new Image file in memory as specified by Source property of the BmpOptions instance.<code>[C#]

//Creates an instance of BmpOptions and set its various properties
Aspose.Imaging.ImageOptions.BmpOptions bmpOptions = new Aspose.Imaging.ImageOptions.BmpOptions();
bmpOptions.BitsPerPixel = 24;
using (MemoryStream ms = new MemoryStream())
{
    //Create an instance of StreamSource and assign it as Source for the instance of BmpOptions
    bmpOptions.Source = new Aspose.Imaging.Sources.StreamSource(ms, false);

    //Creates an instance of Image 
    using (Aspose.Imaging.Image image = Aspose.Imaging.Image.Create(bmpOptions, 500, 500))
    {
        //do some image processing

        // save all changes
        image.Save();
    }
}</code><code>[Visual Basic]

'Creates an instance of BmpOptions and set its various properties
Dim bmpOptions As Aspose.Imaging.ImageOptions.BmpOptions = New Aspose.Imaging.ImageOptions.BmpOptions()
bmpOptions.BitsPerPixel = 24
Using ms As MemoryStream = New MemoryStream()
'Create an instance of StreamSource and assign it as Source for the instance of BmpOptions
    bmpOptions.Source = New Aspose.Imaging.Sources.StreamSource(ms, False)

'Creates an instance of Image 
    Using image As Aspose.Imaging.Image = Aspose.Imaging.Image.Create(bmpOptions, 500, 500)
'do some image processing

' save all changes
        image.Save()
    End Using
End Using</code></example>
    </member>
    <member name="M:Aspose.Imaging.Image.GetFileFormat(System.String)">
      <summary>
            Gets the file format.
            </summary>
      <param name="filePath">
            The file path.
            </param>
      <returns>
            The determined file format.
            </returns>
      <remarks>
            The file format determined does not mean that the specified image may be loaded. Use one of the CanLoad method overloads to determine whether file may be loaded.
            </remarks>
    </member>
    <member name="M:Aspose.Imaging.Image.GetFileFormat(System.IO.Stream)">
      <summary>
            Gets the file format.
            </summary>
      <param name="stream">
            The stream.
            </param>
      <returns>
            The determined file format.
            </returns>
      <remarks>
            The file format determined does not mean that the specified image may be loaded. Use one of the CanLoad method overloads to determine whether stream may be loaded.
            </remarks>
    </member>
    <member name="M:Aspose.Imaging.Image.GetFittingRectangle(Aspose.Imaging.Rectangle,System.Int32,System.Int32)">
      <summary>
            Gets rectangle which fits the current image.
            </summary>
      <param name="rectangle">
            The rectangle to get fitting rectangle for.
            </param>
      <param name="width">
            The object width.
            </param>
      <param name="height">
            The object height.
            </param>
      <returns>
            The fitting rectangle or exception if no fitting rectangle can be found.
            </returns>
    </member>
    <member name="M:Aspose.Imaging.Image.GetFittingRectangle(Aspose.Imaging.Rectangle,Aspose.Imaging.Color[],System.Int32,System.Int32)">
      <summary>
            Gets rectangle which fits the current image.
            </summary>
      <param name="rectangle">
            The rectangle to get fitting rectangle for.
            </param>
      <param name="pixels">
            The pixels.
            </param>
      <param name="width">
            The object width.
            </param>
      <param name="height">
            The object height.
            </param>
      <returns>
            The fitting rectangle or exception if no fitting rectangle can be found.
            </returns>
    </member>
    <member name="M:Aspose.Imaging.Image.Load(System.String,Aspose.Imaging.LoadOptions)">
      <summary>
            Loads a new image from the specified file.
            </summary>
      <param name="filePath">The file path to load image from.</param>
      <param name="loadOptions">The load options.</param>
      <returns>
            The loaded image.
            </returns>
    </member>
    <member name="M:Aspose.Imaging.Image.Load(System.String)">
      <summary>
            Loads a new image from the specified file.
            </summary>
      <param name="filePath">
            The file path to load image from.
            </param>
      <returns>
            The loaded image.
            </returns>
      <example>This example demonstrates the loading of an existing Image stream into an instance of Aspose.Imaging.Image.<code>[C#]

//Create Image instance and initialize it with an existing image file from memory stream
using (Aspose.Imaging.Image image = Aspose.Imaging.Image.Load(memoryStream)
{
    //do some image processing
}</code><code>[Visual Basic]

'Create Image instance and initialize it with an existing image file from memory stream
Using (Aspose.Imaging.Image image = Aspose.Imaging.Image.Load(memoryStream)
'do some image processing
End Using</code></example>
    </member>
    <member name="M:Aspose.Imaging.Image.Load(System.IO.Stream,Aspose.Imaging.LoadOptions)">
      <summary>
            Loads a new image from the specified stream.
            </summary>
      <param name="stream">The stream to load image from.</param>
      <param name="loadOptions">The load options.</param>
      <returns>
            The loaded image.
            </returns>
    </member>
    <member name="M:Aspose.Imaging.Image.Load(System.IO.Stream)">
      <summary>
            Loads a new image from the specified stream.
            </summary>
      <param name="stream">
            The stream to load image from.
            </param>
      <returns>
            The loaded image.
            </returns>
    </member>
    <member name="M:Aspose.Imaging.Image.CanSave(Aspose.Imaging.ImageOptionsBase)">
      <summary>
            Determines whether image can be saved to the specified file format represented by the passed save options.
            </summary>
      <param name="options">
            The save options to use.
            </param>
      <returns>
        <c>true</c> if image can be saved to the specified file format represented by the passed save options; otherwise, <c>false</c>.
            </returns>
    </member>
    <member name="M:Aspose.Imaging.Image.Resize(System.Int32,System.Int32)">
      <summary>
            Resizes the image. The default <see cref="F:Aspose.Imaging.ResizeType.LeftTopToLeftTop" /> is used.
            </summary>
      <param name="newWidth">
            The new width.
            </param>
      <param name="newHeight">
            The new height.
            </param>
    </member>
    <member name="M:Aspose.Imaging.Image.Resize(System.Int32,System.Int32,Aspose.Imaging.ResizeType)">
      <summary>
            Resizes the image.
            </summary>
      <param name="newWidth">
            The new width.
            </param>
      <param name="newHeight">
            The new height.
            </param>
      <param name="resizeType">
            The resize type.
            </param>
    </member>
    <member name="M:Aspose.Imaging.Image.ResizeWidthProportionally(System.Int32)">
      <summary>
            Resizes the width proportionally.
            </summary>
      <param name="newWidth">The new width.</param>
    </member>
    <member name="M:Aspose.Imaging.Image.ResizeHeightProportionally(System.Int32)">
      <summary>
            Resizes the height proportionally.
            </summary>
      <param name="newHeight">The new height.</param>
    </member>
    <member name="M:Aspose.Imaging.Image.ResizeWidthProportionally(System.Int32,Aspose.Imaging.ResizeType)">
      <summary>
            Resizes the width proportionally.
            </summary>
      <param name="newWidth">The new width.</param>
      <param name="resizeType">Type of the resize.</param>
    </member>
    <member name="M:Aspose.Imaging.Image.ResizeHeightProportionally(System.Int32,Aspose.Imaging.ResizeType)">
      <summary>
            Resizes the height proportionally.
            </summary>
      <param name="newHeight">The new height.</param>
      <param name="resizeType">Type of the resize.</param>
    </member>
    <member name="M:Aspose.Imaging.Image.RotateFlip(Aspose.Imaging.RotateFlipType)">
      <summary>
            Rotates, flips, or rotates and flips the image.
            </summary>
      <param name="rotateFlipType">
            Type of the rotate flip.
            </param>
      <example>This example demonstrates the use of Rotate operation on an image. Example loads an existing image file from stream and performs the Rotate operation on the image according to the value of Enum Aspose.Imaging.RotateFlipType<code>[C#]

//Create an instance of image class and initialize it with an existing image file through stream object
using (Aspose.Imaging.Image image = Aspose.Imaging.Image.Load(memoryStream))
{
    //Rotate the image at 180 degree about X axis
    image.RotateFlip(Aspose.Imaging.RotateFlipType.Rotate180FlipX);

    // save all changes.
    image.Save();
}</code><code>[Visual Basic]

'Create an instance of image class and initialize it with an existing image file through stream object
Using image As Aspose.Imaging.Image = Aspose.Imaging.Image.Load(memoryStream)
'Rotate the image at 180 degree about X axis
    image.RotateFlip(Aspose.Imaging.RotateFlipType.Rotate180FlipX)

' save all changes.
    image.Save()
End Using</code></example>
    </member>
    <member name="M:Aspose.Imaging.Image.Save">
      <summary>
            Saves the image data to the underlying stream.
            </summary>
    </member>
    <member name="M:Aspose.Imaging.Image.Save(System.String,Aspose.Imaging.ImageOptionsBase)">
      <summary>
            Saves the object's data to the specified file location in the specified file format according to save options.
            </summary>
      <param name="filePath">
            The file path.
            </param>
      <param name="options">
            The options.
            </param>
      <example>This example shows the simple steps to Save an Image. To demonstrate this operation, we load an existing file from memory stream, perform Rotate operation on the image and Save the image in PSD format to another stream.<code>[C#]

//Create an instance of image class and initialize it with an existing file through stream
using (Aspose.Imaging.Image image = Aspose.Imaging.Image.Load(memoryStream))
{
    //Rotate the image at 180 degree about X axis
    image.RotateFlip(Aspose.Imaging.RotateFlipType.Rotate180FlipX);

    //Save the Image as PSD to stream with default PsdOptions settings
    image.Save(memoryStream2, new Aspose.Imaging.ImageOptions.PsdOptions());
}</code><code>[Visual Basic]

'Create an instance of image class and initialize it with an existing file through stream
Using image As Aspose.Imaging.Image = Aspose.Imaging.Image.Load(memoryStream)
'Rotate the image at 180 degree about X axis
    image.RotateFlip(Aspose.Imaging.RotateFlipType.Rotate180FlipX)

'Save the Image as PSD to stream with default PsdOptions settings
    image.Save(memoryStream2, New Aspose.Imaging.ImageOptions.PsdOptions())
End Using</code></example>
    </member>
    <member name="M:Aspose.Imaging.Image.Save(System.IO.Stream,Aspose.Imaging.ImageOptionsBase)">
      <summary>
            Saves the image's data to the specified stream in the specified file format according to save options.
            </summary>
      <param name="stream">
            The stream to save the image's data to.
            </param>
      <param name="optionsBase">
            The save options.
            </param>
    </member>
    <member name="M:Aspose.Imaging.Image.SetPalette(Aspose.Imaging.IColorPalette,System.Boolean)">
      <summary>
            Sets the image palette.
            </summary>
      <param name="palette">
            The palette to set.
            </param>
      <param name="updateColors">
            if set to <c>true</c> colors will be updated according to the new palette; otherwise color indexes remain unchanged. Note that unchanged indexes may crash the image on loading if some indexes have no corresponding palette entries.
            </param>
    </member>
    <member name="M:Aspose.Imaging.Image.GetProportionalWidth(System.Int32,System.Int32,System.Int32)">
      <summary>
            Gets a proportional width.
            </summary>
      <param name="width">The width.</param>
      <param name="height">The height.</param>
      <param name="newHeight">The new height.</param>
      <returns>The proportional width.</returns>
    </member>
    <member name="M:Aspose.Imaging.Image.GetProportionalHeight(System.Int32,System.Int32,System.Int32)">
      <summary>
            Gets a proportional height.
            </summary>
      <param name="width">The width.</param>
      <param name="height">The height.</param>
      <param name="newWidth">The new width.</param>
      <returns>The proportional height.</returns>
    </member>
    <member name="M:Aspose.Imaging.Image.GetFitRectangle(Aspose.Imaging.Rectangle)">
      <summary>
            Gets rectangle which fits the current image.
            </summary>
      <param name="rectangle">
            The rectangle to get fitting rectangle for.
            </param>
      <returns>
            The fitting rectangle
            </returns>
    </member>
    <member name="M:Aspose.Imaging.Image.GetFitRectangle(Aspose.Imaging.Rectangle,Aspose.Imaging.Color[])">
      <summary>
            Gets rectangle which fits the current bitmap taking into account the pixels passed. The passed pixels array count should be equal to the fitting rectangle size.
            </summary>
      <param name="rectangle">
            The rectangle to get fitting rectangle for.
            </param>
      <param name="pixels">
            The pixels array.
            </param>
      <returns>
            The fitting rectangle.
            </returns>
    </member>
    <member name="M:Aspose.Imaging.Image.OnPaletteChanged(Aspose.Imaging.IColorPalette,Aspose.Imaging.IColorPalette)">
      <summary>
            Called when palette is changed.
            </summary>
      <param name="oldPalette">
            The old palette.
            </param>
      <param name="newPalette">
            The new palette.
            </param>
    </member>
    <member name="M:Aspose.Imaging.Image.OnPaletteChanging(Aspose.Imaging.IColorPalette,Aspose.Imaging.IColorPalette)">
      <summary>
            Called when palette is changing.
            </summary>
      <param name="oldPalette">
            The old palette.
            </param>
      <param name="newPalette">
            The new palette.
            </param>
    </member>
    <member name="M:Aspose.Imaging.Image.ReleaseManagedResources">
      <summary>
            Releases the managed resources. Make sure no unmanaged resources are released here, since they may have been already released.
            </summary>
    </member>
    <member name="P:Aspose.Imaging.Image.BitsPerPixel">
      <summary>
              Gets the image bits per pixel count.
            </summary>
      <value>The image bits per pixel count.</value>
    </member>
    <member name="P:Aspose.Imaging.Image.Bounds">
      <summary>
              Gets the image bounds.
            </summary>
      <value>The image bounds.</value>
    </member>
    <member name="P:Aspose.Imaging.Image.Container">
      <summary>
              Gets the <see cref="T:Aspose.Imaging.Image" /> container.
            </summary>
      <value>
              The <see cref="T:Aspose.Imaging.Image" /> container.
            </value>
      <remarks>
              If this property is not null it indicates the image is contained whithin another image.
            </remarks>
    </member>
    <member name="P:Aspose.Imaging.Image.Height">
      <summary>
              Gets the image height.
            </summary>
      <value>The image height.</value>
    </member>
    <member name="P:Aspose.Imaging.Image.Palette">
      <summary>
              Gets or sets the color palette.
            </summary>
      <value> The color palette.</value>
    </member>
    <member name="P:Aspose.Imaging.Image.Size">
      <summary>
              Gets the image size.
            </summary>
      <value>The image size.</value>
    </member>
    <member name="P:Aspose.Imaging.Image.Width">
      <summary>
              Gets the image width.
            </summary>
      <value>The image width.</value>
    </member>
    <member name="P:Aspose.Imaging.Image.HasBackgroundColor">
      <summary>
            Gets a value indicating whether image has background color.
            </summary>
    </member>
    <member name="P:Aspose.Imaging.Image.BackgroundColor">
      <summary>
            Gets the background color.
            </summary>
    </member>
    <member name="T:Aspose.Imaging.IRasterImagePixelLoader">
      <summary>
            The raster image pixel loader.
            </summary>
    </member>
    <member name="T:Aspose.Imaging.IRasterImageRawDataLoader">
      <summary>
            The raster image raw data loader.
            </summary>
    </member>
    <member name="M:Aspose.Imaging.IRasterImageRawDataLoader.LoadRawData(Aspose.Imaging.Rectangle,Aspose.Imaging.RawDataSettings,Aspose.Imaging.IPartialRawDataLoader)">
      <summary>
            Loads raw data.
            </summary>
      <param name="rectangle">The rectangle to load raw data from.</param>
      <param name="rawDataSettings">The raw data settings to use for loaded data. Note if data is not in the format specified then data conversion will be performed.</param>
      <param name="rawDataLoader">The raw data loader.</param>
    </member>
    <member name="P:Aspose.Imaging.IRasterImageRawDataLoader.IsRawDataAvailable">
      <summary>
            Gets a value indicating whether raw data loading is supported.
            </summary>
      <value>
        <c>true</c> if raw data loading is supported; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Aspose.Imaging.IRasterImageRawDataLoader.RawDataSettings">
      <summary>
            Gets the current raw data settings. Note when using these settings the data loads without conversion.
            </summary>
      <value>
            The current raw data settings.
            </value>
    </member>
    <member name="M:Aspose.Imaging.IRasterImagePixelLoader.LoadPartialPixels(Aspose.Imaging.Rectangle,Aspose.Imaging.IPartialPixelLoader)">
      <summary>
            Loads pixels partially (by blocks).
            </summary>
      <param name="rectangle">The rectangle to load pixels from.</param>
      <param name="partialLoader">The partial loader.</param>
    </member>
    <member name="M:Aspose.Imaging.RasterImage.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.RasterImage" /> class.
            </summary>
    </member>
    <member name="M:Aspose.Imaging.RasterImage.#ctor(Aspose.Imaging.IColorPalette)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.RasterImage" /> class.
            </summary>
      <param name="colorPalette">The color palette.</param>
    </member>
    <member name="M:Aspose.Imaging.RasterImage.GetDefaultPixels(Aspose.Imaging.Rectangle,Aspose.Imaging.IPartialPixelLoader)">
      <summary>
            Gets the default pixels array using partial pixel loader.
            </summary>
      <param name="rectangle">The rectangle to get pixels for.</param>
      <param name="partialPixelLoader">The partial pixel loader.</param>
    </member>
    <member name="M:Aspose.Imaging.RasterImage.GetDefaultPixels(Aspose.Imaging.Rectangle)">
      <summary>
            Gets the default pixels array.
            </summary>
      <param name="rectangle">The rectangle to get pixels for.</param>
      <returns>The default pixels array.</returns>
    </member>
    <member name="M:Aspose.Imaging.RasterImage.GetPixel(System.Int32,System.Int32)">
      <summary>
            Gets an image pixel.
            </summary>
      <param name="x">The pixel x location.</param>
      <param name="y">The pixel y location.</param>
      <returns>The pixel color for the specified location.</returns>
    </member>
    <member name="M:Aspose.Imaging.RasterImage.SetPixel(System.Int32,System.Int32,Aspose.Imaging.Color)">
      <summary>
            Sets an image pixel for the specified position.
            </summary>
      <param name="x">The pixel x location.</param>
      <param name="y">The pixel y location.</param>
      <param name="color">The pixel color for the specified position.</param>
    </member>
    <member name="M:Aspose.Imaging.RasterImage.ReadScanLine(System.Int32)">
      <summary>
            Reads the whole scan line by the specified scan line index.
            </summary>
      <param name="scanLineIndex">Zero based index of the scan line.</param>
      <returns>The scan line pixel color values array.</returns>
    </member>
    <member name="M:Aspose.Imaging.RasterImage.WriteScanLine(System.Int32,Aspose.Imaging.Color[])">
      <summary>
            Writes the whole scan line to the specified scan line index.
            </summary>
      <param name="scanLineIndex">Zero based index of the scan line.</param>
      <param name="pixels">The pixel colors array to write.</param>
    </member>
    <member name="M:Aspose.Imaging.RasterImage.LoadPartialPixels(Aspose.Imaging.Rectangle,Aspose.Imaging.IPartialPixelLoader)">
      <summary>
            Loads pixels partially by packs.
            </summary>
      <param name="desiredRectangle">The desired rectangle.</param>
      <param name="pixelLoader">The pixel loader.</param>
    </member>
    <member name="M:Aspose.Imaging.RasterImage.LoadPixels(Aspose.Imaging.Rectangle)">
      <summary>
            Loads pixels.
            </summary>
      <param name="rectangle">The rectangle to load pixels from.</param>
      <returns>
            The loaded pixels array.
            </returns>
      <example>This example shows how to Loads Pixel information in an Array of Type Color, manipulates the array and set it back to the image. To perform these operations, this example creates a new Image file (in GIF format) uisng MemoryStream object.<code>[C#]

//Create an instance of MemoryStream
using (System.IO.MemoryStream stream = new System.IO.MemoryStream())
{
    //Create an instance of GifOptions and set its various properties including the Source property
    Aspose.Imaging.ImageOptions.GifOptions gifOptions = new Aspose.Imaging.ImageOptions.GifOptions();
    gifOptions.Source = new Aspose.Imaging.Sources.StreamSource(stream);

    //Create an instance of Image
    using (Aspose.Imaging.RasterImage image = (Aspose.Imaging.RasterImage)Aspose.Imaging.Image.Create(gifOptions, 500, 500))
    {
        //Get the pixels of image by specifying the area as image boundary
        Aspose.Imaging.Color[] pixels = image.LoadPixels(image.Bounds);

        //Loop over the Array and sets color of alrenative indexed pixel
        for (int index = 0; index &lt; pixels.Length; index++)
        {
            if (index % 2 == 0)
            {
                //Set the indexed pixel color to yellow
                pixels[index] = Aspose.Imaging.Color.Yellow;
            }
            else
            {
                //Set the indexed pixel color to blue
                pixels[index] = Aspose.Imaging.Color.Blue;
            }
        }

        //Apply the pixel changes to the image
        image.SavePixels(image.Bounds, pixels);

        // save all changes.
        image.Save();
    }
}</code><code>[Visual Basic]

'Create an instance of MemoryStream
Using stream As System.IO.MemoryStream = New System.IO.MemoryStream()
'Create an instance of GifOptions and set its various properties including the Source property
Dim gifOptions As Aspose.Imaging.ImageOptions.GifOptions = New Aspose.Imaging.ImageOptions.GifOptions()
    gifOptions.Source = New Aspose.Imaging.Sources.StreamSource(stream)

'Create an instance of Image
    Using image As Aspose.Imaging.RasterImage = CType(Aspose.Imaging.Image.Create(gifOptions, 500, 500), Aspose.Imaging.RasterImage)
'Get the pixels of image by specifying the area as image boundary
Dim pixels As Aspose.Imaging.Color() = image.LoadPixels(image.Bounds)

'Loop over the Array and sets color of alrenative indexed pixel
Dim index As Integer = 0
        Do While index &lt; pixels.Length
            If index Mod 2 = 0 Then
'Set the indexed pixel color to yellow
                pixels(index) = Aspose.Imaging.Color.Yellow
            Else
'Set the indexed pixel color to blue
                pixels(index) = Aspose.Imaging.Color.Blue
            End If
            index += 1
        Loop

'Apply the pixel changes to the image
        image.SavePixels(image.Bounds, pixels)

' save all changes.
        image.Save()
    End Using
End Using</code></example>
    </member>
    <member name="M:Aspose.Imaging.RasterImage.LoadCMYKPixels(Aspose.Imaging.Rectangle)">
      <summary>
            Loads pixels in CMYK format.
            </summary>
      <param name="rectangle">The rectangle to load pixels from.</param>
      <returns>
            The loaded CMYK pixels array.
            </returns>
    </member>
    <member name="M:Aspose.Imaging.RasterImage.LoadRawData(Aspose.Imaging.Rectangle,Aspose.Imaging.RawDataSettings,Aspose.Imaging.IPartialRawDataLoader)">
      <summary>
            Loads raw data.
            </summary>
      <param name="rectangle">The rectangle to load raw data from.</param>
      <param name="rawDataSettings">The raw data settings to use for loaded data. Note if data is not in the format specified then data conversion will be performed.</param>
      <param name="rawDataLoader">The raw data loader.</param>
    </member>
    <member name="M:Aspose.Imaging.RasterImage.SaveRawData(System.Byte[],System.Int32,Aspose.Imaging.Rectangle,Aspose.Imaging.RawDataSettings)">
      <summary>
            Saves the raw data.
            </summary>
      <param name="data">The raw data.</param>
      <param name="dataOffset">The starting raw data offset.</param>
      <param name="rectangle">The raw data rectangle.</param>
      <param name="rawDataSettings">The raw data settings the data is in.</param>
    </member>
    <member name="M:Aspose.Imaging.RasterImage.SavePixels(Aspose.Imaging.Rectangle,Aspose.Imaging.Color[])">
      <summary>
            Saves the pixels.
            </summary>
      <param name="rectangle">The rectangle to save pixels to.</param>
      <param name="pixels">The pixels array.</param>
      <example>This example shows how to Loads Pixel information in an Array of Type Color, manipulates the array and set it back to the image. To perform these operations, this example creates a new Image file (in GIF format) uisng MemoryStream object.<code>[C#]

//Create an instance of MemoryStream
using (System.IO.MemoryStream stream = new System.IO.MemoryStream())
{
    //Create an instance of GifOptions and set its various properties including the Source property
    Aspose.Imaging.ImageOptions.GifOptions gifOptions = new Aspose.Imaging.ImageOptions.GifOptions();
    gifOptions.Source = new Aspose.Imaging.Sources.StreamSource(stream);

    //Create an instance of Image
    using (Aspose.Imaging.RasterImage image = (Aspose.Imaging.RasterImage)Aspose.Imaging.Image.Create(gifOptions, 500, 500))
    {
        //Get the pixels of image by specifying the area as image boundary
        Aspose.Imaging.Color[] pixels = image.LoadPixels(image.Bounds);

        //Loop over the Array and sets color of alrenative indexed pixel
        for (int index = 0; index &lt; pixels.Length; index++)
        {
            if (index % 2 == 0)
            {
                //Set the indexed pixel color to yellow
                pixels[index] = Aspose.Imaging.Color.Yellow;
            }
            else
            {
                //Set the indexed pixel color to blue
                pixels[index] = Aspose.Imaging.Color.Blue;
            }
        }

        //Apply the pixel changes to the image
        image.SavePixels(image.Bounds, pixels);

        // save all changes.
        image.Save();
    }
}</code><code>[Visual Basic]

'Create an instance of MemoryStream
Using stream As System.IO.MemoryStream = New System.IO.MemoryStream()
'Create an instance of GifOptions and set its various properties including the Source property
Dim gifOptions As Aspose.Imaging.ImageOptions.GifOptions = New Aspose.Imaging.ImageOptions.GifOptions()
    gifOptions.Source = New Aspose.Imaging.Sources.StreamSource(stream)

'Create an instance of Image
    Using image As Aspose.Imaging.RasterImage = CType(Aspose.Imaging.Image.Create(gifOptions, 500, 500), Aspose.Imaging.RasterImage)
'Get the pixels of image by specifying the area as image boundary
Dim pixels As Aspose.Imaging.Color() = image.LoadPixels(image.Bounds)

'Loop over the Array and sets color of alrenative indexed pixel
Dim index As Integer = 0
        Do While index &lt; pixels.Length
            If index Mod 2 = 0 Then
'Set the indexed pixel color to yellow
                pixels(index) = Aspose.Imaging.Color.Yellow
            Else
'Set the indexed pixel color to blue
                pixels(index) = Aspose.Imaging.Color.Blue
            End If
            index += 1
        Loop

'Apply the pixel changes to the image
        image.SavePixels(image.Bounds, pixels)

' save all changes.
        image.Save()
    End Using
End Using</code></example>
    </member>
    <member name="M:Aspose.Imaging.RasterImage.SaveCMYKPixels(Aspose.Imaging.Rectangle,Aspose.Imaging.CMYKColor[])">
      <summary>
            Saves the pixels.
            </summary>
      <param name="rectangle">The rectangle to save pixels to.</param>
      <param name="pixels">The CMYK pixels array.</param>
    </member>
    <member name="M:Aspose.Imaging.RasterImage.SetResolution(System.Double,System.Double)">
      <summary>
            Sets the resolution for this <see cref="T:Aspose.Imaging.RasterImage" />.
            </summary>
      <param name="dpiX">The horizontal resolution, in dots per inch, of the <see cref="T:Aspose.Imaging.RasterImage" />.</param>
      <param name="dpiY">The vertical resolution, in dots per inch, of the <see cref="T:Aspose.Imaging.RasterImage" />.</param>
    </member>
    <member name="M:Aspose.Imaging.RasterImage.SetPalette(Aspose.Imaging.IColorPalette,System.Boolean)">
      <summary>
            Sets the image palette.
            </summary>
      <param name="palette">The palette to set.</param>
      <param name="updateColors">if set to <c>true</c> colors will be updated according to the new palette; otherwise color indexes remain unchanged. Note that unchanged indexes may crash the image on loading if some indexes have no corresponding palette entries.</param>
    </member>
    <member name="M:Aspose.Imaging.RasterImage.Resize(System.Int32,System.Int32,Aspose.Imaging.ResizeType)">
      <summary>
            Resizes the image.
            </summary>
      <param name="newWidth">The new width.</param>
      <param name="newHeight">The new height.</param>
      <param name="resizeType">The resize type.</param>
    </member>
    <member name="M:Aspose.Imaging.RasterImage.Crop(Aspose.Imaging.Rectangle)">
      <summary>
            Crops the specified rectangle.
            </summary>
      <param name="rectangle">The rectangle.</param>
    </member>
    <member name="M:Aspose.Imaging.RasterImage.BinarizeFixed(System.Byte)">
      <summary>
            Binarization of an image with predefined threshold
            </summary>
      <param name="threshold">Threshold value. If corresponding gray value of a pixel is greater than threshold, a value of 255 will be assigned to it, 0 otherwise.</param>
    </member>
    <member name="M:Aspose.Imaging.RasterImage.BinarizeOtsu">
      <summary>
            Binarization of an image with Otsu thresholding
            </summary>
    </member>
    <member name="M:Aspose.Imaging.RasterImage.Grayscale">
      <summary>
            Transformation of an image to its grayscale representation
            </summary>
    </member>
    <member name="M:Aspose.Imaging.RasterImage.AdjustBrightness(System.Int32)">
      <summary>
            Adjust of a brightness for image.
            </summary>
      <param name="brightness">Brightness value.</param>
    </member>
    <member name="M:Aspose.Imaging.RasterImage.AdjustContrast(System.Single)">
      <summary>
            Image contrasting
            </summary>
      <param name="contrast">Contrast value (in range [-100; 100])</param>
    </member>
    <member name="M:Aspose.Imaging.RasterImage.AdjustGamma(System.Single,System.Single,System.Single)">
      <summary>
            Gamma-correction of an image.
            </summary>
      <param name="gammaRed">Gamma for red channel coefficient</param>
      <param name="gammaGreen">Gamma for green channel coefficient</param>
      <param name="gammaBlue">Gamma for blue channel coefficient</param>
    </member>
    <member name="M:Aspose.Imaging.RasterImage.AdjustGamma(System.Single)">
      <summary>
            Gamma-correction of an image.
            </summary>
      <param name="gamma">Gamma for red, green and blue channels coefficient</param>
    </member>
    <member name="M:Aspose.Imaging.RasterImage.Crop(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Crop image with shifts.
            </summary>
      <param name="leftShift">The left shift.</param>
      <param name="rightShift">The right shift.</param>
      <param name="topShift">The top shift.</param>
      <param name="bottomShift">The bottom shift.</param>
    </member>
    <member name="M:Aspose.Imaging.RasterImage.Rotate(System.Single,System.Boolean,Aspose.Imaging.Color)">
      <summary>
            Rotate image around the center.
            </summary>
      <param name="angle">The rotate angle in degrees. Positive values will rotate clockwise.</param>
      <param name="resizeProportionally">if set to <c>true</c> you will have your image size changed according to rotated rectangle (corner points) projections in other case that leaves dimensions untouched and only internal image contents are rotated.</param>
      <param name="backgroundColor">Color of the background.</param>
      <exception cref="T:System.NotImplementedException">
      </exception>
    </member>
    <member name="M:Aspose.Imaging.RasterImage.Rotate(System.Single)">
      <summary>
            Rotate image around the center.
            </summary>
      <param name="angle">The rotate angle in degrees. Positive values will rotate clockwise.</param>
    </member>
    <member name="M:Aspose.Imaging.RasterImage.LoadPixelsInternal(Aspose.Imaging.Rectangle,Aspose.Imaging.IPartialPixelLoader)">
      <summary>
            Loads pixels (format specific method).
            </summary>
      <param name="rectangle">The rectangle to load pixels from.</param>
      <param name="pixelLoader">The partial pixel loader. The inheritor should call corresponding methods on this interface when pixels are loaded.</param>
    </member>
    <member name="M:Aspose.Imaging.RasterImage.SavePixelsInternal(Aspose.Imaging.Rectangle,Aspose.Imaging.Color[])">
      <summary>
            Saves pixels (format specific method).
            </summary>
      <param name="rectangle">The rectangle to save pixels to.</param>
      <param name="pixels">The pixels array.</param>
    </member>
    <member name="M:Aspose.Imaging.RasterImage.ReleaseManagedResources">
      <summary>
            Releases the managed resources. Make sure no unmanaged resources are released here, since they may have been already released.
            </summary>
    </member>
    <member name="P:Aspose.Imaging.RasterImage.RawDitheringMethod">
      <summary>
            Gets or sets the dithering method to use for raw data conversion
            </summary>
      <value>
            The dithering method to use for raw data conversion
            </value>
    </member>
    <member name="P:Aspose.Imaging.RasterImage.RawIndexedColorConverter">
      <summary>
            Gets or sets the indexed color converter
            </summary>
      <value>
            The indexed color converter
            </value>
    </member>
    <member name="P:Aspose.Imaging.RasterImage.RawCustomColorConverter">
      <summary>
            Gets or sets the custom color converter
            </summary>
      <value>
            The custom color converter
            </value>
    </member>
    <member name="P:Aspose.Imaging.RasterImage.RawFallbackIndex">
      <summary>
            Gets or sets the fallback index to use when palette index is out of bounds
            </summary>
      <value>
            The fallback index to use when palette index is out of bounds
            </value>
    </member>
    <member name="P:Aspose.Imaging.RasterImage.RawDataSettings">
      <summary>
            Gets the current raw data settings. Note when using these settings the data loads without conversion.
            </summary>
      <value>
            The current raw data settings.
            </value>
    </member>
    <member name="P:Aspose.Imaging.RasterImage.RawDataFormat">
      <summary>
            Gets the raw data format.
            </summary>
      <value>
            The raw data format.
            </value>
    </member>
    <member name="P:Aspose.Imaging.RasterImage.RawLineSize">
      <summary>
            Gets the raw line size in bytes.
            </summary>
      <value>
            The raw line size in bytes.
            </value>
    </member>
    <member name="P:Aspose.Imaging.RasterImage.IsRawDataAvailable">
      <summary>
            Gets a value indicating whether raw data loading is available.
            </summary>
      <value>
        <c>true</c> if this raw data loading is available; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Aspose.Imaging.RasterImage.HorizontalResolution">
      <summary>
            Gets or sets the horizontal resolution, in pixels per inch, of this <see cref="T:Aspose.Imaging.RasterImage" />.
            </summary>
      <value>The horizontal resolution.</value>
      <remarks>Note by default this value is always 96 since different platforms cannot return the screen resolution. You may consider using the SetResolution method for updating both resolution values in single call.</remarks>
    </member>
    <member name="P:Aspose.Imaging.RasterImage.VerticalResolution">
      <summary>
            Gets or sets the vertical resolution, in pixels per inch, of this <see cref="T:Aspose.Imaging.RasterImage" />.
            </summary>
      <value>The vertical resolution.</value>
      <remarks>Note by default this value is always 96 since different platforms cannot return the screen resolution. You may consider using the SetResolution method for updating both resolution values in single call.</remarks>
    </member>
    <member name="P:Aspose.Imaging.RasterImage.DitheringSettings">
      <summary>
            Gets or sets the dithering settings.
            </summary>
    </member>
    <member name="P:Aspose.Imaging.RasterImage.HasTransparentColor">
      <summary>
            Gets a value indicating whether image has transparent color.
            </summary>
    </member>
    <member name="P:Aspose.Imaging.RasterImage.TransparentColor">
      <summary>
            Gets the image transparent color.
            </summary>
    </member>
    <member name="P:Aspose.Imaging.RasterImage.DataLoader">
      <summary>
            Gets or sets the data loader.
            </summary>
      <value>
            The data loader.
            </value>
    </member>
    <member name="T:Aspose.Imaging.IPartialRawDataLoader">
      <summary>
            The partial data loader.
            </summary>
    </member>
    <member name="M:Aspose.Imaging.IPartialRawDataLoader.Process(Aspose.Imaging.Rectangle,System.Byte[],Aspose.Imaging.Point,Aspose.Imaging.Point)">
      <summary>
            Processes the loaded data.
            </summary>
      <param name="rectangle">The data rectangle.</param>
      <param name="data">The raw data.</param>
      <param name="start">The start data point. If not equal to (left,top) meaning that it is not full rectangle we have.</param>
      <param name="end">The end data point. If not equal to (right,bottom) meaning that it is not full rectangle we have.</param>
    </member>
    <member name="M:Aspose.Imaging.RasterCachedImage.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.RasterCachedImage" /> class.
            </summary>
    </member>
    <member name="M:Aspose.Imaging.RasterCachedImage.#ctor(Aspose.Imaging.IColorPalette)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.RasterCachedImage" /> class.
            </summary>
      <param name="colorPalette">The color palette.</param>
    </member>
    <member name="M:Aspose.Imaging.RasterCachedImage.CacheData">
      <summary>
            Caches the data and ensures no additional data loading will be performed from the underlying <see cref="P:Aspose.Imaging.DataStreamSupporter.DataStreamContainer" />.
            </summary>
    </member>
    <member name="M:Aspose.Imaging.RasterCachedImage.Resize(System.Int32,System.Int32,Aspose.Imaging.ResizeType)">
      <summary>
            Resizes the image.
            </summary>
      <param name="newWidth">The new width.</param>
      <param name="newHeight">The new height.</param>
      <param name="resizeType">The resize type.</param>
    </member>
    <member name="M:Aspose.Imaging.RasterCachedImage.RotateFlip(Aspose.Imaging.RotateFlipType)">
      <summary>
            Rotates, flips, or rotates and flips the image.
            </summary>
      <param name="rotateFlipType">The rotate flip type.</param>
    </member>
    <member name="M:Aspose.Imaging.RasterCachedImage.Rotate(System.Single,System.Boolean,Aspose.Imaging.Color)">
      <summary>
            Rotate image around the center.
            </summary>
      <param name="angle">The rotate angle in degrees. Positive values will rotate clockwise.</param>
      <param name="resizeProportionally">if set to <c>true</c> you will have your image size changed according to rotated rectangle (corner points) projections in other case that leaves dimensions untouched and only internal image contents are rotated.</param>
      <param name="backgroundColor">Color of the background.</param>
    </member>
    <member name="M:Aspose.Imaging.RasterCachedImage.Crop(Aspose.Imaging.Rectangle)">
      <summary>
            Cropping the image.
            </summary>
      <param name="rectangle">The rectangle.</param>
    </member>
    <member name="M:Aspose.Imaging.RasterCachedImage.Grayscale">
      <summary>
            Transformation of an image to its grayscale representation
            </summary>
    </member>
    <member name="M:Aspose.Imaging.RasterCachedImage.BinarizeFixed(System.Byte)">
      <summary>
            Binarization of an image with predefined threshold
            </summary>
      <param name="threshold">Threshold value. If corresponding gray value of a pixel is greater than threshold, a value of 255 will be assigned to it, 0 otherwise.</param>
    </member>
    <member name="M:Aspose.Imaging.RasterCachedImage.BinarizeOtsu">
      <summary>
            Binarization of an image with Otsu thresholding
            </summary>
    </member>
    <member name="M:Aspose.Imaging.RasterCachedImage.AdjustBrightness(System.Int32)">
      <summary>
            Adjust of a brightness for image.
            </summary>
      <param name="brightness">Brightness value.</param>
    </member>
    <member name="M:Aspose.Imaging.RasterCachedImage.AdjustContrast(System.Single)">
      <summary>
            Image contrasting
            </summary>
      <param name="contrast">Contrast value (in range [-100; 100])</param>
    </member>
    <member name="M:Aspose.Imaging.RasterCachedImage.AdjustGamma(System.Single,System.Single,System.Single)">
      <summary>
            Gamma-correction of an image.
            </summary>
      <param name="gammaRed">Gamma for red channel coefficient</param>
      <param name="gammaGreen">Gamma for green channel coefficient</param>
      <param name="gammaBlue">Gamma for blue channel coefficient</param>
    </member>
    <member name="M:Aspose.Imaging.RasterCachedImage.AdjustGamma(System.Single)">
      <summary>
            Gamma-correction of an image.
            </summary>
      <param name="gamma">Gamma for red, green and blue channels coefficient</param>
    </member>
    <member name="M:Aspose.Imaging.RasterCachedImage.UpdateDimensions(System.Int32,System.Int32)">
      <summary>
            Updates the image dimensions.
            </summary>
      <param name="newWidth">The new image width.</param>
      <param name="newHeight">The new image height.</param>
    </member>
    <member name="M:Aspose.Imaging.RasterCachedImage.OnCached">
      <summary>
            Called when data is cached and all related resources may be de-allocated.
            </summary>
    </member>
    <member name="M:Aspose.Imaging.RasterCachedImage.SavePixelsInternal(Aspose.Imaging.Rectangle,Aspose.Imaging.Color[])">
      <summary>
            Saves pixels (format specific method).
            </summary>
      <param name="rectangle">The rectangle to save pixels to.</param>
      <param name="pixels">The pixels array.</param>
    </member>
    <member name="M:Aspose.Imaging.RasterCachedImage.OnPaletteChanged(Aspose.Imaging.IColorPalette,Aspose.Imaging.IColorPalette)">
      <summary>
            Called when palette is changed.
            </summary>
      <param name="oldPalette">The old palette.</param>
      <param name="newPalette">The new palette.</param>
    </member>
    <member name="P:Aspose.Imaging.RasterCachedImage.IsCached">
      <summary>
            Gets a value indicating whether image data is cached currently.
            </summary>
      <value>
        <c>true</c> if image data is cached; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Bmp.BmpImage.#ctor(System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.FileFormats.Bmp.BmpImage" /> class.
            </summary>
      <param name="path">The path to load image from and initialize pixel and palette data with.</param>
      <exception cref="T:System.ArgumentNullException">raster image is null;rasterImage</exception>
      <exception cref="T:Aspose.Imaging.Exceptions.ImageFormats.BmpImageException">The height should be positive.</exception>
      <exception cref="T:System.ArgumentException">Palette should be specified for images with 8 bits per pixel or less.;palette</exception>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Bmp.BmpImage.#ctor(System.String,System.UInt16,Aspose.Imaging.FileFormats.Bmp.BitmapCompression,System.Double,System.Double)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.FileFormats.Bmp.BmpImage" /> class.
            </summary>
      <param name="path">The path to load image from and initialize pixel and palette data with.</param>
      <param name="bitsPerPixel">The bits per pixel.</param>
      <param name="compression">The compression to use.</param>
      <param name="horizontalResolution">The horizontal resolution. Note due to the rounding the resulting resolution may slightly differ from the passed.</param>
      <param name="verticalResolution">The vertical resolution. Note due to the rounding the resulting resolution may slightly differ from the passed.</param>
      <exception cref="T:System.ArgumentNullException">The raster image cannot be null;rasterImage</exception>
      <exception cref="T:Aspose.Imaging.Exceptions.ImageFormats.BmpImageException">The height should be positive.</exception>
      <exception cref="T:System.ArgumentException">Palette should be specified for images with 8 bits per pixel or less.;palette</exception>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Bmp.BmpImage.#ctor(System.IO.Stream)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.FileFormats.Bmp.BmpImage" /> class.
            </summary>
      <param name="stream">The stream to load image from and initialize pixel and palette data with.</param>
      <exception cref="T:System.ArgumentNullException">The raster image cannot be null;rasterImage</exception>
      <exception cref="T:Aspose.Imaging.Exceptions.ImageFormats.BmpImageException">The height should be positive.</exception>
      <exception cref="T:System.ArgumentException">Palette should be specified for images with 8 bits per pixel or less.;palette</exception>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Bmp.BmpImage.#ctor(System.IO.Stream,System.UInt16,Aspose.Imaging.FileFormats.Bmp.BitmapCompression,System.Double,System.Double)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.FileFormats.Bmp.BmpImage" /> class.
            </summary>
      <param name="stream">The stream to load image from and initialize pixel and palette data with.</param>
      <param name="bitsPerPixel">The bits per pixel.</param>
      <param name="compression">The compression to use.</param>
      <param name="horizontalResolution">The horizontal resolution. Note due to the rounding the resulting resolution may slightly differ from the passed.</param>
      <param name="verticalResolution">The vertical resolution. Note due to the rounding the resulting resolution may slightly differ from the passed.</param>
      <exception cref="T:System.ArgumentNullException">The raster image cannot be null;rasterImage</exception>
      <exception cref="T:Aspose.Imaging.Exceptions.ImageFormats.BmpImageException">The height should be positive.</exception>
      <exception cref="T:System.ArgumentException">Palette should be specified for images with 8 bits per pixel or less.;palette</exception>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Bmp.BmpImage.#ctor(Aspose.Imaging.RasterImage)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.FileFormats.Bmp.BmpImage" /> class.
            </summary>
      <param name="rasterImage">The image to initialize pixel and palette data with.</param>
      <exception cref="T:System.ArgumentNullException">The raster image cannot be null;rasterImage</exception>
      <exception cref="T:Aspose.Imaging.Exceptions.ImageFormats.BmpImageException">The height should be positive.</exception>
      <exception cref="T:System.ArgumentException">Palette should be specified for images with 8 bits per pixel or less.;palette</exception>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Bmp.BmpImage.#ctor(Aspose.Imaging.RasterImage,System.UInt16,Aspose.Imaging.FileFormats.Bmp.BitmapCompression,System.Double,System.Double)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.FileFormats.Bmp.BmpImage" /> class.
            </summary>
      <param name="rasterImage">The image to initialize pixel and palette data with.</param>
      <param name="bitsPerPixel">The bits per pixel.</param>
      <param name="compression">The compression to use.</param>
      <param name="horizontalResolution">The horizontal resolution. Note due to the rounding the resulting resolution may slightly differ from the passed.</param>
      <param name="verticalResolution">The vertical resolution. Note due to the rounding the resulting resolution may slightly differ from the passed.</param>
      <exception cref="T:System.ArgumentNullException">The raster image cannot be null;rasterImage</exception>
      <exception cref="T:Aspose.Imaging.Exceptions.ImageFormats.BmpImageException">The height should be positive.</exception>
      <exception cref="T:System.ArgumentException">Palette should be specified for images with 8 bits per pixel or less.;palette</exception>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Bmp.BmpImage.#ctor(System.Int32,System.Int32)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.FileFormats.Bmp.BmpImage" /> class.
            </summary>
      <param name="width">The image width.</param>
      <param name="height">The image height.</param>
      <exception cref="T:Aspose.Imaging.Exceptions.ImageFormats.BmpImageException">The height should be positive.</exception>
      <exception cref="T:System.ArgumentException">Palette should be specified for images with 8 bits per pixel or less.;palette</exception>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Bmp.BmpImage.#ctor(System.Int32,System.Int32,System.UInt16,Aspose.Imaging.IColorPalette)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.FileFormats.Bmp.BmpImage" /> class.
            </summary>
      <param name="width">The image width.</param>
      <param name="height">The image height.</param>
      <param name="bitsPerPixel">The bits per pixel.</param>
      <param name="palette">The color palette.</param>
      <exception cref="T:Aspose.Imaging.Exceptions.ImageFormats.BmpImageException">The height should be positive.</exception>
      <exception cref="T:System.ArgumentException">Palette should be specified for images with 8 bits per pixel or less.;palette</exception>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Bmp.BmpImage.#ctor(System.Int32,System.Int32,System.UInt16,Aspose.Imaging.IColorPalette,Aspose.Imaging.FileFormats.Bmp.BitmapCompression,System.Double,System.Double)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.FileFormats.Bmp.BmpImage" /> class.
            </summary>
      <param name="width">The image width.</param>
      <param name="height">The image height.</param>
      <param name="bitsPerPixel">The bits per pixel.</param>
      <param name="palette">The color palette.</param>
      <param name="compression">The compression to use.</param>
      <param name="horizontalResolution">The horizontal resolution. Note due to the rounding the resulting resolution may slightly differ from the passed.</param>
      <param name="verticalResolution">The vertical resolution. Note due to the rounding the resulting resolution may slightly differ from the passed.</param>
      <exception cref="T:Aspose.Imaging.Exceptions.ImageFormats.BmpImageException">The height should be positive.</exception>
      <exception cref="T:System.ArgumentException">Palette should be specified for images with 8 bits per pixel or less.;palette</exception>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Bmp.BmpImage.SetResolution(System.Double,System.Double)">
      <summary>
            Sets the resolution for this <see cref="T:Aspose.Imaging.RasterImage" />.
            </summary>
      <param name="dpiX">The horizontal resolution, in dots per inch, of the <see cref="T:Aspose.Imaging.RasterImage" />.</param>
      <param name="dpiY">The vertical resolution, in dots per inch, of the <see cref="T:Aspose.Imaging.RasterImage" />.</param>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Bmp.BmpImage.RawDataFormat">
      <summary>
            Gets the raw data format.
            </summary>
      <value>
            The raw data format.
            </value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Bmp.BmpImage.RawLineSize">
      <summary>
            Gets the raw line size in bytes.
            </summary>
      <value>
            The raw line size in bytes.
            </value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Bmp.BmpImage.Compression">
      <summary>
            Gets the image compression.
            </summary>
      <value>
            The image compression.
            </value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Bmp.BmpImage.Width">
      <summary>
            Gets the image width.
            </summary>
      <value>The image width.</value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Bmp.BmpImage.Height">
      <summary>
            Gets the image height.
            </summary>
      <value>The image height.</value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Bmp.BmpImage.BitsPerPixel">
      <summary>
            Gets the image bits per pixel count.
            </summary>
      <value>The image bits per pixel count.</value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Bmp.BmpImage.HorizontalResolution">
      <summary>
            Gets or sets the horizontal resolution, in pixels per inch, of this <see cref="T:Aspose.Imaging.RasterImage" />.
            </summary>
      <value>The horizontal resolution.</value>
      <remarks>Note by default this value is always 96 since different platforms cannot return the screen resolution. You may consider using the SetResolution method for updating both resolution values in single call.</remarks>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Bmp.BmpImage.VerticalResolution">
      <summary>
            Gets or sets the vertical resolution, in pixels per inch, of this <see cref="T:Aspose.Imaging.RasterImage" />.
            </summary>
      <value>The vertical resolution.</value>
      <remarks>Note by default this value is always 96 since different platforms cannot return the screen resolution. You may consider using the SetResolution method for updating both resolution values in single call.</remarks>
    </member>
    <member name="T:Aspose.Imaging.FileFormats.Bmp.NamespaceDoc">
      <summary>
            The namespace handles Bmp file format processing.
            </summary>
    </member>
    <member name="T:Aspose.Imaging.FileFormats.Gif.Blocks.GifApplicationExtensionBlock">
      <summary>
            Gif application extension block.
            </summary>
    </member>
    <member name="T:Aspose.Imaging.FileFormats.Gif.GifBlock">
      <summary>
            The default gif block implementation.
            </summary>
    </member>
    <member name="T:Aspose.Imaging.FileFormats.Gif.IGifBlock">
      <summary>
            Represents GIF block interface.
            </summary>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Gif.IGifBlock.Save(System.IO.Stream)">
      <summary>
            Saves the block to the specified stream.
            </summary>
      <param name="stream">The stream to save data to.</param>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Gif.GifBlock.ExtensionIntroducer">
      <summary>
            Extension introducer.
            </summary>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Gif.GifBlock.Save(System.IO.Stream)">
      <summary>
            Saves the block to the specified stream.
            </summary>
      <param name="stream">The stream to save data to.</param>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Gif.GifBlock.IsChanged">
      <summary>
            Gets or sets a value indicating whether block has changed and requires save.
            </summary>
      <value>
        <c>true</c> if block has changed; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Gif.Blocks.GifApplicationExtensionBlock.BlockHeaderSize">
      <summary>
            Specifies the block header size.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Gif.Blocks.GifApplicationExtensionBlock.ExtensionLabel">
      <summary>
            Extension label.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Gif.Blocks.GifApplicationExtensionBlock.BlockSize">
      <summary>
            Extension name + version block size
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Gif.Blocks.GifApplicationExtensionBlock.ApplicationIdentifierSize">
      <summary>
            Specifies the application identifier size.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Gif.Blocks.GifApplicationExtensionBlock.ApplicationAuthenticationCodeSize">
      <summary>
            Specifies the application authentication code size.
            </summary>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Gif.Blocks.GifApplicationExtensionBlock.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.FileFormats.Gif.Blocks.GifApplicationExtensionBlock" /> class.
            </summary>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Gif.Blocks.GifApplicationExtensionBlock.#ctor(System.String,System.Byte[],System.Byte[])">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.FileFormats.Gif.Blocks.GifApplicationExtensionBlock" /> class.
            </summary>
      <param name="applicationIdentifier">The application identifier.</param>
      <param name="applicationAuthenticationCode">The application authentication code.</param>
      <param name="applicationData">The application data.</param>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Gif.Blocks.GifApplicationExtensionBlock.Save(System.IO.Stream)">
      <summary>
            Saves the block to the specified stream.
            </summary>
      <param name="stream">The stream to save data to.</param>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Gif.Blocks.GifApplicationExtensionBlock.ApplicationAuthenticationCode">
      <summary>
            Gets or sets the application authentication code.
            </summary>
      <value>
            The application authentication code.
            </value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Gif.Blocks.GifApplicationExtensionBlock.ApplicationIdentifier">
      <summary>
            Gets or sets the application identifier.
            </summary>
      <value>
            The application identifier.
            </value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Gif.Blocks.GifApplicationExtensionBlock.ApplicationData">
      <summary>
            Gets or sets the application data.
            </summary>
      <value>
            The application data.
            </value>
    </member>
    <member name="T:Aspose.Imaging.FileFormats.Gif.Blocks.GifCommentBlock">
      <summary>
            Gif comment block.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Gif.Blocks.GifCommentBlock.ExtensionLabel">
      <summary>
            Gif comment block extension label.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Gif.Blocks.GifCommentBlock.BlockHeaderSize">
      <summary>
            Defines the block header size.
            </summary>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Gif.Blocks.GifCommentBlock.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.FileFormats.Gif.Blocks.GifCommentBlock" /> class.
            </summary>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Gif.Blocks.GifCommentBlock.#ctor(System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.FileFormats.Gif.Blocks.GifCommentBlock" /> class.
            </summary>
      <param name="comment">The comment.</param>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Gif.Blocks.GifCommentBlock.Save(System.IO.Stream)">
      <summary>
            Saves the block to the specified stream.
            </summary>
      <param name="stream">The stream to save data to.</param>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Gif.Blocks.GifCommentBlock.Comment">
      <summary>
            Gets or sets the comment. Note that comment must use ASCII encoding and will be stored accordingly.
            </summary>
      <value>
            The comment.
            </value>
    </member>
    <member name="T:Aspose.Imaging.FileFormats.Gif.Blocks.GifFrameBlock">
      <summary>
            Gif frame block.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Gif.Blocks.GifFrameBlock.ExtensionLabel">
      <summary>
            Block extension label.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Gif.Blocks.GifFrameBlock.ImageDescriptorSize">
      <summary>
            The image descriptor size.
            </summary>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Gif.Blocks.GifFrameBlock.#ctor(System.UInt16,System.UInt16)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.FileFormats.Gif.Blocks.GifFrameBlock" /> class.
            </summary>
      <param name="width">The image width.</param>
      <param name="height">The image height.</param>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Gif.Blocks.GifFrameBlock.#ctor(System.UInt16,System.UInt16,System.UInt16,System.UInt16)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.FileFormats.Gif.Blocks.GifFrameBlock" /> class.
            </summary>
      <param name="left">The left image position.</param>
      <param name="top">The top image position.</param>
      <param name="width">The image width.</param>
      <param name="height">The image height.</param>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Gif.Blocks.GifFrameBlock.#ctor(System.UInt16,System.UInt16,System.UInt16,System.UInt16,Aspose.Imaging.IColorPalette,System.Boolean,System.Boolean,System.Byte)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.FileFormats.Gif.Blocks.GifFrameBlock" /> class.
            </summary>
      <param name="left">The left image position.</param>
      <param name="top">The top image position.</param>
      <param name="width">The image Width.</param>
      <param name="height">The image Height.</param>
      <param name="colorPalette">The color palette.</param>
      <param name="isPaletteSorted">if set to <c>true</c> the color palette is sorted.</param>
      <param name="isGifFrameInterlaced">if set to <c>true</c> the GIF frame is interlaced.</param>
      <param name="bitsPerPixel">The bits per pixel.</param>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Gif.Blocks.GifFrameBlock.#ctor(Aspose.Imaging.RasterImage)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.FileFormats.Gif.Blocks.GifFrameBlock" /> class.
            </summary>
      <param name="image">The image to initialize frame pixel and palette data with.</param>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Gif.Blocks.GifFrameBlock.#ctor(Aspose.Imaging.RasterImage,System.UInt16,System.UInt16)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.FileFormats.Gif.Blocks.GifFrameBlock" /> class.
            </summary>
      <param name="image">The image to initialize frame pixel and palette data with.</param>
      <param name="left">The left image position.</param>
      <param name="top">The top image position.</param>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Gif.Blocks.GifFrameBlock.#ctor(Aspose.Imaging.RasterImage,System.UInt16,System.UInt16,System.Boolean,System.Boolean,System.Byte)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.FileFormats.Gif.Blocks.GifFrameBlock" /> class.
            </summary>
      <param name="image">The image to initialize frame pixel and palette data with.</param>
      <param name="left">The left image position.</param>
      <param name="top">The top image position.</param>
      <param name="isPaletteSorted">if set to <c>true</c> the color palette is sorted.</param>
      <param name="isGifFrameInterlaced">if set to <c>true</c> the GIF frame is interlaced.</param>
      <param name="lzwCodeSize">The bits per pixel.</param>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Gif.Blocks.GifFrameBlock.#ctor(System.IO.Stream)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.FileFormats.Gif.Blocks.GifFrameBlock" /> class.
            </summary>
      <param name="stream">The stream to load an image from and initialize frame pixel and palette data with.</param>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Gif.Blocks.GifFrameBlock.#ctor(System.IO.Stream,System.UInt16,System.UInt16)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.FileFormats.Gif.Blocks.GifFrameBlock" /> class.
            </summary>
      <param name="stream">The stream to load an image from and initialize frame pixel and palette data with.</param>
      <param name="left">The left image position.</param>
      <param name="top">The top image position.</param>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Gif.Blocks.GifFrameBlock.#ctor(System.IO.Stream,System.UInt16,System.UInt16,System.Boolean,System.Boolean,System.Byte)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.FileFormats.Gif.Blocks.GifFrameBlock" /> class.
            </summary>
      <param name="stream">The stream to load an image from and initialize frame pixel and palette data with.</param>
      <param name="left">The left image position.</param>
      <param name="top">The top image position.</param>
      <param name="isPaletteSorted">if set to <c>true</c> the color palette is sorted.</param>
      <param name="isGifFrameInterlaced">if set to <c>true</c> the GIF frame is interlaced.</param>
      <param name="lzwCodeSize">The bits per pixel.</param>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Gif.Blocks.GifFrameBlock.#ctor(System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.FileFormats.Gif.Blocks.GifFrameBlock" /> class.
            </summary>
      <param name="path">The path to load an image from and initialize frame pixel and palette data with.</param>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Gif.Blocks.GifFrameBlock.#ctor(System.String,System.UInt16,System.UInt16)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.FileFormats.Gif.Blocks.GifFrameBlock" /> class.
            </summary>
      <param name="path">The path to load an image from and initialize frame pixel and palette data with.</param>
      <param name="left">The left image position.</param>
      <param name="top">The top image position.</param>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Gif.Blocks.GifFrameBlock.#ctor(System.String,System.UInt16,System.UInt16,System.Boolean,System.Boolean,System.Byte)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.FileFormats.Gif.Blocks.GifFrameBlock" /> class.
            </summary>
      <param name="path">The path to load an image from and initialize frame pixel and palette data with.</param>
      <param name="left">The left image position.</param>
      <param name="top">The top image position.</param>
      <param name="isPaletteSorted">if set to <c>true</c> the color palette is sorted.</param>
      <param name="isGifFrameInterlaced">if set to <c>true</c> the GIF frame is interlaced.</param>
      <param name="lzwCodeSize">The bits per pixel.</param>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Gif.Blocks.GifFrameBlock.GetColorPalette(Aspose.Imaging.IColorPalette,Aspose.Imaging.IColorPalette)">
      <summary>
            Gets the associated color palette.
            </summary>
      <param name="framePalette">The frame palette.</param>
      <param name="containerPalette">The container palette.</param>
      <returns>
            The color palette.
            </returns>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Gif.Blocks.GifFrameBlock.CreateFlags(Aspose.Imaging.IColorPalette,System.Boolean,System.Boolean)">
      <summary>
            Creates the flags.
            </summary>
      <param name="colorPalette">The color palette.</param>
      <param name="isPaletteSorted">if set to <c>true</c> the colors in color palette are sorted.</param>
      <param name="isGifFrameInterlaced">if set to <c>true</c> the GIF frame image is interlaced.</param>
      <returns>The created flags.</returns>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Gif.Blocks.GifFrameBlock.Width">
      <summary>
            Gets the image width.
            </summary>
      <value>
            The image width.
            </value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Gif.Blocks.GifFrameBlock.Height">
      <summary>
            Gets the image height.
            </summary>
      <value>
            The image height.
            </value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Gif.Blocks.GifFrameBlock.BitsPerPixel">
      <summary>
            Gets the image bits per pixel count.
            </summary>
      <value>
            The image bits per pixel count.
            </value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Gif.Blocks.GifFrameBlock.Interlaced">
      <summary>
            Gets or sets a value indicating whether this <see cref="T:Aspose.Imaging.FileFormats.Gif.Blocks.GifFrameBlock" /> is interlaced.
            </summary>
      <value>
        <c>true</c> if interlaced; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Gif.Blocks.GifFrameBlock.IsPaletteSorted">
      <summary>
            Gets or sets a value indicating whether color palette is sorted.
            </summary>
      <value>
        <c>true</c> if color palette is sorted; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Gif.Blocks.GifFrameBlock.GifFrameBitsPerPixel">
      <summary>
            Gets or sets the GIF frame bits per pixel.
            </summary>
      <value>
            The GIF frame bits per pixel.
            </value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Gif.Blocks.GifFrameBlock.Left">
      <summary>
            Gets or sets the left image location.
            </summary>
      <value>
            The left image location.
            </value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Gif.Blocks.GifFrameBlock.Top">
      <summary>
            Gets or sets the top image location.
            </summary>
      <value>
            The top image location.
            </value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Gif.Blocks.GifFrameBlock.Flags">
      <summary>
            Gets or sets the flags.
            </summary>
      <value>
            The flags.
            </value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Gif.Blocks.GifFrameBlock.ControlBlock">
      <summary>
            Gets the graphics control block associated with this block.
            </summary>
      <value>
            The control block.
            </value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Gif.Blocks.GifFrameBlock.HasTransparentColor">
      <summary>
            Gets a value indicating whether frame block has transparent color.
            </summary>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Gif.Blocks.GifFrameBlock.TransparentColor">
      <summary>
            Gets the transparent color of frame block.
            </summary>
    </member>
    <member name="T:Aspose.Imaging.IAdvancedBufferProcessor">
      <summary>
            The advanced buffer processor.
            </summary>
    </member>
    <member name="T:Aspose.Imaging.IBufferProcessor">
      <summary>
            The buffer processor.
            </summary>
    </member>
    <member name="M:Aspose.Imaging.IBufferProcessor.ProcessBuffer(System.Byte[],System.Int32)">
      <summary>
            Processes the buffer.
            </summary>
      <param name="buffer">The buffer to process.</param>
      <param name="bufferLength">The buffer length to process.</param>
    </member>
    <member name="M:Aspose.Imaging.IAdvancedBufferProcessor.FinishRow">
      <summary>
            Finishes the row.
            </summary>
    </member>
    <member name="M:Aspose.Imaging.IAdvancedBufferProcessor.FinishRows(System.Int32)">
      <summary>
            Finishes the rows.
            </summary>
      <param name="rowsCount">The rows count.</param>
    </member>
    <member name="T:Aspose.Imaging.FileFormats.Gif.Blocks.GifGraphicsControlBlock">
      <summary>
            Gif graphics control block.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Gif.Blocks.GifGraphicsControlBlock.BlockHeaderSize">
      <summary>
            Specifies the block header size.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Gif.Blocks.GifGraphicsControlBlock.ExtensionLabel">
      <summary>
            Extension label.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Gif.Blocks.GifGraphicsControlBlock.SubBlockSize">
      <summary>
            Gets the sub-block size.
            </summary>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Gif.Blocks.GifGraphicsControlBlock.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.FileFormats.Gif.Blocks.GifGraphicsControlBlock" /> class.
            </summary>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Gif.Blocks.GifGraphicsControlBlock.#ctor(System.Byte,System.UInt16,System.Byte)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.FileFormats.Gif.Blocks.GifGraphicsControlBlock" /> class.
            </summary>
      <param name="flags">The flags.</param>
      <param name="delayTime">The delay time expressed in 1/100 seconds.</param>
      <param name="transparentColorIndex">The transparent color index.</param>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Gif.Blocks.GifGraphicsControlBlock.#ctor(System.UInt16,System.Boolean,System.Byte,System.Boolean,Aspose.Imaging.FileFormats.Gif.DisposalMethod)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.FileFormats.Gif.Blocks.GifGraphicsControlBlock" /> class.
            </summary>
      <param name="delayTime">The delay time expressed in 1/100 seconds.</param>
      <param name="hasTransparentColor">if set to <c>true</c> the <paramref name="transparentColorIndex" /> is valid.</param>
      <param name="transparentColorIndex">The transparent color index.</param>
      <param name="requiresUserInput">if set to <c>true</c> the user input is expected.</param>
      <param name="disposalMethod">The disposal method.</param>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Gif.Blocks.GifGraphicsControlBlock.CreateFlags(System.Boolean,System.Boolean,Aspose.Imaging.FileFormats.Gif.DisposalMethod)">
      <summary>
            Creates the flags.
            </summary>
      <param name="hasTransparentColor">if set to <c>true</c> the <see cref="T:Aspose.Imaging.FileFormats.Gif.Blocks.GifGraphicsControlBlock" /> has valid transparent color index.</param>
      <param name="requiresUserInput">if set to <c>true</c> the user input is expected.</param>
      <param name="disposalMethod">The disposal method.</param>
      <returns>The generated flags.</returns>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Gif.Blocks.GifGraphicsControlBlock.Save(System.IO.Stream)">
      <summary>
            Saves the block to the specified stream.
            </summary>
      <param name="stream">The stream to save data to.</param>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Gif.Blocks.GifGraphicsControlBlock.DelayTime">
      <summary>
            Gets or sets the frame delay time expressed in 1/100 seconds.
            </summary>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Gif.Blocks.GifGraphicsControlBlock.Flags">
      <summary>
            Gets or sets the flags.
            </summary>
      <value>
            The flags.
            </value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Gif.Blocks.GifGraphicsControlBlock.TransparentColorIndex">
      <summary>
            Gets or sets the transparent color index.
            </summary>
      <value>
            The transparent color index.
            </value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Gif.Blocks.GifGraphicsControlBlock.DisposalMethod">
      <summary>
            Gets or sets the disposal method.
            </summary>
      <value>
            The disposal method.
            </value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Gif.Blocks.GifGraphicsControlBlock.UserInputExpected">
      <summary>
            Gets or sets a value indicating whether user input is expected.
            </summary>
      <value>
        <c>true</c> if user input is expected; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Gif.Blocks.GifGraphicsControlBlock.HasTransparentColor">
      <summary>
            Gets or sets a value indicating whether graphics control block has transparent color.
            </summary>
      <value>
        <c>true</c> if graphics control block has transparent color; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="T:Aspose.Imaging.FileFormats.Gif.Blocks.GifPlainTextRenderingBlock">
      <summary>
            Gif plain text extension block. The plain text extension contains textual data and the
            parameters necessary to render that data as a graphic, in a simple form.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Gif.Blocks.GifPlainTextRenderingBlock.ExtensionLabel">
      <summary>
            The plain text extension label.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Gif.Blocks.GifPlainTextRenderingBlock.BlockSize">
      <summary>
            The overall block size.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Gif.Blocks.GifPlainTextRenderingBlock.SubBlockSize">
      <summary>
            The size of the sub block.
            </summary>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Gif.Blocks.GifPlainTextRenderingBlock.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.FileFormats.Gif.Blocks.GifPlainTextRenderingBlock" /> class.
            </summary>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Gif.Blocks.GifPlainTextRenderingBlock.#ctor(System.UInt16,System.UInt16,System.UInt16,System.UInt16,System.Byte,System.Byte,System.Byte,System.Byte,System.Byte[])">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.FileFormats.Gif.Blocks.GifPlainTextRenderingBlock" /> class.
            </summary>
      <param name="textGridLeftPosition">The text grid left position.</param>
      <param name="textGridTopPosition">The text grid top position.</param>
      <param name="textGridWidth">The text grid width.</param>
      <param name="textGridHeight">The text grid height.</param>
      <param name="characterCellWidth">The character cell width.</param>
      <param name="characterCellHeight">The character cell height.</param>
      <param name="textForegroundColorIndex">The foreground color index.</param>
      <param name="textBackgroundColorIndex">The background color index.</param>
      <param name="data">The plain text data.</param>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Gif.Blocks.GifPlainTextRenderingBlock.Save(System.IO.Stream)">
      <summary>
            Saves the block to the specified stream.
            </summary>
      <param name="stream">The stream to save data to.</param>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Gif.Blocks.GifPlainTextRenderingBlock.TextForegroundColorIndex">
      <summary>
            Gets or sets the index of the color in the global color palette used to draw the text foreground.
            </summary>
      <value>
            The foreground color index.
            </value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Gif.Blocks.GifPlainTextRenderingBlock.TextBackgroundColorIndex">
      <summary>
            Gets or sets the index of the color in the global color palette used to draw the text background.
            </summary>
      <value>
            The background color index.
            </value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Gif.Blocks.GifPlainTextRenderingBlock.CharacterCellWidth">
      <summary>
            Gets or sets the character cell width, in pixels, of each cell in the grid.
            </summary>
      <value>
            The character cell width.
            </value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Gif.Blocks.GifPlainTextRenderingBlock.CharacterCellHeight">
      <summary>
            Gets or sets the character cell height, in pixels, of each cell in the grid.
            </summary>
      <value>
            The character cell height.
            </value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Gif.Blocks.GifPlainTextRenderingBlock.TextGridLeftPosition">
      <summary>
            Gets or sets the text grid left position.
            </summary>
      <value>
            The text grid left position.
            </value>
      <remarks>This is a column number, in pixels, of the left edge of the text grid, with respect to the left edge of the logical screen.</remarks>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Gif.Blocks.GifPlainTextRenderingBlock.TextGridTopPosition">
      <summary>
            Gets or sets the text grid top position.
            </summary>
      <value>
            The text grid top position.
            </value>
      <remarks>This is a row number, in pixels, of the top edge of the text grid, with respect to the top edge of the logical screen.</remarks>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Gif.Blocks.GifPlainTextRenderingBlock.TextGridWidth">
      <summary>
            Gets or sets the text grid with in pixels
            </summary>
      <value>
            The text grid width in pixels.
            </value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Gif.Blocks.GifPlainTextRenderingBlock.TextGridHeight">
      <summary>
            Gets or sets the text grid height in pixels
            </summary>
      <value>
            The text grid height in pixels.
            </value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Gif.Blocks.GifPlainTextRenderingBlock.PlainTextData">
      <summary>
            Gets or sets the plain text data.
            </summary>
      <value>
            The plain text data.
            </value>
    </member>
    <member name="T:Aspose.Imaging.FileFormats.Gif.Blocks.GifUnknownExtensionBlock">
      <summary>
            Gif Unknown Extension Block.
            </summary>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Gif.Blocks.GifUnknownExtensionBlock.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.FileFormats.Gif.Blocks.GifUnknownExtensionBlock" /> class.
            </summary>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Gif.Blocks.GifUnknownExtensionBlock.#ctor(System.Byte,System.Byte[])">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.FileFormats.Gif.Blocks.GifUnknownExtensionBlock" /> class.
            </summary>
      <param name="extensionLabel">The extension label.</param>
      <param name="data">The block data.</param>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Gif.Blocks.GifUnknownExtensionBlock.Save(System.IO.Stream)">
      <summary>
            Saves the block to the specified stream.
            </summary>
      <param name="stream">The stream to save data to.</param>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Gif.Blocks.GifUnknownExtensionBlock.ExtensionLabel">
      <summary>
            Gets or sets the block's extension label.
            </summary>
      <value>
            The block's extension label.
            </value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Gif.Blocks.GifUnknownExtensionBlock.UnknownData">
      <summary>
            Gets or sets the unknown data.
            </summary>
      <value>
            The unknown data.
            </value>
    </member>
    <member name="T:Aspose.Imaging.FileFormats.Gif.Blocks.NamespaceDoc">
      <summary>
            The namespace contains Gif file format entities.
            </summary>
    </member>
    <member name="T:Aspose.Imaging.FileFormats.Gif.DisposalMethod">
      <summary>
            Indicates the way in which the graphic is to be treated after being displayed.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Gif.DisposalMethod.None">
      <summary>
            No disposal specified.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Gif.DisposalMethod.Preserve">
      <summary>
            Do not dispose. The graphic is to be left in place.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Gif.DisposalMethod.Restore">
      <summary>
            Restore to background color. The area used by the graphic must be restored to the background color.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Gif.DisposalMethod.Previuos">
      <summary>
            Restore to previous. The decoder is required to restore the area overwritten by the graphic with what was there prior to rendering the graphic.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Gif.DisposalMethod.Undefined">
      <summary>
            Undefined value.
            </summary>
    </member>
    <member name="T:Aspose.Imaging.FileFormats.Gif.GifBlocksRegistry">
      <summary>
            Represents the gif blocks openers registry.
            </summary>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Gif.GifBlocksRegistry.GetFirstSupportedDescriptorByTypeName(System.String)">
      <summary>
            Gets the first supported descriptor by its type name.
            </summary>
      <param name="descriptorTypeName">The descriptor type name.</param>
      <returns>The first found opener descriptor or null if not such descriptor is found.</returns>
      <remarks>The first opener descriptor will be actually the last registered.</remarks>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Gif.GifBlocksRegistry.GetFirstSupportedDescriptor(System.IO.Stream)">
      <summary>
            Gets the first supported opener descriptor.
            </summary>
      <param name="stream">The stream.</param>
      <returns>The gif block opener descriptor or null if no opener descriptor supported for such stream.</returns>
      <remarks>The first opener will be actually the last registered.</remarks>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Gif.GifBlocksRegistry.LoadBlockByFirstSupportedDescriptor(System.IO.Stream,Aspose.Imaging.IColorPalette)">
      <summary>
            Loads gif block using first found opener suitable for the specified <paramref name="stream" />.
            </summary>
      <param name="stream">The stream.</param>
      <param name="containerPalette">The container palette.</param>
      <returns>
            The loaded gif block or null if no opener is found.
            </returns>
      <remarks>
            The first opener will be actually the last registered.
            </remarks>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Gif.GifBlocksRegistry.RegisterOpener(Aspose.Imaging.FileFormats.Gif.IGifBlockLoaderDescriptor)">
      <summary>
            Registers the opener.
            </summary>
      <param name="openerDescriptor">The opener descriptor to register.</param>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Gif.GifBlocksRegistry.UnregisterOpener(Aspose.Imaging.FileFormats.Gif.IGifBlockLoaderDescriptor)">
      <summary>
            Unregisters the opener.
            </summary>
      <param name="openerDescriptor">The opener descriptor to unregister.</param>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Gif.GifBlocksRegistry.RegisteredDescriptors">
      <summary>
            Gets the registered descriptors.
            </summary>
      <value>The registered descriptors.</value>
    </member>
    <member name="T:Aspose.Imaging.FileFormats.Gif.GifImage">
      <summary>
            A gif image.
            </summary>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Gif.GifImage.#ctor(Aspose.Imaging.FileFormats.Gif.Blocks.GifFrameBlock,Aspose.Imaging.IColorPalette)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.FileFormats.Gif.GifImage" /> class.
            </summary>
      <param name="firstFrame">The first frame to initialize gif image with.</param>
      <param name="globalPalette">The global palette to use. Note if both <paramref name="firstFrame" /> and <paramref name="globalPalette" /> are null then default global palette is used.</param>
      <exception cref="T:System.ArgumentNullException">The frame cannot be null;firstFrame</exception>
      <exception cref="T:System.ArgumentException">The first frame already belongs to some other image. Check the Container property.;firstFrame</exception>
      <exception cref="T:Aspose.Imaging.Exceptions.ImageFormats.GifImageException">The palette specified should contain entries count equal to power of 2. Minimal palette size is 2, maximal is 256.</exception>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Gif.GifImage.#ctor(Aspose.Imaging.FileFormats.Gif.Blocks.GifFrameBlock)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.FileFormats.Gif.GifImage" /> class.
            </summary>
      <param name="firstFrame">The first frame to initialize gif image with.</param>
      <exception cref="T:System.ArgumentNullException">The frame cannot be null;firstFrame</exception>
      <exception cref="T:System.ArgumentException">The first frame already belongs to some other image. Check the Container property.;firstFrame</exception>
      <exception cref="T:Aspose.Imaging.Exceptions.ImageFormats.GifImageException">The palette specified should contain entries count equal to power of 2. Minimal palette size is 2, maximal is 256.</exception>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Gif.GifImage.#ctor(Aspose.Imaging.FileFormats.Gif.Blocks.GifFrameBlock,Aspose.Imaging.IColorPalette,System.Boolean,System.Byte,System.Byte,System.Byte,System.Boolean)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.FileFormats.Gif.GifImage" /> class.
            </summary>
      <param name="firstFrame">The first frame to initialize gif image with.</param>
      <param name="globalPalette">The global palette to use. Note if both <paramref name="firstFrame" /> and <paramref name="globalPalette" /> are null then default global palette is used.</param>
      <param name="isPaletteSorted">if set to <c>true</c> the palette is sorted. Note the parameter is used when <paramref name="globalPalette" /> is not null.</param>
      <param name="paletteColorResolution">The palette color resolution. Note the parameter is used when <paramref name="globalPalette" /> is not null.</param>
      <param name="paletteBackgroundColorIndex">The palette background color index.</param>
      <param name="aspectRatio">The aspect ratio.</param>
      <param name="hasTrailer">if set to <c>true</c> the gif image has trailer otherwise no trailer written at the end of the stream.</param>
      <exception cref="T:System.ArgumentNullException">The frame cannot be null;firstFrame</exception>
      <exception cref="T:System.ArgumentException">The first frame already belongs to some other image. Check the Container property.;firstFrame</exception>
      <exception cref="T:Aspose.Imaging.Exceptions.ImageFormats.GifImageException">The palette specified should contain entries count equal to power of 2. Minimal palette size is 2, maximal is 256.</exception>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Gif.GifImage.CacheData">
      <summary>
            Caches the data and ensures no additional data loading will be performed from the underlying <see cref="P:Aspose.Imaging.DataStreamSupporter.DataStreamContainer" />.
            </summary>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Gif.GifImage.RotateFlipAll(Aspose.Imaging.RotateFlipType)">
      <summary>
            Rotates the flip all frames in the image.
            </summary>
      <param name="rotateFlip">
            The rotate flip type to perform.
            </param>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Gif.GifImage.OrderBlocks">
      <summary>
            Orders the GIF blocks according to the GIF specification. Some <see cref="T:Aspose.Imaging.FileFormats.Gif.Blocks.GifGraphicsControlBlock" /> may be removed for proper GIF layout.
            </summary>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Gif.GifImage.ClearBlocks">
      <summary>
            Clears all the GIF blocks.
            </summary>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Gif.GifImage.InsertBlock(System.Int32,Aspose.Imaging.FileFormats.Gif.IGifBlock)">
      <summary>
            Adds a new GIF block.
            </summary>
      <param name="index">The zero-based element, at which block will be inserted.</param>
      <param name="block">The GIF block to add.</param>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Gif.GifImage.AddBlock(Aspose.Imaging.FileFormats.Gif.IGifBlock)">
      <summary>
            Adds a new GIF block.
            </summary>
      <param name="block">The GIF block to add.</param>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Gif.GifImage.RemoveBlock(Aspose.Imaging.FileFormats.Gif.IGifBlock)">
      <summary>
            Removes the GIF block.
            </summary>
      <param name="block">The block to remove.</param>
      <remarks>Note: do not forget to Dispose the block if you will not add it to some other GifImage.</remarks>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Gif.GifImage.RotateFlip(Aspose.Imaging.RotateFlipType)">
      <summary>
            Rotates, flips, or rotates and flips the image.
            </summary>
      <param name="rotateFlipType">The rotate flip type.</param>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Gif.GifImage.Rotate(System.Single,System.Boolean,Aspose.Imaging.Color)">
      <summary>
            Rotate image around the center.
            </summary>
      <param name="angle">The rotate angle in degrees. Positive values will rotate clockwise.</param>
      <param name="resizeProportionally">if set to <c>true</c> you will have your image size changed according to rotated rectangle (corner points) projections in other case that leaves dimensions untouched and only internal image contents are rotated.</param>
      <param name="backgroundColor">Color of the background.</param>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Gif.GifImage.Resize(System.Int32,System.Int32,Aspose.Imaging.ResizeType)">
      <summary>
            Resizes the image.
            </summary>
      <param name="newWidth">The new width.</param>
      <param name="newHeight">The new height.</param>
      <param name="resizeType">The resize type.</param>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Gif.GifImage.ResizeProportional(System.Int32,System.Int32,Aspose.Imaging.ResizeType)">
      <summary>
            Performs proportional resize on the image.
            The proportional resize will resize each frame according to the ratio of <paramref name="newWidth" />/width and <paramref name="newHeight" />/height.
            </summary>
      <param name="newWidth">The new width.</param>
      <param name="newHeight">The new height.</param>
      <param name="resizeType">The resize type.</param>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Gif.GifImage.Crop(Aspose.Imaging.Rectangle)">
      <summary>
            Cropping the image.
            </summary>
      <param name="rectangle">The rectangle.</param>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Gif.GifImage.Grayscale">
      <summary>
            Transformation of an image to its grayscale representation
            </summary>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Gif.GifImage.BinarizeFixed(System.Byte)">
      <summary>
            Binarization of an image with predefined threshold
            </summary>
      <param name="threshold">Threshold value. If corresponding gray value of a pixel is greater than threshold, a value of 255 will be assigned to it, 0 otherwise.</param>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Gif.GifImage.BinarizeOtsu">
      <summary>
            Binarization of an image with Otsu thresholding
            </summary>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Gif.GifImage.AdjustBrightness(System.Int32)">
      <summary>
            Adjust of a brightness for image.
            </summary>
      <param name="brightness">Brightness value.</param>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Gif.GifImage.AdjustContrast(System.Single)">
      <summary>
            Image contrasting
            </summary>
      <param name="contrast">Contrast value (in range [-100; 100])</param>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Gif.GifImage.AdjustGamma(System.Single,System.Single,System.Single)">
      <summary>
            Gamma-correction of an image.
            </summary>
      <param name="gammaRed">Gamma for red channel coefficient</param>
      <param name="gammaGreen">Gamma for green channel coefficient</param>
      <param name="gammaBlue">Gamma for blue channel coefficient</param>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Gif.GifImage.AdjustGamma(System.Single)">
      <summary>
            Gamma-correction of an image.
            </summary>
      <param name="gamma">Gamma for red, green and blue channels coefficient</param>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Gif.GifImage.HasTrailer">
      <summary>
            Gets or sets a value indicating whether GIF has trailer.
            </summary>
      <value>
        <c>true</c> if GIF has trailer; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Gif.GifImage.IsPaletteSorted">
      <summary>
            Gets or sets a value indicating whether palette is sorted.
            </summary>
      <value>
        <c>true</c> if palette is sorted; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Gif.GifImage.PaletteColorResolutionBits">
      <summary>
            Gets or sets the palette color resolution bits.
            </summary>
      <value>
            The palette color resolution bits.
            </value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Gif.GifImage.Width">
      <summary>
            Gets the object width.
            </summary>
      <value>The object width.</value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Gif.GifImage.Height">
      <summary>
            Gets the object height.
            </summary>
      <value>The object height.</value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Gif.GifImage.BitsPerPixel">
      <summary>
            Gets the bits per pixel count.
            </summary>
      <value>The bits per pixel count.</value>
      <remarks>For GIF this value is calculated from active frame.</remarks>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Gif.GifImage.Blocks">
      <summary>
            Gets the GIF blocks.
            </summary>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Gif.GifImage.DitheringSettings">
      <summary>
            Gets or sets the dithering settings for each block.
            </summary>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Gif.GifImage.ActiveFrame">
      <summary>
            Gets or sets the active frame.
            </summary>
      <value>
            The active frame.
            </value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Gif.GifImage.BackgroundColor">
      <summary>
            Gets or sets the background color.
            </summary>
      <value>
            The background color.
            </value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Gif.GifImage.BackgroundColorIndex">
      <summary>
            Gets or sets the background color index.
            </summary>
      <value>
            The background color index.
            </value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Gif.GifImage.PixelAspectRatio">
      <summary>
            Gets or sets the pixel aspect ratio.
            </summary>
      <value>
            The pixel aspect ratio.
            </value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Gif.GifImage.IsCached">
      <summary>
            Gets a value indicating whether object's data is cached currently and no data reading is required.
            </summary>
      <value>
        <c>true</c> if object's data is cached; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Gif.GifImage.HasTransparentColor">
      <summary>
            Gets a value indicating whether active frame has transparent color.
            </summary>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Gif.GifImage.TransparentColor">
      <summary>
            Gets active frame transparent color.
            </summary>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Gif.GifImage.HasBackgroundColor">
      <summary>
            Gets a value indicating whether image has background color.
            </summary>
    </member>
    <member name="T:Aspose.Imaging.FileFormats.Gif.IGifBlockLoaderDescriptor">
      <summary>
            Gif block Loader descriptor.
            </summary>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Gif.IGifBlockLoaderDescriptor.CanLoad(Aspose.Imaging.StreamContainer)">
      <summary>
            Determines whether loader can load the specified data.
            </summary>
      <param name="streamContainer">The stream container to load data from.</param>
      <returns>
        <c>true</c> loader can load the specified data; otherwise, <c>false</c>.
            </returns>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Gif.IGifBlockLoaderDescriptor.Load(Aspose.Imaging.StreamContainer,Aspose.Imaging.IColorPalette)">
      <summary>
            Loads the gif block.
            </summary>
      <param name="streamContainer">The stream container.</param>
      <param name="containerPalette">The container palette.</param>
      <returns>
            A new gif block.
            </returns>
    </member>
    <member name="T:Aspose.Imaging.FileFormats.Gif.NamespaceDoc">
      <summary>
            The namespace handles Gif file format processing.
            </summary>
    </member>
    <member name="T:Aspose.Imaging.FileFormats.Jpeg.JpegCompressionMode">
      <summary>
                Compression mode for jpeg images.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Jpeg.JpegCompressionMode.Baseline">
      <summary>
                The baseline compression.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Jpeg.JpegCompressionMode.Progressive">
      <summary>
                The progressive.
            </summary>
    </member>
    <member name="T:Aspose.Imaging.FileFormats.Jpeg.JfifDensityUnits">
      <summary>
                The jfif density units.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Jpeg.JfifDensityUnits.NoUnits">
      <summary>
                The no units.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Jpeg.JfifDensityUnits.PixelsPerInch">
      <summary>
                The pixels per inch.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Jpeg.JfifDensityUnits.PixelsPerCm">
      <summary>
                The pixels per cm.
            </summary>
    </member>
    <member name="T:Aspose.Imaging.FileFormats.Jpeg.JFIFData">
      <summary>
                The jfif segment.
            </summary>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Jpeg.JFIFData.#ctor">
      <summary>
                Initializes a new instance of the <see cref="T:Aspose.Imaging.FileFormats.Jpeg.JFIFData" /> class.
            </summary>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Jpeg.JFIFData.DensityUnits">
      <summary>
                Gets or sets the density units.
            </summary>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Jpeg.JFIFData.Thumbnail">
      <summary>
                Gets or sets the thumbnail.
            </summary>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Jpeg.JFIFData.Version">
      <summary>
                Gets or sets the version.
            </summary>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Jpeg.JFIFData.XDensity">
      <summary>
                Gets or sets the x density.
            </summary>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Jpeg.JFIFData.YDensity">
      <summary>
                Gets or sets the y density.
            </summary>
    </member>
    <member name="T:Aspose.Imaging.FileFormats.Jpeg.JpegCompressionColorMode">
      <summary>
                Сolor mode for jpeg images.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Jpeg.JpegCompressionColorMode.Grayscale">
      <summary>
                The Grayscale image.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Jpeg.JpegCompressionColorMode.YCbCr">
      <summary>
                YCbCr image, standard option for jpeg images.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Jpeg.JpegCompressionColorMode.CMYK">
      <summary>
                4-component CMYK image.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Jpeg.JpegCompressionColorMode.Rgb">
      <summary>
            The RGB Color mode.
            </summary>
    </member>
    <member name="T:Aspose.Imaging.FileFormats.Jpeg.JpegImage">
      <summary>
                A jpeg image.
            </summary>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Jpeg.JpegImage.#ctor(System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.FileFormats.Jpeg.JpegImage" /> class.
            </summary>
      <param name="path">
            The path to load image from and initialize pixel and palette data with.
            </param>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Jpeg.JpegImage.#ctor(System.IO.Stream)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.FileFormats.Jpeg.JpegImage" /> class.
            </summary>
      <param name="stream">
            The stream to load image from and initialize pixel and palette data with.
            </param>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Jpeg.JpegImage.#ctor(Aspose.Imaging.RasterImage)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.FileFormats.Jpeg.JpegImage" /> class.
            </summary>
      <param name="rasterImage">
            The image to initialize pixel and palette data with.
            </param>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Jpeg.JpegImage.#ctor(System.Int32,System.Int32)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.FileFormats.Jpeg.JpegImage" /> class.
            </summary>
      <param name="width">
            The image width.
            </param>
      <param name="height">
            The image height.
            </param>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Jpeg.JpegImage.#ctor(Aspose.Imaging.ImageOptions.JpegOptions,System.Int32,System.Int32)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.FileFormats.Jpeg.JpegImage" /> class.
            </summary>
      <param name="jpegOptions">
            The jpeg options.
            </param>
      <param name="width">
            Image width.
            </param>
      <param name="height">
            Image height.
            </param>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Jpeg.JpegImage.JpegOptions">
      <summary>
            Gets the JPEG options used to create or load this <see cref="T:Aspose.Imaging.FileFormats.Jpeg.JpegImage" /> instance.
            </summary>
      <value>
            The JPEG options.
            </value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Jpeg.JpegImage.BitsPerPixel">
      <summary>
                Gets the image bits per pixel count.
            </summary>
      <value>The image bits per pixel count.</value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Jpeg.JpegImage.Comment">
      <summary>
            Gets or sets the jpeg file comment.
            </summary>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Jpeg.JpegImage.ExifData">
      <summary>
            Get or set exif data container
            </summary>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Jpeg.JpegImage.Height">
      <summary>
                Gets the image height.
            </summary>
      <value>The image height.</value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Jpeg.JpegImage.HorizontalResolution">
      <summary>
                Gets the horizontal resolution, in pixels per inch, of this <see cref="T:Aspose.Imaging.Image" />.
            </summary>
      <value>The horizontal resolution.</value>
      <remarks>Note by default this value is always 96 since different platforms cannot return the screen resolution. You may consider using the SetResolution method for updating both resolution values in single call.</remarks>
            ///
            <example>
                You can decide to store resolution either in jfif segment or exif segment.
                You can set resolution by following:
                this.Jfif.YDensity = 100;
                this.ExifData.YResolution = 100;
            </example></member>
    <member name="P:Aspose.Imaging.FileFormats.Jpeg.JpegImage.Jfif">
      <summary>
                Gets or sets the jfif.
            </summary>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Jpeg.JpegImage.RawDataFormat">
      <summary>
                Gets the raw data format.
            </summary>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Jpeg.JpegImage.VerticalResolution">
      <summary>
                Gets a value indicating whether object's data is cached currently and no data readig is required.
            </summary>
      <value>
        <c>true</c> if object's data is cached; otherwise, <c>false</c>.
            </value>
      <summary>
                Gets the vertical resolution, in pixels per inch, of this <see cref="T:Aspose.Imaging.Image" />.
            </summary>
      <value>The vertical resolution.</value>
      <example>
                You can decide to store resolution either in jfif segment or exif segment.
                You can set resolution by following:
                this.Jfif.YDensity = 100;
                this.ExifData.YResolution = 100;
            </example>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Jpeg.JpegImage.Width">
      <summary>
                Gets the image width.
            </summary>
      <value>The image width.</value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Jpeg.JpegImage.IgnoreEmbeddedColorProfile">
      <summary>
            Gets or sets a value indicating whether embedded color profile is ignored. If embedded color profile is ignored, dafault color profile is used.
            </summary>
    </member>
    <member name="T:Aspose.Imaging.StreamContainer">
      <summary>
            Represents stream container which contains the stream and provides stream processing routines.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.StreamContainer.ReadWriteBytesCount">
      <summary>
            Specifies read and write bytes count when reading sequentially.
            </summary>
    </member>
    <member name="M:Aspose.Imaging.StreamContainer.op_Explicit(Aspose.Imaging.StreamContainer)~System.IO.Stream">
      <summary>
            Performs an explicit conversion from <see cref="T:Aspose.Imaging.StreamContainer" /> to <see cref="T:System.IO.Stream" />.
            </summary>
      <param name="streamContainer">The stream container.</param>
      <returns>The result of the conversion.</returns>
    </member>
    <member name="M:Aspose.Imaging.StreamContainer.Flush">
      <summary>
            Clears all buffers for this stream and causes any buffered data to be written to the underlying device.
            </summary>
    </member>
    <member name="M:Aspose.Imaging.StreamContainer.Write(System.Byte[])">
      <summary>
            Writes all of the specified bytes to the stream.
            </summary>
      <param name="bytes">The bytes to write.</param>
    </member>
    <member name="M:Aspose.Imaging.StreamContainer.WriteByte(System.Byte)">
      <summary>
            Writes a byte to the current position in the stream and advances the position within the stream by one byte.
            </summary>
      <param name="value">The byte to write to the stream.</param>
    </member>
    <member name="M:Aspose.Imaging.StreamContainer.Read(System.Byte[])">
      <summary>
            Reads bytes to fill the specified bytes buffer.
            </summary>
      <param name="bytes">The bytes to fill.</param>
      <returns>The number of bytes read. This value can be less than the number of bytes in the buffer if there is not enough bytes in the stream.</returns>
    </member>
    <member name="M:Aspose.Imaging.StreamContainer.ToBytes">
      <summary>
            Converts the stream data to the <see cref="T:System.Byte" /> array.
            </summary>
      <returns>
            The stream data converted to the <see cref="T:System.Byte" /> array.
            </returns>
    </member>
    <member name="M:Aspose.Imaging.StreamContainer.ToBytes(System.Int64,System.Int64)">
      <summary>
            Converts the stream data to the <see cref="T:System.Byte" /> array.
            </summary>
      <param name="position">The position to start reading bytes from.</param>
      <param name="bytesCount">The bytes count to read.</param>
      <returns>
            The stream data converted to the <see cref="T:System.Byte" /> array.
            </returns>
    </member>
    <member name="M:Aspose.Imaging.StreamContainer.Read(System.Byte[],System.Int32,System.Int32)">
      <summary>
            Reads a sequence of bytes from the current stream and advances the position within the stream by the number of bytes read.
            </summary>
      <param name="buffer">An array of bytes. When this method returns, the buffer contains the specified byte array with the values between <paramref name="offset" /> and (<paramref name="offset" /> + <paramref name="count" /> - 1) replaced by the bytes read from the current source.</param>
      <param name="offset">The zero-based byte offset in <paramref name="buffer" /> at which to begin storing the data read from the current stream.</param>
      <param name="count">The maximum number of bytes to be read from the current stream.</param>
      <returns>
            The total number of bytes read into the buffer. This can be less than the number of bytes requested if that many bytes are not currently available, or zero (0) if the end of the stream has been reached.
            </returns>
    </member>
    <member name="M:Aspose.Imaging.StreamContainer.ReadByte">
      <summary>
            Reads a byte from the stream and advances the position within the stream by one byte, or returns -1 if at the end of the stream.
            </summary>
      <returns>
            The unsigned byte cast to an Int32, or -1 if at the end of the stream.
            </returns>
    </member>
    <member name="M:Aspose.Imaging.StreamContainer.Seek(System.Int64,Aspose.Imaging.SeekOrigin)">
      <summary>
            Sets the position within the current stream.
            </summary>
      <param name="offset">A byte offset relative to the <paramref name="origin" /> parameter. This value represents offset from the starting stream position passed in the StreamContainer constructor.</param>
      <param name="origin">A value of type <see cref="T:System.IO.SeekOrigin" /> indicating the reference point used to obtain the new position.</param>
      <returns>The new position within the current stream.</returns>
    </member>
    <member name="M:Aspose.Imaging.StreamContainer.SeekBegin">
      <summary>
            Sets the stream position to the beginning of the stream. This value represents offset from the starting stream position passed in the StreamContainer constructor.
            </summary>
    </member>
    <member name="M:Aspose.Imaging.StreamContainer.Write(System.Byte[],System.Int32,System.Int32)">
      <summary>
            Writes a sequence of bytes to the current stream and advances the current position within this stream by the number of bytes written.
            </summary>
      <param name="buffer">An array of bytes. This method copies <paramref name="count" /> bytes from <paramref name="buffer" /> to the current stream.</param>
      <param name="offset">The zero-based byte offset in <paramref name="buffer" /> at which to begin copying bytes to the current stream.</param>
      <param name="count">The number of bytes to be written to the current stream.</param>
    </member>
    <member name="M:Aspose.Imaging.StreamContainer.Save(System.IO.Stream)">
      <summary>
            Saves (copies) the stream's data to the specified stream. Uses default buffer size <see cref="F:Aspose.Imaging.StreamContainer.ReadWriteBytesCount" /> and stream <see cref="P:Aspose.Imaging.StreamContainer.Length" /> value.
            </summary>
      <param name="destinationStream">The stream to save the data to.</param>
    </member>
    <member name="M:Aspose.Imaging.StreamContainer.Save(System.IO.Stream,System.Int32)">
      <summary>
            Saves (copies) all the stream's data to the specified stream. Uses stream <see cref="P:Aspose.Imaging.StreamContainer.Length" /> value.
            </summary>
      <param name="destinationStream">The stream to save the data to.</param>
      <param name="bufferSize">The buffer.</param>
    </member>
    <member name="M:Aspose.Imaging.StreamContainer.Save(System.IO.Stream,System.Int32,System.Int64)">
      <summary>
            Saves (copies) the stream's data to the specified stream.
            </summary>
      <param name="destinationStream">The stream to save the data to.</param>
      <param name="bufferSize">The buffer size. By default <see cref="F:Aspose.Imaging.StreamContainer.ReadWriteBytesCount" /> value is used.</param>
      <param name="length">The stream data length to copy. By default the length is set to <see cref="P:Aspose.Imaging.StreamContainer.Length" /> value.</param>
    </member>
    <member name="M:Aspose.Imaging.StreamContainer.Save(System.String)">
      <summary>
            Saves (copies) the stream's data to the specified stream. Uses default buffer size <see cref="F:Aspose.Imaging.StreamContainer.ReadWriteBytesCount" /> and stream <see cref="P:Aspose.Imaging.StreamContainer.Length" /> value.
            </summary>
      <param name="filePath">The file path to save the stream data to.</param>
    </member>
    <member name="M:Aspose.Imaging.StreamContainer.Save(System.String,System.Int32)">
      <summary>
            Saves (copies) the stream's data to the specified stream. Uses stream <see cref="P:Aspose.Imaging.StreamContainer.Length" /> value.
            </summary>
      <param name="filePath">The file path to save the stream data to.</param>
      <param name="bufferSize">The buffer size. By default <see cref="F:Aspose.Imaging.StreamContainer.ReadWriteBytesCount" /> value is used.</param>
    </member>
    <member name="M:Aspose.Imaging.StreamContainer.Save(System.String,System.Int32,System.Int64)">
      <summary>
            Saves (copies) the stream's data to the specified stream.
            </summary>
      <param name="filePath">The file path to save the stream data to.</param>
      <param name="bufferSize">The buffer size. By default <see cref="F:Aspose.Imaging.StreamContainer.ReadWriteBytesCount" /> value is used.</param>
      <param name="length">The stream data length to copy. By default the length is set to <see cref="P:Aspose.Imaging.StreamContainer.Length" /> value.</param>
    </member>
    <member name="M:Aspose.Imaging.StreamContainer.WriteTo(Aspose.Imaging.StreamContainer)">
      <summary>
            Copies the contained data to another <see cref="T:Aspose.Imaging.StreamContainer" />.
            </summary>
      <param name="streamContainer">The stream container to copy to.</param>
    </member>
    <member name="M:Aspose.Imaging.StreamContainer.WriteTo(Aspose.Imaging.StreamContainer,System.Int64)">
      <summary>
            Copies the contained data to another <see cref="T:Aspose.Imaging.StreamContainer" />.
            </summary>
      <param name="streamContainer">The stream container to copy to.</param>
      <param name="length">The bytes count to write.</param>
      <exception cref="T:Aspose.Imaging.Exceptions.FrameworkException">Copy operation cannot complete. Cannot read  + count +  bytes.</exception>
    </member>
    <member name="M:Aspose.Imaging.StreamContainer.AfterStreamDisposed">
      <summary>
            Called after the stream is disposed.
            </summary>
    </member>
    <member name="M:Aspose.Imaging.StreamContainer.BeforeStreamDisposed">
      <summary>
            Called before the stream is disposed.
            </summary>
    </member>
    <member name="M:Aspose.Imaging.StreamContainer.BeforeSave(System.IO.Stream)">
      <summary>
            Called before save occurs on the destination stream.
            </summary>
      <param name="destinationStream">The destination stream.</param>
    </member>
    <member name="M:Aspose.Imaging.StreamContainer.ReleaseManagedResources">
      <summary>
            Releases the managed resources. Make sure no unmanaged resources are released here, since they may have been already released.
            </summary>
    </member>
    <member name="P:Aspose.Imaging.StreamContainer.Position">
      <summary>
            Gets or sets the current position within the stream. This value represents offset from the starting stream position passed in the StreamContainer constructor.
            </summary>
      <value>The current stream position.</value>
    </member>
    <member name="P:Aspose.Imaging.StreamContainer.Stream">
      <summary>
            Gets the data stream.
            </summary>
      <value>The data stream.</value>
    </member>
    <member name="P:Aspose.Imaging.StreamContainer.IsStreamDisposedOnClose">
      <summary>
            Gets a value indicating whether this stream is disposed on close.
            </summary>
      <value>
        <c>true</c> if stream is disposed on close; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:Aspose.Imaging.StreamContainer.Length">
      <summary>
            Gets or sets the stream length in bytes. This value is less than the <see cref="P:System.IO.Stream.Length" /> by the starting stream position passed in the StreamContainer constructor.
            </summary>
      <value>The stream length.</value>
    </member>
    <member name="P:Aspose.Imaging.StreamContainer.CanRead">
      <summary>
            Gets a value indicating whether stream supports reading.
            </summary>
      <value>
        <c>true</c> if stream supports reading; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:Aspose.Imaging.StreamContainer.CanSeek">
      <summary>
            Gets a value indicating whether stream supports seeking.
            </summary>
      <value>
        <c>true</c> if stream supports seeking; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:Aspose.Imaging.StreamContainer.CanWrite">
      <summary>
            Gets a value indicating whether stream supports writing.
            </summary>
      <value>
        <c>true</c> if stream supports writing; otherwise, <c>false</c>.</value>
    </member>
    <member name="T:Aspose.Imaging.FileFormats.Jpeg.NamespaceDoc">
      <summary>
            The namespace handles Jpeg file format processing.
            </summary>
    </member>
    <member name="T:Aspose.Imaging.FileFormats.Png.NamespaceDoc">
      <summary>
            The namespace handles Png file format processing.
            </summary>
    </member>
    <member name="T:Aspose.Imaging.FileFormats.Png.PngColorType">
      <summary>
                Represents the PNG image color type.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Png.PngColorType.Grayscale">
      <summary>
                Represents the color type where each pixel is a greyscale sample.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Png.PngColorType.Truecolor">
      <summary>
                Represents the color type where each pixel is an R,G,B triple.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Png.PngColorType.IndexedColor">
      <summary>
                Represents the color type where each pixel is a palette index; a PLTE chunk shall appear.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Png.PngColorType.GrayscaleWithAlpha">
      <summary>
                Represents the color type where each pixel is a greyscale sample followed by an alpha sample.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Png.PngColorType.TruecolorWithAlpha">
      <summary>
                Represents the color type where each pixel is an R,G,B triple followed by an alpha sample.
            </summary>
    </member>
    <member name="T:Aspose.Imaging.FileFormats.Png.PngFilterType">
      <summary>
            The png filter type.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Png.PngFilterType.None">
      <summary>
            The null-filter, means no filtering for image data rows.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Png.PngFilterType.Sub">
      <summary>
            The sub filter, means substractive filtering will be applied to image data.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Png.PngFilterType.Up">
      <summary>
            The up filter, means row-by-row substraction filter will be applied.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Png.PngFilterType.Avg">
      <summary>
            The avg filter, means, that average filter will be applied to image data.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Png.PngFilterType.Paeth">
      <summary>
            The paeth predictor filter.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Png.PngFilterType.Adaptive">
      <summary>
            Adaptive filtering, means that saving process will choose most sutable filter for each data row. Best compression, slowest execution time.
            </summary>
    </member>
    <member name="T:Aspose.Imaging.FileFormats.Png.PngImage">
      <summary>
                The new png image.
            </summary>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Png.PngImage.#ctor(System.Int32,System.Int32)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.FileFormats.Png.PngImage" /> class.
            </summary>
      <param name="width">
            The width.
            </param>
      <param name="height">
            The height.
            </param>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Png.PngImage.#ctor(System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.FileFormats.Png.PngImage" /> class.
            </summary>
      <param name="path">
            The path to load an image.
            </param>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Png.PngImage.#ctor(Aspose.Imaging.RasterImage)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.FileFormats.Png.PngImage" /> class.
            </summary>
      <param name="rasterImage">
            The raster image.
            </param>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Png.PngImage.#ctor(System.String,Aspose.Imaging.FileFormats.Png.PngColorType)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.FileFormats.Png.PngImage" /> class.
            </summary>
      <param name="path">
            The path to load an image.
            </param>
      <param name="colorType">
            The color type.
            </param>
      <exception cref="T:System.ArgumentNullException">
      </exception>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Png.PngImage.#ctor(Aspose.Imaging.RasterImage,Aspose.Imaging.FileFormats.Png.PngColorType)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.FileFormats.Png.PngImage" /> class.
            </summary>
      <param name="rasterImage">
            The raster image.
            </param>
      <param name="colorType">
            The color type.
            </param>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Png.PngImage.#ctor(System.IO.Stream)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.FileFormats.Png.PngImage" /> class.
            </summary>
      <param name="stream">
            The stream to load an image.
            </param>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Png.PngImage.#ctor(System.Int32,System.Int32,Aspose.Imaging.FileFormats.Png.PngColorType)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.FileFormats.Png.PngImage" /> class.
            </summary>
      <param name="width">
            The width.
            </param>
      <param name="height">
            The height.
            </param>
      <param name="colorType">
            The color type.
            </param>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Png.PngImage.#ctor(Aspose.Imaging.ImageOptions.PngOptions,System.Int32,System.Int32)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.FileFormats.Png.PngImage" /> class.
            </summary>
      <param name="pngOptions">
            The png options.
            </param>
      <param name="width">
            The width.
            </param>
      <param name="height">
            The height.
            </param>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Png.PngImage.SaveData(System.IO.Stream)">
      <summary>
            The save data.
            </summary>
      <param name="stream">
            The stream.
            </param>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Png.PngImage.UpdateDimensions(System.Int32,System.Int32)">
      <summary>
            The update dimensions.
            </summary>
      <param name="newWidth">
            The new width.
            </param>
      <param name="newHeight">
            The new height.
            </param>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Png.PngImage.BitsPerPixel">
      <summary>
                Gets the bits per pixel.
            </summary>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Png.PngImage.Height">
      <summary>
                Gets the height.
            </summary>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Png.PngImage.HorizontalResolution">
      <summary>
                Gets or sets the horizontal resolution.
            </summary>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Png.PngImage.RawDataFormat">
      <summary>
                Gets the raw data format.
            </summary>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Png.PngImage.VerticalResolution">
      <summary>
                Gets or sets the vertical resolution.
            </summary>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Png.PngImage.Width">
      <summary>
                Gets the width.
            </summary>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Png.PngImage.HasTransparentColor">
      <summary>
            Gets a value indicating whether image has transparent color.
            </summary>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Png.PngImage.TransparentColor">
      <summary>
            Gets the transparent color.
            </summary>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Png.PngImage.HasBackgroundColor">
      <summary>
            Gets a value indicating whether has background color.
            </summary>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Png.PngImage.BackgroundColor">
      <summary>
            Gets the background color.
            </summary>
    </member>
    <member name="T:Aspose.Imaging.FileFormats.Psd.ColorModes">
      <summary>
            Represents the psd file format color modes.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Psd.ColorModes.Bitmap">
      <summary>
            The bitmap color mode.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Psd.ColorModes.Grayscale">
      <summary>
            The grayscale mode.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Psd.ColorModes.Indexed">
      <summary>
            Indexed color mode.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Psd.ColorModes.RGB">
      <summary>
            RGB color mode.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Psd.ColorModes.CMYK">
      <summary>
            CMYK color mode.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Psd.ColorModes.Multichannel">
      <summary>
            Multichannel color mode.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Psd.ColorModes.Duotone">
      <summary>
            Duotone color mode.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Psd.ColorModes.Lab">
      <summary>
            Lab color mode.
            </summary>
    </member>
    <member name="T:Aspose.Imaging.FileFormats.Psd.CompressionMethod">
      <summary>
            Defines the compression method used for image data.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Psd.CompressionMethod.Raw">
      <summary>
            No compression. The image data stored as raw bytes in RGBA planar order.
            That means that first all R data is written, then all G is written, then all B and finally all A data is written.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Psd.CompressionMethod.RLE">
      <summary>
            RLE compressed the image data starts with the byte counts for all the scan lines (rows * channels), with each
            count stored as a two-byte value. The RLE compressed data follows, with each scan line compressed separately.
            The RLE compression is the same compression algorithm used by the Macintosh ROM routine PackBits and the TIFF standard.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Psd.CompressionMethod.ZipWithoutPrediction">
      <summary>
            ZIP without prediction.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Psd.CompressionMethod.ZipWithPrediction">
      <summary>
            ZIP with prediction.
            </summary>
    </member>
    <member name="T:Aspose.Imaging.FileFormats.Psd.PsdColorPalette">
      <summary>
            The PSD color palette.
            </summary>
    </member>
    <member name="T:Aspose.Imaging.IPsdColorPalette">
      <summary>
            The pasd color palette
            </summary>
    </member>
    <member name="P:Aspose.Imaging.IPsdColorPalette.TransparentIndex">
      <summary>
            Gets the index of the transparent color.
            </summary>
      <value>The index of the transparent color.</value>
    </member>
    <member name="P:Aspose.Imaging.IPsdColorPalette.HasTransparentColor">
      <summary>
            Gets a value indicating whether transparent color exists.
            </summary>
      <value>
        <c>true</c> if transparent color exists; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Aspose.Imaging.IPsdColorPalette.TransparentColor">
      <summary>
            Gets the transparent color.
            </summary>
      <value>The transparent color.</value>
    </member>
    <member name="P:Aspose.Imaging.IPsdColorPalette.RawEntries">
      <summary>
            Gets the raw color palette entries data.
            </summary>
      <value>The raw color palette entries data.</value>
    </member>
    <member name="P:Aspose.Imaging.IPsdColorPalette.RawEntriesCount">
      <summary>
            Gets the raw color palette entries count.
            </summary>
      <value>The raw color palette entries count.</value>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Psd.PsdColorPalette.#ctor(Aspose.Imaging.IColorPalette)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.FileFormats.Psd.PsdColorPalette" /> class.
            </summary>
      <param name="colorPalette">The color palette.</param>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Psd.PsdColorPalette.#ctor(Aspose.Imaging.IColorPalette,System.Int16)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.FileFormats.Psd.PsdColorPalette" /> class.
            </summary>
      <param name="colorPalette">The color palette.</param>
      <param name="transparentIndex">The transparent color index.</param>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Psd.PsdColorPalette.#ctor(System.Byte[],System.Boolean)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.FileFormats.Psd.PsdColorPalette" /> class.
            </summary>
      <param name="rawEntriesData">The raw entries data.</param>
      <param name="isCompactPalette">Indicating whether compact it palette.</param>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Psd.PsdColorPalette.#ctor(System.Byte[])">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.FileFormats.Psd.PsdColorPalette" /> class and IsCompactPalette is false.
            </summary>
      <param name="rawEntriesData">The raw entries data.</param>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Psd.PsdColorPalette.#ctor(System.Byte[],System.Int16,System.Boolean)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.FileFormats.Psd.PsdColorPalette" /> class.
            </summary>
      <param name="rawEntriesData">The raw entries data.</param>
      <param name="transparentIndex">The transparent color index. Note the index is not the raw entries index instead it is for the converted color array.</param>
      <param name="useCompactPalette">Indicating whether compact it palette.</param>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Psd.PsdColorPalette.#ctor(System.Byte[],System.Int16)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.FileFormats.Psd.PsdColorPalette" /> class and IsCompactPalette is false.
            </summary>
      <param name="rawEntriesData">The raw entries data.</param>
      <param name="transparentIndex">The transparent color index. Note the index is not the raw entries index instead it is for the converted color array.</param>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Psd.PsdColorPalette.#ctor(Aspose.Imaging.Color[],System.Boolean)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.FileFormats.Psd.PsdColorPalette" /> class.
            </summary>
      <param name="colorPaletteEntries">The color palette entries.</param>
      <param name="isCompactPalette">Indicating whether compact it palette.</param>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Psd.PsdColorPalette.#ctor(Aspose.Imaging.Color[])">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.FileFormats.Psd.PsdColorPalette" /> class and IsCompactPalette is false.
            </summary>
      <param name="colorPaletteEntries">The color palette entries.</param>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Psd.PsdColorPalette.#ctor(Aspose.Imaging.Color[],System.Int16,System.Boolean)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.FileFormats.Psd.PsdColorPalette" /> class.
            </summary>
      <param name="colorPaletteEntries">The color palette entries.</param>
      <param name="transparentIndex">The transparent color index.</param>
      <param name="useCompactPalette">Indicating whether compact it palette.</param>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Psd.PsdColorPalette.#ctor(Aspose.Imaging.Color[],System.Int16)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.FileFormats.Psd.PsdColorPalette" /> class and IsCompactPalette is false.
            </summary>
      <param name="colorPaletteEntries">The color palette entries.</param>
      <param name="transparentIndex">The transparent color index.</param>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Psd.PsdColorPalette.CopyPalette(Aspose.Imaging.IColorPalette,System.Boolean)">
      <summary>
            Copies the palette.
            </summary>
      <param name="colorPalette">The color palette.</param>
      <param name="useCompactPalette">Indicating whether compact palette.</param>
      <returns>The newly created and copied palette or null if null palette passed.</returns>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Psd.PsdColorPalette.CopyPalette(Aspose.Imaging.IColorPalette)">
      <summary>
            Copies the palette.
            </summary>
      <param name="colorPalette">The color palette.</param>
      <returns>The newly created and copied palette or null if null palette passed.</returns>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Psd.PsdColorPalette.GetNearestColorIndex(Aspose.Imaging.Color)">
      <summary>
            Gets the index of the nearest color.
            </summary>
      <param name="color">The color.</param>
      <returns>The index of the nearest color.</returns>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Psd.PsdColorPalette.GetColor(System.Int32)">
      <summary>
            Gets the palette color by index.
            </summary>
      <param name="index">The palette color index.</param>
      <returns>
            The color palette entry specified by the <paramref name="index" />.
            </returns>
      <exception cref="T:System.ArgumentOutOfRangeException"> if color palette <paramref name="index" /> specified is out of the palette entries range.</exception>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Psd.PsdColorPalette.RawEntriesCount">
      <summary>
            Gets the raw color palette entries count.
            </summary>
      <value>The raw color palette entries count.</value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Psd.PsdColorPalette.EntriesCount">
      <summary>
            Gets the entries count.
            </summary>
      <value>The entries count.</value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Psd.PsdColorPalette.Entries">
      <summary>
            Gets an array of <see cref="T:Aspose.Imaging.Color" /> structures.
            </summary>
      <value>The entries.</value>
      <returns>
            The array of <see cref="T:Aspose.Imaging.Color" /> structure that make up this <see cref="T:Aspose.Imaging.ColorPalette" />.
            </returns>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Psd.PsdColorPalette.TransparentIndex">
      <summary>
            Gets the index of the transparent color.
            </summary>
      <value>The index of the transparent color.</value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Psd.PsdColorPalette.HasTransparentColor">
      <summary>
            Gets a value indicating whether transparent color exists.
            </summary>
      <value>
        <c>true</c> if transparent color exists; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Psd.PsdColorPalette.TransparentColor">
      <summary>
            Gets the transparent color.
            </summary>
      <value>The transparent color.</value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Psd.PsdColorPalette.RawEntries">
      <summary>
            Gets the raw color palette entries data.
            </summary>
      <value>The raw color palette entries data.</value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Psd.PsdColorPalette.IsCompactPalette">
      <summary>
              Gets a value indicating whether compact it palette.
            </summary>
      <value>
        <c>true</c> if compact it palette; otherwise, <c>false</c>.</value>
      <remarks>
              Compact palette means that image will contain only the specified palette entries if possible or in other words the image will be more compact and occupy less space;
              otherwise there will be 2^BitsPerPixel entries and image will reserve more space for all possible palette entries.
              Setting this value to true and changing palette entries may cause performance penalty since data movement may occur so use it carefully.
            </remarks>
    </member>
    <member name="T:Aspose.Imaging.FileFormats.Psd.PsdImage">
      <summary>
            A PSD image.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Psd.PsdImage.DefaultVersion">
      <summary>
            The default PSD version.
            </summary>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Psd.PsdImage.#ctor(System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.FileFormats.Psd.PsdImage" /> class.
            </summary>
      <param name="path">The path to load pixel and palette data from and initialize with.</param>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Psd.PsdImage.#ctor(System.String,Aspose.Imaging.FileFormats.Psd.ColorModes,System.Int16,System.Int16,System.Int32,Aspose.Imaging.FileFormats.Psd.CompressionMethod)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.FileFormats.Psd.PsdImage" /> class.
            </summary>
      <param name="path">The path to load pixel and palette data from and initialize with.</param>
      <param name="colorMode">The color mode.</param>
      <param name="channelBitDepth">The PSD bit depth per channel.</param>
      <param name="channels">The PSD channels count.</param>
      <param name="psdVersion">The PSD version.</param>
      <param name="compression">The compression to use.</param>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Psd.PsdImage.#ctor(System.IO.Stream)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.FileFormats.Psd.PsdImage" /> class.
            </summary>
      <param name="stream">The stream to load pixel and palette data from and initialize with.</param>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Psd.PsdImage.#ctor(System.IO.Stream,Aspose.Imaging.FileFormats.Psd.ColorModes,System.Int16,System.Int16,System.Int32,Aspose.Imaging.FileFormats.Psd.CompressionMethod)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.FileFormats.Psd.PsdImage" /> class.
            </summary>
      <param name="stream">The stream to load pixel and palette data from and initialize with.</param>
      <param name="colorMode">The color mode.</param>
      <param name="channelBitDepth">The PSD bit depth per channel.</param>
      <param name="channels">The PSD channels count.</param>
      <param name="psdVersion">The PSD version.</param>
      <param name="compression">The compression to use.</param>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Psd.PsdImage.#ctor(Aspose.Imaging.RasterImage)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.FileFormats.Psd.PsdImage" /> class.
            </summary>
      <param name="rasterImage">The image to load pixel and palette data from and initialize with.</param>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Psd.PsdImage.#ctor(Aspose.Imaging.RasterImage,Aspose.Imaging.FileFormats.Psd.ColorModes,System.Int16,System.Int16,System.Int32,Aspose.Imaging.FileFormats.Psd.CompressionMethod)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.FileFormats.Psd.PsdImage" /> class.
            </summary>
      <param name="rasterImage">The image to load pixel and palette data from and initialize with.</param>
      <param name="colorMode">The color mode.</param>
      <param name="channelBitDepth">The PSD bit depth per channel.</param>
      <param name="channels">The PSD channels count.</param>
      <param name="psdVersion">The PSD version.</param>
      <param name="compression">The compression to use.</param>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Psd.PsdImage.#ctor(System.Int32,System.Int32)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.FileFormats.Psd.PsdImage" /> class.
            </summary>
      <param name="width">The image width.</param>
      <param name="height">The image height.</param>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Psd.PsdImage.#ctor(System.Int32,System.Int32,Aspose.Imaging.IColorPalette,Aspose.Imaging.FileFormats.Psd.ColorModes,System.Int16,System.Int16,System.Int32,Aspose.Imaging.FileFormats.Psd.CompressionMethod)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.FileFormats.Psd.PsdImage" /> class.
            </summary>
      <param name="width">The image width.</param>
      <param name="height">The image height.</param>
      <param name="colorPalette">The color palette.</param>
      <param name="colorMode">The color mode.</param>
      <param name="channelBitDepth">The PSD bit depth per channel.</param>
      <param name="channels">The PSD channels count.</param>
      <param name="psdVersion">The PSD version.</param>
      <param name="compression">The compression to use.</param>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Psd.PsdImage.ColorMode">
      <summary>
            Gets or sets the color mode.
            </summary>
      <value>
            The color mode.
            </value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Psd.PsdImage.Compression">
      <summary>
            Gets the compression method.
            </summary>
      <value>The compression.</value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Psd.PsdImage.ChannelsCount">
      <summary>
            Gets the PSD channels count.
            </summary>
      <value>The PSD channels count.</value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Psd.PsdImage.BitsPerChannel">
      <summary>
            Gets the bits per channel.
            </summary>
      <value>The bits per channel.</value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Psd.PsdImage.ImageResources">
      <summary>
            Gets or sets the PSD image resources.
            </summary>
      <value>The PSD image resources.</value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Psd.PsdImage.Version">
      <summary>
            Gets or sets the version.
            </summary>
      <value>The version.</value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Psd.PsdImage.Width">
      <summary>
            Gets the image width.
            </summary>
      <value>The image width.</value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Psd.PsdImage.Height">
      <summary>
            Gets the image height.
            </summary>
      <value>The image height.</value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Psd.PsdImage.BitsPerPixel">
      <summary>
            Gets the image bits per pixel count.
            </summary>
      <value>The image bits per pixel count.</value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Psd.PsdImage.Layers">
      <summary>
            Gets or sets the PSD layers.
            </summary>
      <value>
            The PSD layers.
            </value>
      <remarks>Note that if there are no layers the other related information within layer and mask information section will not be preserved (layer masks, resources and etc).</remarks>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Psd.PsdImage.GlobalLayerResources">
      <summary>
            Gets or sets the global layer resources.
            </summary>
      <value>
            The global layer resources.
            </value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Psd.PsdImage.GlobalLayerMaskInfo">
      <summary>
            Gets the global layer mask info.
            </summary>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Psd.PsdImage.HasTransparencyData">
      <summary>
            Gets or sets a value indicating whether first alpha channel contains the transparency data for the merged result when specifying layers data.
            </summary>
      <value>
        <c>true</c> if first alpha channel contains the transparency data for the merged result when specifying layers data; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="T:Aspose.Imaging.FileFormats.Psd.ResourceBlock">
      <summary>
            The resource block.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Psd.ResourceBlock.ResouceBlockSignature">
      <summary>
            The resource signature.
            </summary>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Psd.ResourceBlock.Save(Aspose.Imaging.StreamContainer)">
      <summary>
            Saves the resource block to the specified stream.
            </summary>
      <param name="stream">The stream to save the resource block to.</param>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Psd.ResourceBlock.ValidateValues">
      <summary>
            Validates the resource values.
            </summary>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Psd.ResourceBlock.SaveData(Aspose.Imaging.StreamContainer)">
      <summary>
            Saves the resource block data.
            </summary>
      <param name="streamContainer">The stream container to save to.</param>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Psd.ResourceBlock.CacheData">
      <summary>
            Caches the data for subsequent faster retrieval.
            </summary>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Psd.ResourceBlock.StopDataCache">
      <summary>
            Stops data caching.
            </summary>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Psd.ResourceBlock.Signature">
      <summary>
            Gets the resource signature. Should be always '8BIM'.
            </summary>
      <value>The resource signature.</value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Psd.ResourceBlock.ID">
      <summary>
            Gets or sets the unique identifier for the resource.
            </summary>
      <value>The unique identifier for the resource.</value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Psd.ResourceBlock.Name">
      <summary>
            Gets or sets the resource name. Pascal string, padded to make the size even (a null name consists of two bytes of 0).
            </summary>
      <value>The resource name.</value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Psd.ResourceBlock.DataSize">
      <summary>
            Gets the resource data size in bytes.
            </summary>
      <value>The resource data size.</value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Psd.ResourceBlock.Size">
      <summary>
            Gets the resource block size in bytes including its data.
            </summary>
      <value>The resource block size.</value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Psd.ResourceBlock.MinimalVersion">
      <summary>
            Gets the minimal required PSD version.
            </summary>
      <value>The minimal PSD version.</value>
    </member>
    <member name="T:Aspose.Imaging.FileFormats.Psd.ResourceBlock.ResourceBlockState">
      <summary>
            Represents resource block state.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Psd.ResourceBlock.ResourceBlockState.Normal">
      <summary>
            Typical state.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Psd.ResourceBlock.ResourceBlockState.Cached">
      <summary>
            Cached state.
            </summary>
    </member>
    <member name="T:Aspose.Imaging.FileFormats.Psd.Resources.GridAndGuidesResouce">
      <summary>
            Represents the grid and guides resource.
            </summary>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Psd.Resources.GridAndGuidesResouce.Guides">
      <summary>
            Gets or sets the guides.
            </summary>
      <value>The guides.</value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Psd.Resources.GridAndGuidesResouce.GuideCount">
      <summary>
            Gets the guide resource blocks count.
            </summary>
      <value>The guide resource blocks count.</value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Psd.Resources.GridAndGuidesResouce.HeaderVersion">
      <summary>
            Gets or sets the header version. This value should be always 1.
            </summary>
      <value>The header version.</value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Psd.Resources.GridAndGuidesResouce.GridCycleX">
      <summary>
            Gets or sets the horizontal grid cycle. The default is 576.
            </summary>
      <value>The horizontal grid cycle.</value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Psd.Resources.GridAndGuidesResouce.GridCycleY">
      <summary>
            Gets or sets the vertical grid cycle. The default is 576.
            </summary>
      <value>The vertical grid cycle.</value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Psd.Resources.GridAndGuidesResouce.DataSize">
      <summary>
            Gets the resource data size in bytes.
            </summary>
      <value>The resource data size.</value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Psd.Resources.GridAndGuidesResouce.MinimalVersion">
      <summary>
            Gets the minimal required psd version.
            </summary>
      <value>The minimal psd version.</value>
    </member>
    <member name="T:Aspose.Imaging.FileFormats.Psd.Resources.GuideDirection">
      <summary>
            The guide direction.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Psd.Resources.GuideDirection.Vertical">
      <summary>
            Vertical guide direction.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Psd.Resources.GuideDirection.Horizontal">
      <summary>
            Horizontal guide direction.
            </summary>
    </member>
    <member name="T:Aspose.Imaging.FileFormats.Psd.Resources.GuideResource">
      <summary>
            The guide resource block.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Psd.Resources.GuideResource.GuideResourceSize">
      <summary>
            The guide resource block size.
            </summary>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Psd.Resources.GuideResource.Location">
      <summary>
            Gets or sets the location of guide in document coordinates.
            </summary>
      <value>The guide location.</value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Psd.Resources.GuideResource.Direction">
      <summary>
            Gets or sets the direction of guide.
            </summary>
      <value>The direction of guide.</value>
    </member>
    <member name="T:Aspose.Imaging.FileFormats.Psd.Resources.Thumbnail4Resource">
      <summary>
            Represents the thumbnail resource for psd 4.0.
            </summary>
    </member>
    <member name="T:Aspose.Imaging.FileFormats.Psd.Resources.ThumbnailResource">
      <summary>
            The thumbnail resource block.
            </summary>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Psd.Resources.ThumbnailResource.ValidateValues">
      <summary>
            Validates the resource values.
            </summary>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Psd.Resources.ThumbnailResource.SaveData(Aspose.Imaging.StreamContainer)">
      <summary>
            Saves the resource block data.
            </summary>
      <param name="streamContainer">The stream container to save to.</param>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Psd.Resources.ThumbnailResource.CacheData">
      <summary>
            Caches the data for subsequent faster retrieval.
            </summary>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Psd.Resources.ThumbnailResource.StopDataCache">
      <summary>
            Stops data caching.
            </summary>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Psd.Resources.ThumbnailResource.SaveCommonData(Aspose.Imaging.StreamContainer)">
      <summary>
            Saves the common data.
            </summary>
      <param name="streamContainer">The stream container.</param>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Psd.Resources.ThumbnailResource.JpegOptions">
      <summary>
            Gets or sets the JPEG options. Suitable when thumbnail resource is saved into JPEG file format only. This option has no effect when RAW format is defined.
            </summary>
      <value>
            The JPEG options.
            </value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Psd.Resources.ThumbnailResource.Format">
      <summary>
            Gets or sets the thumbnail data format.
            </summary>
      <value>The thumbnail data format.</value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Psd.Resources.ThumbnailResource.Width">
      <summary>
            Gets or sets the width of thumbnail in pixels.
            </summary>
      <value>The thumbnail width.</value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Psd.Resources.ThumbnailResource.Height">
      <summary>
            Gets or sets the height of thumbnail in pixels.
            </summary>
      <value>The thumbnail height.</value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Psd.Resources.ThumbnailResource.WidthBytes">
      <summary>
            Gets the row width in bytes.
            </summary>
      <value>The row width in bytes.</value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Psd.Resources.ThumbnailResource.TotalSize">
      <summary>
            Gets the total data size.
            </summary>
      <value>The total data size.</value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Psd.Resources.ThumbnailResource.SizeAfterCompression">
      <summary>
            Gets or sets the size after compression. Used for consistency check.
            </summary>
      <value>The size after compression.</value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Psd.Resources.ThumbnailResource.BitsPixel">
      <summary>
            Gets or sets the bits pixel.
            </summary>
      <value>The thumbnail bits pixel.</value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Psd.Resources.ThumbnailResource.PlanesCount">
      <summary>
            Gets or sets the planes count.
            </summary>
      <value>The thumbnail planes count.</value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Psd.Resources.ThumbnailResource.ThumbnailData">
      <summary>
            Gets or sets the thumbnail data.
            </summary>
      <value>The thumbnail data.</value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Psd.Resources.ThumbnailResource.DataSize">
      <summary>
            Gets the resource data size in bytes.
            </summary>
      <value>The resource data size.</value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Psd.Resources.ThumbnailResource.MinimalVersion">
      <summary>
            Gets the minimal required psd version.
            </summary>
      <value>The minimal psd version.</value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Psd.Resources.Thumbnail4Resource.MinimalVersion">
      <summary>
            Gets the minimal required psd version.
            </summary>
      <value>The minimal psd version.</value>
    </member>
    <member name="T:Aspose.Imaging.FileFormats.Psd.Resources.ThumbnailFormat">
      <summary>
            Specifies thumbnail data format.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Psd.Resources.ThumbnailFormat.kRawRGB">
      <summary>
            Raw RGB format.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Psd.Resources.ThumbnailFormat.kJpegRGB">
      <summary>
            Compressed Jpeg format.
            </summary>
    </member>
    <member name="T:Aspose.Imaging.FileFormats.Psd.Resources.TransparencyIndexResource">
      <summary>
            The transparency index resource block.
            </summary>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Psd.Resources.TransparencyIndexResource.DataSize">
      <summary>
            Gets the resource data size in bytes.
            </summary>
      <value>The resource data size.</value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Psd.Resources.TransparencyIndexResource.MinimalVersion">
      <summary>
            Gets the minimal required psd version.
            </summary>
      <value>The minimal psd version.</value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Psd.Resources.TransparencyIndexResource.TransparencyIndex">
      <summary>
            Gets or sets the transparency color index.
            </summary>
      <value>The transparency color index.</value>
    </member>
    <member name="T:Aspose.Imaging.FileFormats.Psd.Resources.UnknownResource">
      <summary>
            The unknown resource. When a resource block is not recognized then this resource block is created.
            </summary>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Psd.Resources.UnknownResource.Data">
      <summary>
            Gets the resource data.
            </summary>
      <value>The resource data.</value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Psd.Resources.UnknownResource.DataSize">
      <summary>
            Gets the resource data size in bytes.
            </summary>
      <value>The resource data size.</value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Psd.Resources.UnknownResource.MinimalVersion">
      <summary>
            Gets the minimal required psd version.
            </summary>
      <value>The minimal psd version.</value>
    </member>
    <member name="T:Aspose.Imaging.FileFormats.Tiff.Enums.NamespaceDoc">
      <summary>
            The namespace contains Tiff file format enumerations.
            </summary>
    </member>
    <member name="T:Aspose.Imaging.ImageOptions.TiffOptionsError">
      <summary>
            The tiff options error codes.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.ImageOptions.TiffOptionsError.NoError">
      <summary>
            No error code.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.ImageOptions.TiffOptionsError.NoColorMap">
      <summary>
            The color map is not defined.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.ImageOptions.TiffOptionsError.ColorMapLengthInvalid">
      <summary>
            The color map length is invalid.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.ImageOptions.TiffOptionsError.CompressionSppMismatch">
      <summary>
            The compression does not match the samples per pixel count.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.ImageOptions.TiffOptionsError.PhotometricCompressionMismatch">
      <summary>
            The compression does not match the photometric settings.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.ImageOptions.TiffOptionsError.PhotometricSppMismatch">
      <summary>
            The photometric does not match the samples per pixel count.
            </summary>
    </member>
    <member name="T:Aspose.Imaging.FileFormats.Tiff.Enums.TiffPredictor">
      <summary>
            Prediction scheme for LZW
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Tiff.Enums.TiffPredictor.None">
      <summary>
            No prediction scheme used.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Tiff.Enums.TiffPredictor.Horizontal">
      <summary>
            Horizontal differencing.
            </summary>
    </member>
    <member name="T:Aspose.Imaging.FileFormats.Tiff.FileManagement.NamespaceDoc">
      <summary>
            The namespace contains Tiff file format stream handling classes.
            </summary>
    </member>
    <member name="T:Aspose.Imaging.FileFormats.Tiff.InstanceFactory.NamespaceDoc">
      <summary>
            The namespace contains Tiff file format tag factory helper classes and interfaces.
            </summary>
    </member>
    <member name="T:Aspose.Imaging.FileFormats.Tiff.NamespaceDoc">
      <summary>
            The namespace handles Tiff file format processing.
            </summary>
    </member>
    <member name="T:Aspose.Imaging.FileFormats.Tiff.TiffTagTypes.NamespaceDoc">
      <summary>
            The namespace contains Tiff file format tag classes.
            </summary>
    </member>
    <member name="T:Aspose.Imaging.FileStreamContainer">
      <summary>
            Helper for file stream processing.
            </summary>
    </member>
    <member name="M:Aspose.Imaging.FileStreamContainer.op_Explicit(Aspose.Imaging.FileStreamContainer)~System.IO.Stream">
      <summary>
            Performs an explicit conversion from <see cref="T:Aspose.Imaging.FileStreamContainer" /> to <see cref="T:System.IO.Stream" />.
            </summary>
      <param name="fileStreamContainer">The file stream container.</param>
      <returns>The result of the conversion.</returns>
    </member>
    <member name="M:Aspose.Imaging.FileStreamContainer.op_Explicit(Aspose.Imaging.FileStreamContainer)~System.IO.FileStream">
      <summary>
            Performs an explicit conversion from <see cref="T:Aspose.Imaging.FileStreamContainer" /> to <see cref="T:System.IO.FileStream" />.
            </summary>
      <param name="fileStreamContainer">The file stream container.</param>
      <returns>The result of the conversion.</returns>
    </member>
    <member name="P:Aspose.Imaging.FileStreamContainer.IsTemporal">
      <summary>
            Gets or sets a value indicating whether stream is temporal.
            </summary>
      <value>
        <c>true</c> if stream is temporal; otherwise, <c>false</c>.
            </value>
      <remarks>A temporal stream will remove iself when disposed. If the stream is memory based this property has no effect.
            The stream can be marked as temporal or persistent in case it was created explicitly otherwise the appropriate exception is thrown.</remarks>
    </member>
    <member name="P:Aspose.Imaging.FileStreamContainer.IsCreated">
      <summary>
            Gets a value indicating whether stream was created explicitly.
            </summary>
      <value>
        <c>true</c> if stream was created explicitly; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Aspose.Imaging.FileStreamContainer.FilePath">
      <summary>
            Gets the file path.
            </summary>
      <value>The file path.</value>
    </member>
    <member name="T:Aspose.Imaging.FillMode">
      <summary>
            Specifies how the interior of a closed path is filled.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FillMode.Alternate">
      <summary>
            Specifies the alternate fill mode.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FillMode.Winding">
      <summary>
            Specifies the winding fill mode.
            </summary>
    </member>
    <member name="T:Aspose.Imaging.Font">
      <summary>
            Defines a particular format for text, including font face, size, and style attributes. This class cannot be inherited.
            </summary>
      <example>This example demonstrates the use of Font and SolidBrush class to draw strings on Image surface. The example creates a new Image and draw shapes using Figures and GraphicsPath<code>[C#]

//Creates an instance of BmpOptions and set its various properties
Aspose.Imaging.ImageOptions.BmpOptions bmpOptions = new Aspose.Imaging.ImageOptions.BmpOptions();
bmpOptions.BitsPerPixel = 24;

// create a new source based on memory stream.
bmpOptions.Source = new Aspose.Imaging.Sources.StreamSource(new System.IO.MemoryStream(), true);

//Creates an instance of Image
using (Aspose.Imaging.Image image = Aspose.Imaging.Image.Create(bmpOptions, 500, 500))
{
    //Creates and initialize an instance of Graphics class
    Aspose.Imaging.Graphics graphics = new Aspose.Imaging.Graphics(image);

    //Clears Graphics surface
    graphics.Clear(Color.Wheat);

    //Creates an instance of Font
    Aspose.Imaging.Font font = new Aspose.Imaging.Font("Times New Roman", 16);

    //Create an instance of SolidBrush having Red Color
    Aspose.Imaging.Brushes.SolidBrush brush = new Aspose.Imaging.Brushes.SolidBrush(Color.Red);

    //Draw a String
    graphics.DrawString("Created by Aspose.Imaging for .Net", font, brush, new PointF(100, 100));

    // save all changes
    image.Save();
}</code><code>[Visual Basic]

'Creates an instance of BmpOptions and set its various properties
Dim bmpOptions As Aspose.Imaging.ImageOptions.BmpOptions = New Aspose.Imaging.ImageOptions.BmpOptions()
bmpOptions.BitsPerPixel = 24

' create a new source based on memory stream.
bmpOptions.Source = New Aspose.Imaging.Sources.StreamSource(New System.IO.MemoryStream(), True)

'Creates an instance of Image
Using image As Aspose.Imaging.Image = Aspose.Imaging.Image.Create(bmpOptions, 500, 500)
'Creates and initialize an instance of Graphics class
Dim graphics As Aspose.Imaging.Graphics = New Aspose.Imaging.Graphics(image)

'Clears Graphics surface
    graphics.Clear(Color.Wheat)

'Creates an instance of Font
Dim font As Aspose.Imaging.Font = New Aspose.Imaging.Font("Times New Roman", 16)

'Create an instance of SolidBrush having Red Color
Dim brush As Aspose.Imaging.Brushes.SolidBrush = New Aspose.Imaging.Brushes.SolidBrush(Color.Red)

'Draw a String
    graphics.DrawString("Created by Aspose.Imaging for .Net", font, brush, New PointF(100, 100))

' save all changes
    image.Save()
End Using</code></example>
    </member>
    <member name="M:Aspose.Imaging.Font.#ctor(Aspose.Imaging.Font,Aspose.Imaging.FontStyle)">
      <summary>
            Initializes a new <see cref="T:Aspose.Imaging.Font" /> that uses the specified existing <see cref="T:Aspose.Imaging.Font" /> and <see cref="T:Aspose.Imaging.FontStyle" /> enumeration.
            </summary>
      <param name="prototype">The existing <see cref="T:Aspose.Imaging.Font" /> from which to create the new <see cref="T:Aspose.Imaging.Font" />.</param>
      <param name="newStyle">The <see cref="T:Aspose.Imaging.FontStyle" /> to apply to the new <see cref="T:Aspose.Imaging.Font" />. Multiple values of the <see cref="T:Aspose.Imaging.FontStyle" /> enumeration can be combined with the OR operator.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="prototype" /> is null.</exception>
    </member>
    <member name="M:Aspose.Imaging.Font.#ctor(System.String,System.Single)">
      <summary>
            Initializes a new <see cref="T:Aspose.Imaging.Font" /> using a specified size. The character set is set to <see cref="F:Aspose.Imaging.CharacterSet.Default" />, the graphics unit to <see cref="F:Aspose.Imaging.GraphicsUnit.Point" />, the font style to <see cref="F:Aspose.Imaging.FontStyle.Regular" />.
            </summary>
      <param name="fontName">A string representation of the <see cref="T:Aspose.Imaging.Font" /> name.</param>
      <param name="emSize">The em-size, in points, of the new font.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="emSize" /> is less than or equal to 0, evaluates to infinity or is not a valid number.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="fontName" /> is null.</exception>
    </member>
    <member name="M:Aspose.Imaging.Font.#ctor(System.String,System.Single,Aspose.Imaging.FontStyle)">
      <summary>
            Initializes a new <see cref="T:Aspose.Imaging.Font" /> using a specified size and style. The character set is set to <see cref="F:Aspose.Imaging.CharacterSet.Default" />, the graphics unit to <see cref="F:Aspose.Imaging.GraphicsUnit.Point" />.
            </summary>
      <param name="fontName">A string representation of the <see cref="T:Aspose.Imaging.Font" /> name.</param>
      <param name="emSize">The em-size, in points, of the new font.</param>
      <param name="style">The <see cref="T:Aspose.Imaging.FontStyle" /> of the new font.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="emSize" /> is less than or equal to 0, evaluates to infinity or is not a valid number.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="fontName" /> is null.</exception>
    </member>
    <member name="M:Aspose.Imaging.Font.#ctor(System.String,System.Single,Aspose.Imaging.GraphicsUnit)">
      <summary>
            Initializes a new <see cref="T:Aspose.Imaging.Font" /> using a specified size and unit. The character set is set to <see cref="F:Aspose.Imaging.CharacterSet.Default" />, the style is set to <see cref="F:Aspose.Imaging.FontStyle.Regular" />.
            </summary>
      <param name="fontName">A string representation of the <see cref="T:Aspose.Imaging.Font" /> name.</param>
      <param name="emSize">The em-size of the new font in the units specified by the <paramref name="unit" /> parameter.</param>
      <param name="unit">The <see cref="T:Aspose.Imaging.GraphicsUnit" /> of the new font.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="emSize" /> is less than or equal to 0, evaluates to infinity or is not a valid number.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="fontName" /> is null.</exception>
    </member>
    <member name="M:Aspose.Imaging.Font.#ctor(System.String,System.Single,Aspose.Imaging.FontStyle,Aspose.Imaging.GraphicsUnit,Aspose.Imaging.CharacterSet)">
      <summary>
            Initializes a new <see cref="T:Aspose.Imaging.Font" /> using a specified size, style, unit, and character set.
            </summary>
      <param name="fontName">A string representation of the <see cref="T:Aspose.Imaging.Font" /> name.</param>
      <param name="emSize">The em-size of the new font in the units specified by the <paramref name="unit" /> parameter.</param>
      <param name="style">The <see cref="T:Aspose.Imaging.FontStyle" /> of the new font.</param>
      <param name="unit">The <see cref="T:Aspose.Imaging.GraphicsUnit" /> of the new font.</param>
      <param name="characterSet">A character set to use for this font.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="emSize" /> is less than or equal to 0, evaluates to infinity or is not a valid number.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="fontName" /> is null.</exception>
    </member>
    <member name="M:Aspose.Imaging.Font.#ctor(System.String,System.Single,Aspose.Imaging.FontStyle,Aspose.Imaging.GraphicsUnit)">
      <summary>
            Initializes a new <see cref="T:Aspose.Imaging.Font" /> using a specified size, style, and unit.
            </summary>
      <param name="fontName">A string representation of the <see cref="T:Aspose.Imaging.Font" /> name.</param>
      <param name="emSize">The em-size of the new font in the units specified by the <paramref name="unit" /> parameter.</param>
      <param name="style">The <see cref="T:Aspose.Imaging.FontStyle" /> of the new font.</param>
      <param name="unit">The <see cref="T:Aspose.Imaging.GraphicsUnit" /> of the new font.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="emSize" /> is less than or equal to 0, evaluates to infinity or is not a valid number.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="fontName" /> is null.</exception>
    </member>
    <member name="M:Aspose.Imaging.Font.DeepClone">
      <summary>
            Creates an exact deep copy of this <see cref="T:Aspose.Imaging.Font" />.
            </summary>
      <returns>The <see cref="T:Aspose.Imaging.Font" /> this method creates.</returns>
    </member>
    <member name="M:Aspose.Imaging.Font.Equals(System.Object)">
      <summary>
            Indicates whether the specified object is a <see cref="T:Aspose.Imaging.Font" /> and has the same property values as this <see cref="T:Aspose.Imaging.Font" />.
            </summary>
      <param name="obj">The object to test.</param>
      <returns>True if the <paramref name="obj" /> parameter is a <see cref="T:Aspose.Imaging.Font" /> and has the same property values as this <see cref="T:Aspose.Imaging.Font" />; otherwise, false.</returns>
    </member>
    <member name="M:Aspose.Imaging.Font.GetHashCode">
      <summary>
            Gets the hash code for this <see cref="T:Aspose.Imaging.Font" />.
            </summary>
      <returns>The hash code for this <see cref="T:Aspose.Imaging.Font" />.</returns>
    </member>
    <member name="M:Aspose.Imaging.Font.ToString">
      <summary>
            Returns a human-readable string representation of this <see cref="T:Aspose.Imaging.Font" />.
            </summary>
      <returns>A string that represents this <see cref="T:Aspose.Imaging.Font" />.</returns>
    </member>
    <member name="P:Aspose.Imaging.Font.Bold">
      <summary>
            Gets a value indicating whether this <see cref="T:Aspose.Imaging.Font" /> is bold.
            </summary>
      <value>True if this <see cref="T:Aspose.Imaging.Font" /> is bold; otherwise, false.</value>
    </member>
    <member name="P:Aspose.Imaging.Font.CharacterSet">
      <summary>
            Gets a byte value that specifies the character set that this <see cref="T:Aspose.Imaging.Font" /> uses.
            </summary>
      <value>A character set that this <see cref="T:Aspose.Imaging.Font" /> uses.</value>
    </member>
    <member name="P:Aspose.Imaging.Font.Italic">
      <summary>
            Gets a value indicating whether this <see cref="T:Aspose.Imaging.Font" /> is italic.
            </summary>
      <value>True if this <see cref="T:Aspose.Imaging.Font" /> is italic; otherwise, false.</value>
    </member>
    <member name="P:Aspose.Imaging.Font.Name">
      <summary>
            Gets the face name of this <see cref="T:Aspose.Imaging.Font" />.
            </summary>
      <value>A string representation of the face name of this <see cref="T:Aspose.Imaging.Font" />.</value>
    </member>
    <member name="P:Aspose.Imaging.Font.Strikeout">
      <summary>
            Gets a value indicating whether this <see cref="T:Aspose.Imaging.Font" /> specifies a horizontal line through the font.
            </summary>
      <value>True if this <see cref="T:Aspose.Imaging.Font" /> has a horizontal line through it; otherwise, false.</value>
    </member>
    <member name="P:Aspose.Imaging.Font.Underline">
      <summary>
            Gets a value indicating whether this <see cref="T:Aspose.Imaging.Font" /> is underlined.
            </summary>
      <value>True if this <see cref="T:Aspose.Imaging.Font" /> is underlined; otherwise, false.</value>
    </member>
    <member name="P:Aspose.Imaging.Font.Style">
      <summary>
            Gets style information for this <see cref="T:Aspose.Imaging.Font" />.
            </summary>
      <value>A <see cref="T:Aspose.Imaging.FontStyle" /> enumeration that contains style information for this <see cref="T:Aspose.Imaging.Font" />.</value>
    </member>
    <member name="P:Aspose.Imaging.Font.Size">
      <summary>
            Gets the em-size of this <see cref="T:Aspose.Imaging.Font" /> measured in the units specified by the <see cref="P:Aspose.Imaging.Font.Unit" /> property.
            </summary>
      <value>The em-size of this <see cref="T:Aspose.Imaging.Font" />.</value>
    </member>
    <member name="P:Aspose.Imaging.Font.Unit">
      <summary>
            Gets the unit of measure for this <see cref="T:Aspose.Imaging.Font" />.
            </summary>
      <value>A <see cref="T:Aspose.Imaging.GraphicsUnit" /> that represents the unit of measure for this <see cref="T:Aspose.Imaging.Font" />.</value>
    </member>
    <member name="T:Aspose.Imaging.FontStyle">
      <summary>
            Specifies style information applied to text.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FontStyle.Regular">
      <summary>
            Normal text.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FontStyle.Bold">
      <summary>
            Bold text.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FontStyle.Italic">
      <summary>
            Italic text.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FontStyle.Underline">
      <summary>
            Underlined text.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FontStyle.Strikeout">
      <summary>
            Text with a line through the middle.
            </summary>
    </member>
    <member name="T:Aspose.Imaging.Graphics">
      <summary>
            Represents the graphics according to the graphics engine used in the current assembly.
            </summary>
      <example>This example uses Graphics class to create primitive shapes on the Image surface. To demonstrate the operation, the example creates a new Image in PNG format and draw primitive shapes on Image surface using Draw methods exposed by Graphics class<code>[C#]

//Create an instance of memory stream
using (MemoryStream ms = new MemoryStream())
{
    //Create an instance of PngOptions and set its various properties
    Aspose.Imaging.ImageOptions.PngOptions pngOptions = new Aspose.Imaging.ImageOptions.PngOptions();

    //Set the Source for PngOptions
    pngOptions.Source = new Aspose.Imaging.Sources.StreamSource(ms);

    //Create an instance of Image 
    using (Aspose.Imaging.Image image = Aspose.Imaging.Image.Create(pngOptions, 500, 500))
    {
        //Create and initialize an instance of Graphics class
        Aspose.Imaging.Graphics graphics = new Aspose.Imaging.Graphics(image);

        //Clear Graphics surface
        graphics.Clear(Color.Wheat);

        //Draw an Arc by specifying the Pen object having Black color, 
        //a Rectangle surrounding the Arc, Start Angle and Sweep Angle
        graphics.DrawArc(new Pen(Color.Black, 2), new Rectangle(200, 200, 100, 200), 0, 300);

        //Draw a Bezier by specifying the Pen object having Blue color and co-ordinate Points.
        graphics.DrawBezier(new Pen(Color.Blue, 2), new Point(250, 100), new Point(300, 30), new Point(450, 100), new Point(235, 25));

        //Draw a Curve by specifying the Pen object having Green color and an array of Points
        graphics.DrawCurve(new Pen(Color.Green, 2), new[] { new Point(100, 200), new Point(100, 350), new Point(200, 450) });

        //Draw an Ellipse using the Pen object and a surrounding Rectangle
        graphics.DrawEllipse(new Pen(Color.Yellow, 2), new Rectangle(300, 300, 100, 100));

        //Draw a Line 
        graphics.DrawLine(new Pen(Color.Violet, 2), new Point(100, 100), new Point(200, 200));

        //Draw a Pie segment
        graphics.DrawPie(new Pen(Color.Silver, 2), new Rectangle(new Point(200, 20), new Size(200, 200)), 0, 45);

        //Draw a Polygon by specifying the Pen object having Red color and an array of Points
        graphics.DrawPolygon(new Pen(Color.Red, 2), new[] { new Point(20, 100), new Point(20, 200), new Point(220, 20) });

        //Draw a Rectangle
        graphics.DrawRectangle(new Pen(Color.Orange, 2), new Rectangle(new Point(250, 250), new Size(100, 100)));

        //Create a SolidBrush object and set its various properties
        Aspose.Imaging.Brushes.SolidBrush brush = new Aspose.Imaging.Brushes.SolidBrush();
        brush.Color = Color.Purple;
        brush.Opacity = 100;

        //Draw a String using the SolidBrush object and Font, at specific Point
        graphics.DrawString("This image is created by Aspose.Imaging API", new Font("Times New Roman", 16), brush, new PointF(50, 400));

        // save all changes.
        image.Save();
    }
}</code><code>[Visual Basic]

'Create an instance of memory stream
Using ms As MemoryStream = New MemoryStream()
'Create an instance of PngOptions and set its various properties
Dim pngOptions As Aspose.Imaging.ImageOptions.PngOptions = New Aspose.Imaging.ImageOptions.PngOptions()

'Set the Source for PngOptions
    pngOptions.Source = New Aspose.Imaging.Sources.StreamSource(ms)

'Create an instance of Image 
    Using image As Aspose.Imaging.Image = Aspose.Imaging.Image.Create(pngOptions, 500, 500)
'Create and initialize an instance of Graphics class
Dim graphics As Aspose.Imaging.Graphics = New Aspose.Imaging.Graphics(image)

'Clear Graphics surface
        graphics.Clear(Color.Wheat)

'Draw an Arc by specifying the Pen object having Black color, 
'a Rectangle surrounding the Arc, Start Angle and Sweep Angle
        graphics.DrawArc(New Pen(Color.Black, 2), New Rectangle(200, 200, 100, 200), 0, 300)

'Draw a Bezier by specifying the Pen object having Blue color and co-ordinate Points.
        graphics.DrawBezier(New Pen(Color.Blue, 2), New Point(250, 100), New Point(300, 30), New Point(450, 100), New Point(235, 25))

'Draw a Curve by specifying the Pen object having Green color and an array of Points
        graphics.DrawCurve(New Pen(Color.Green, 2), New() { New Point(100, 200), New Point(100, 350), New Point(200, 450) })

'Draw an Ellipse using the Pen object and a surrounding Rectangle
        graphics.DrawEllipse(New Pen(Color.Yellow, 2), New Rectangle(300, 300, 100, 100))

'Draw a Line 
        graphics.DrawLine(New Pen(Color.Violet, 2), New Point(100, 100), New Point(200, 200))

'Draw a Pie segment
        graphics.DrawPie(New Pen(Color.Silver, 2), New Rectangle(New Point(200, 20), New Size(200, 200)), 0, 45)

'Draw a Polygon by specifying the Pen object having Red color and an array of Points
        graphics.DrawPolygon(New Pen(Color.Red, 2), New() { New Point(20, 100), New Point(20, 200), New Point(220, 20) })

'Draw a Rectangle
        graphics.DrawRectangle(New Pen(Color.Orange, 2), New Rectangle(New Point(250, 250), New Size(100, 100)))

'Create a SolidBrush object and set its various properties
Dim brush As Aspose.Imaging.Brushes.SolidBrush = New Aspose.Imaging.Brushes.SolidBrush()
        brush.Color = Color.Purple
        brush.Opacity = 100

'Draw a String using the SolidBrush object and Font, at specific Point
        graphics.DrawString("This image is created by Aspose.Imaging API", New Font("Times New Roman", 16), brush, New PointF(50, 400))

' save all changes.
        image.Save()
    End Using
End Using</code></example>
    </member>
    <member name="M:Aspose.Imaging.Graphics.#ctor(Aspose.Imaging.Image)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.Graphics" /> class.
            </summary>
      <param name="sourceImage">The source image.</param>
    </member>
    <member name="M:Aspose.Imaging.Graphics.ResetTransform">
      <summary>
            Resets the <see cref="P:Aspose.Imaging.Graphics.Transform" /> property to identity.
            </summary>
    </member>
    <member name="M:Aspose.Imaging.Graphics.MultiplyTransform(Aspose.Imaging.Matrix)">
      <summary>
            Multiplies the <see cref="T:Aspose.Imaging.Matrix" /> that represents the local geometric transform of this <see cref="T:Aspose.Imaging.Graphics" /> by the specified <see cref="T:Aspose.Imaging.Matrix" /> by prepending the specified <see cref="T:Aspose.Imaging.Matrix" />.
            </summary>
      <param name="matrix">The <see cref="T:Aspose.Imaging.Matrix" /> by which to multiply the geometric transform.</param>
    </member>
    <member name="M:Aspose.Imaging.Graphics.MultiplyTransform(Aspose.Imaging.Matrix,Aspose.Imaging.MatrixOrder)">
      <summary>
            Multiplies the <see cref="T:Aspose.Imaging.Matrix" /> that represents the local geometric transform of this <see cref="T:Aspose.Imaging.Graphics" /> by the specified <see cref="T:Aspose.Imaging.Matrix" /> in the specified order.
            </summary>
      <param name="matrix">The <see cref="T:Aspose.Imaging.Matrix" /> by which to multiply the geometric transform.</param>
      <param name="order">A <see cref="T:Aspose.Imaging.MatrixOrder" /> that specifies in which order to multiply the two matrices.</param>
    </member>
    <member name="M:Aspose.Imaging.Graphics.TranslateTransform(System.Single,System.Single)">
      <summary>
            Translates the local geometric transform by the specified dimensions. This method prepends the translation to the transform.
            </summary>
      <param name="dx">The value of the translation in x.</param>
      <param name="dy">The value of the translation in y.</param>
    </member>
    <member name="M:Aspose.Imaging.Graphics.TranslateTransform(System.Single,System.Single,Aspose.Imaging.MatrixOrder)">
      <summary>
            Translates the local geometric transform by the specified dimensions in the specified order.
            </summary>
      <param name="dx">The value of the translation in x.</param>
      <param name="dy">The value of the translation in y.</param>
      <param name="order">The order (prepend or append) in which to apply the translation.</param>
    </member>
    <member name="M:Aspose.Imaging.Graphics.ScaleTransform(System.Single,System.Single)">
      <summary>
            Scales the local geometric transform by the specified amounts. This method prepends the scaling matrix to the transform.
            </summary>
      <param name="sx">The amount by which to scale the transform in the x-axis direction.</param>
      <param name="sy">The amount by which to scale the transform in the y-axis direction.</param>
    </member>
    <member name="M:Aspose.Imaging.Graphics.ScaleTransform(System.Single,System.Single,Aspose.Imaging.MatrixOrder)">
      <summary>
            Scales the local geometric transform by the specified amounts in the specified order.
            </summary>
      <param name="sx">The amount by which to scale the transform in the x-axis direction.</param>
      <param name="sy">The amount by which to scale the transform in the y-axis direction.</param>
      <param name="order">A <see cref="T:Aspose.Imaging.MatrixOrder" /> that specifies whether to append or prepend the scaling matrix.</param>
    </member>
    <member name="M:Aspose.Imaging.Graphics.RotateTransform(System.Single)">
      <summary>
            Rotates the local geometric transform by the specified amount. This method prepends the rotation to the transform.
            </summary>
      <param name="angle">The angle of rotation.</param>
    </member>
    <member name="M:Aspose.Imaging.Graphics.RotateTransform(System.Single,Aspose.Imaging.MatrixOrder)">
      <summary>
            Rotates the local geometric transform by the specified amount in the specified order.
            </summary>
      <param name="angle">The angle of rotation.</param>
      <param name="order">A <see cref="T:Aspose.Imaging.MatrixOrder" /> that specifies whether to append or prepend the rotation matrix.</param>
    </member>
    <member name="M:Aspose.Imaging.Graphics.BeginUpdate">
      <summary>
            Starts caching of the following graphics operations. The graphics effects applied afterwards will not be applied immediately instead the EndUpdate will cause applying all the effects at once.
            </summary>
      <remarks>Note the effects after BeginUpdate is called will not be applied in case EndUpdate is not called.</remarks>
    </member>
    <member name="M:Aspose.Imaging.Graphics.EndUpdate">
      <summary>
            Finishes caching of the graphics operations started after BeginUpdate was called. The preceding graphics operations will be applied at once when calling this method.
            </summary>
    </member>
    <member name="M:Aspose.Imaging.Graphics.Clear(Aspose.Imaging.Color)">
      <summary>
            Clears the graphics surface using the specified color.
            </summary>
      <param name="color">The color to clear the graphics surface by.</param>
    </member>
    <member name="M:Aspose.Imaging.Graphics.DrawLine(Aspose.Imaging.Pen,Aspose.Imaging.Point,Aspose.Imaging.Point)">
      <summary>
            Draws a line connecting two <see cref="T:Aspose.Imaging.Point" /> structures.
            </summary>
      <param name="pen">
        <see cref="T:Aspose.Imaging.Pen" /> that determines the color, width, and style of the line.</param>
      <param name="point1">
        <see cref="T:Aspose.Imaging.Point" /> structure that represents the first point to connect.</param>
      <param name="point2">
        <see cref="T:Aspose.Imaging.Point" /> structure that represents the second point to connect.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" /> is null.</exception>
    </member>
    <member name="M:Aspose.Imaging.Graphics.DrawLine(Aspose.Imaging.Pen,Aspose.Imaging.PointF,Aspose.Imaging.PointF)">
      <summary>
            Draws a line connecting two <see cref="T:Aspose.Imaging.PointF" /> structures.
            </summary>
      <param name="pen">
        <see cref="T:Aspose.Imaging.Pen" /> that determines the color, width, and style of the line.</param>
      <param name="point1">
        <see cref="T:Aspose.Imaging.PointF" /> structure that represents the first point to connect.</param>
      <param name="point2">
        <see cref="T:Aspose.Imaging.PointF" /> structure that represents the second point to connect.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" /> is null.</exception>
    </member>
    <member name="M:Aspose.Imaging.Graphics.DrawLine(Aspose.Imaging.Pen,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Draws a line connecting the two points specified by the coordinate pairs.
            </summary>
      <param name="pen">
        <see cref="T:Aspose.Imaging.Pen" /> that determines the color, width, and style of the line.</param>
      <param name="x1">The x-coordinate of the first point.</param>
      <param name="y1">The y-coordinate of the first point.</param>
      <param name="x2">The x-coordinate of the second point.</param>
      <param name="y2">The y-coordinate of the second point.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" /> is null.</exception>
    </member>
    <member name="M:Aspose.Imaging.Graphics.DrawLine(Aspose.Imaging.Pen,System.Single,System.Single,System.Single,System.Single)">
      <summary>
            Draws a line connecting the two points specified by the coordinate pairs.
            </summary>
      <param name="pen">
        <see cref="T:Aspose.Imaging.Pen" /> that determines the color, width, and style of the line.</param>
      <param name="x1">The x-coordinate of the first point.</param>
      <param name="y1">The y-coordinate of the first point.</param>
      <param name="x2">The x-coordinate of the second point.</param>
      <param name="y2">The y-coordinate of the second point.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" /> is null.</exception>
    </member>
    <member name="M:Aspose.Imaging.Graphics.DrawLines(Aspose.Imaging.Pen,Aspose.Imaging.Point[])">
      <summary>
            Draws a series of line segments that connect an array of <see cref="T:Aspose.Imaging.Point" /> structures.
            </summary>
      <param name="pen">
        <see cref="T:Aspose.Imaging.Pen" /> that determines the color, width, and style of the line segments.</param>
      <param name="points">Array of <see cref="T:Aspose.Imaging.Point" /> structures that represent the points to connect.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" /> is null.
            -or-
            <paramref name="points" /> is null.</exception>
      <exception cref="T:System.ArgumentException">The <paramref name="points" /> array contains less than 2 points.</exception>
    </member>
    <member name="M:Aspose.Imaging.Graphics.DrawLines(Aspose.Imaging.Pen,Aspose.Imaging.PointF[])">
      <summary>
            Draws a series of line segments that connect an array of <see cref="T:Aspose.Imaging.PointF" /> structures.
            </summary>
      <param name="pen">
        <see cref="T:Aspose.Imaging.Pen" /> that determines the color, width, and style of the line segments.</param>
      <param name="points">Array of <see cref="T:Aspose.Imaging.PointF" /> structures that represent the points to connect.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" /> is null.
            -or-
            <paramref name="points" /> is null.</exception>
      <exception cref="T:System.ArgumentException">The <paramref name="points" /> array contains less than 2 points.</exception>
    </member>
    <member name="M:Aspose.Imaging.Graphics.FillRectangle(Aspose.Imaging.Brush,Aspose.Imaging.Rectangle)">
      <summary>
            Fills the interior of a rectangle specified by a <see cref="T:Aspose.Imaging.Rectangle" /> structure.
            </summary>
      <param name="brush">
        <see cref="T:Aspose.Imaging.Brush" /> that determines the characteristics of the fill.</param>
      <param name="rect">
        <see cref="T:Aspose.Imaging.Rectangle" /> structure that represents the rectangle to fill.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="brush" /> is null.</exception>
    </member>
    <member name="M:Aspose.Imaging.Graphics.FillRectangle(Aspose.Imaging.Brush,Aspose.Imaging.RectangleF)">
      <summary>
            Fills the interior of a rectangle specified by a <see cref="T:Aspose.Imaging.RectangleF" /> structure.
            </summary>
      <param name="brush">
        <see cref="T:Aspose.Imaging.Brush" /> that determines the characteristics of the fill.</param>
      <param name="rect">
        <see cref="T:Aspose.Imaging.RectangleF" /> structure that represents the rectangle to fill.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="brush" /> is null.</exception>
    </member>
    <member name="M:Aspose.Imaging.Graphics.FillRectangle(Aspose.Imaging.Brush,System.Single,System.Single,System.Single,System.Single)">
      <summary>
            Fills the interior of a rectangle specified by a pair of coordinates, a width and a height.
            </summary>
      <param name="brush">
        <see cref="T:Aspose.Imaging.Brush" /> that determines the characteristics of the fill.</param>
      <param name="x">The x-coordinate of the upper-left corner of the rectangle to fill.</param>
      <param name="y">The y-coordinate of the upper-left corner of the rectangle to fill.</param>
      <param name="width">Width of the rectangle to fill.</param>
      <param name="height">Height of the rectangle to fill.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="brush" /> is null.</exception>
    </member>
    <member name="M:Aspose.Imaging.Graphics.FillRectangle(Aspose.Imaging.Brush,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Fills the interior of a rectangle specified by a pair of coordinates, a width and a height.
            </summary>
      <param name="brush">
        <see cref="T:Aspose.Imaging.Brush" /> that determines the characteristics of the fill.</param>
      <param name="x">The x-coordinate of the upper-left corner of the rectangle to fill.</param>
      <param name="y">The y-coordinate of the upper-left corner of the rectangle to fill.</param>
      <param name="width">Width of the rectangle to fill.</param>
      <param name="height">Height of the rectangle to fill.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="brush" /> is null.</exception>
    </member>
    <member name="M:Aspose.Imaging.Graphics.FillRectangles(Aspose.Imaging.Brush,Aspose.Imaging.Rectangle[])">
      <summary>
            Fills the interiors of a series of rectangles specified by <see cref="T:Aspose.Imaging.Rectangle" /> structures.
            </summary>
      <param name="brush">
        <see cref="T:Aspose.Imaging.Brush" /> that determines the characteristics of the fill.</param>
      <param name="rects">Array of <see cref="T:Aspose.Imaging.Rectangle" /> structures that represent the rectangles to fill.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="brush" /> is null or <paramref name="rects" /> is null.</exception>
    </member>
    <member name="M:Aspose.Imaging.Graphics.FillRectangles(Aspose.Imaging.Brush,Aspose.Imaging.RectangleF[])">
      <summary>
            Fills the interiors of a series of rectangles specified by <see cref="T:Aspose.Imaging.RectangleF" /> structures.
            </summary>
      <param name="brush">
        <see cref="T:Aspose.Imaging.Brush" /> that determines the characteristics of the fill.</param>
      <param name="rects">Array of <see cref="T:Aspose.Imaging.Rectangle" /> structures that represent the rectangles to fill.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="brush" /> is null or <paramref name="rects" /> is null.</exception>
    </member>
    <member name="M:Aspose.Imaging.Graphics.DrawRectangle(Aspose.Imaging.Pen,Aspose.Imaging.RectangleF)">
      <summary>
            Draws a rectangle specified by a <see cref="T:Aspose.Imaging.RectangleF" /> structure.
            </summary>
      <param name="pen">A <see cref="T:Aspose.Imaging.Pen" /> that determines the color, width, and style of the rectangle.</param>
      <param name="rect">A <see cref="T:Aspose.Imaging.RectangleF" /> structure that represents the rectangle to draw.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" /> is null.</exception>
    </member>
    <member name="M:Aspose.Imaging.Graphics.DrawRectangle(Aspose.Imaging.Pen,Aspose.Imaging.Rectangle)">
      <summary>
            Draws a rectangle specified by a <see cref="T:Aspose.Imaging.Rectangle" /> structure.
            </summary>
      <param name="pen">A <see cref="T:Aspose.Imaging.Pen" /> that determines the color, width, and style of the rectangle.</param>
      <param name="rect">A <see cref="T:Aspose.Imaging.Rectangle" /> structure that represents the rectangle to draw.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" /> is null.</exception>
    </member>
    <member name="M:Aspose.Imaging.Graphics.DrawRectangle(Aspose.Imaging.Pen,System.Single,System.Single,System.Single,System.Single)">
      <summary>
            Draws a rectangle specified by a coordinate pair, a width, and a height.
            </summary>
      <param name="pen">A <see cref="T:Aspose.Imaging.Pen" /> that determines the color, width, and style of the rectangle.</param>
      <param name="x">The x-coordinate of the upper-left corner of the rectangle to draw.</param>
      <param name="y">The y-coordinate of the upper-left corner of the rectangle to draw.</param>
      <param name="width">The width of the rectangle to draw.</param>
      <param name="height">The height of the rectangle to draw.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" /> is null.</exception>
    </member>
    <member name="M:Aspose.Imaging.Graphics.DrawRectangle(Aspose.Imaging.Pen,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Draws a rectangle specified by a coordinate pair, a width, and a height.
            </summary>
      <param name="pen">
        <see cref="T:Aspose.Imaging.Pen" /> that determines the color, width, and style of the rectangle.</param>
      <param name="x">The x-coordinate of the upper-left corner of the rectangle to draw.</param>
      <param name="y">The y-coordinate of the upper-left corner of the rectangle to draw.</param>
      <param name="width">Width of the rectangle to draw.</param>
      <param name="height">Height of the rectangle to draw.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" /> is null.</exception>
    </member>
    <member name="M:Aspose.Imaging.Graphics.DrawRectangles(Aspose.Imaging.Pen,Aspose.Imaging.RectangleF[])">
      <summary>
            Draws a series of rectangles specified by <see cref="T:Aspose.Imaging.RectangleF" /> structures.
            </summary>
      <param name="pen">
        <see cref="T:Aspose.Imaging.Pen" /> that determines the color, width, and style of the outlines of the rectangles.</param>
      <param name="rects">Array of <see cref="T:Aspose.Imaging.RectangleF" /> structures that represent the rectangles to draw.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" /> is null.
            -or-
            <paramref name="rects" /> is null.</exception>
    </member>
    <member name="M:Aspose.Imaging.Graphics.DrawRectangles(Aspose.Imaging.Pen,Aspose.Imaging.Rectangle[])">
      <summary>
            Draws a series of rectangles specified by <see cref="T:Aspose.Imaging.Rectangle" /> structures.
            </summary>
      <param name="pen">
        <see cref="T:Aspose.Imaging.Pen" /> that determines the color, width, and style of the outlines of the rectangles.</param>
      <param name="rects">Array of <see cref="T:Aspose.Imaging.Rectangle" /> structures that represent the rectangles to draw.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" /> is null.
            -or-
            <paramref name="rects" /> is null.</exception>
      <example>This example shows the creation and usage Pen objects. The example creates a new Image and draw Rectangles on Image surface.<code>[C#]

//Create an instance of BmpOptions and set its various properties
Aspose.Imaging.ImageOptions.BmpOptions bmpOptions = new Aspose.Imaging.ImageOptions.BmpOptions();
bmpOptions.BitsPerPixel = 24;
    
// create a new source based on memory stream.
bmpOptions.Source = new Aspose.Imaging.Sources.StreamSource(new System.IO.MemoryStream(), true);

//Create an instance of Image
using (Aspose.Imaging.Image image = Aspose.Imaging.Image.Create(bmpOptions, 500, 500))
{
    //Create an instance of Graphics and initialize it with Image object
    Aspose.Imaging.Graphics graphics = new Aspose.Imaging.Graphics(image);

    //Clear the Graphics sutface with White Color
    graphics.Clear(Aspose.Imaging.Color.White);

    //Create an instance of Pen with color Red and width 5
    Aspose.Imaging.Pen pen = new Pen(Aspose.Imaging.Color.Red, 5);

    //Create an instance of HatchBrush and set its properties
    Aspose.Imaging.Brushes.HatchBrush brush = new HatchBrush();
    brush.BackgroundColor = Color.Wheat;
    brush.ForegroundColor = Color.Red;

    //Create an instance of Pen
    //initialize it with HatchBrush object and width
    Aspose.Imaging.Pen brusedpen = new Pen(brush, 5);

    //Draw Rectangles by specifying Pen object
    graphics.DrawRectangles(pen, new[] { new Rectangle(new Point(210, 210), new Size(100, 100)), new Rectangle(new Point(110, 110), new Size(100, 100)), new Rectangle(new Point(310, 310), new Size(100, 100)) });

    //Draw Rectangles by specifying Pen object
    graphics.DrawRectangles(brusedpen, new[] { new Rectangle(new Point(310, 110), new Size(100, 100)), new Rectangle(new Point(110, 310), new Size(100, 100)) });

    // save all changes.
    image.Save();
}</code><code>[Visual Basic]

'Create an instance of BmpOptions and set its various properties
Dim bmpOptions As Aspose.Imaging.ImageOptions.BmpOptions = New Aspose.Imaging.ImageOptions.BmpOptions()
bmpOptions.BitsPerPixel = 24

' create a new source based on memory stream.
bmpOptions.Source = New Aspose.Imaging.Sources.StreamSource(New System.IO.MemoryStream(), True)

'Create an instance of Image
Using image As Aspose.Imaging.Image = Aspose.Imaging.Image.Create(bmpOptions, 500, 500)
'Create an instance of Graphics and initialize it with Image object
Dim graphics As Aspose.Imaging.Graphics = New Aspose.Imaging.Graphics(image)

'Clear the Graphics sutface with White Color
    graphics.Clear(Aspose.Imaging.Color.White)

'Create an instance of Pen with color Red and width 5
Dim pen As Aspose.Imaging.Pen = New Pen(Aspose.Imaging.Color.Red, 5)

'Create an instance of HatchBrush and set its properties
Dim brush As Aspose.Imaging.Brushes.HatchBrush = New HatchBrush()
    brush.BackgroundColor = Color.Wheat
    brush.ForegroundColor = Color.Red

'Create an instance of Pen
'initialize it with HatchBrush object and width
Dim brusedpen As Aspose.Imaging.Pen = New Pen(brush, 5)

'Draw Rectangles by specifying Pen object
    graphics.DrawRectangles(pen, New() { New Rectangle(New Point(210, 210), New Size(100, 100)), New Rectangle(New Point(110, 110), New Size(100, 100)), New Rectangle(New Point(310, 310), New Size(100, 100)) })

'Draw Rectangles by specifying Pen object
    graphics.DrawRectangles(brusedpen, New() { New Rectangle(New Point(310, 110), New Size(100, 100)), New Rectangle(New Point(110, 310), New Size(100, 100)) })

' save all changes.
    image.Save()
End Using</code></example>
    </member>
    <member name="M:Aspose.Imaging.Graphics.DrawEllipse(Aspose.Imaging.Pen,Aspose.Imaging.RectangleF)">
      <summary>
            Draws an ellipse defined by a bounding <see cref="T:Aspose.Imaging.RectangleF" />.
            </summary>
      <param name="pen">
        <see cref="T:Aspose.Imaging.Pen" /> that determines the color, width, and style of the ellipse.</param>
      <param name="rect">
        <see cref="T:Aspose.Imaging.RectangleF" /> structure that defines the boundaries of the ellipse.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" /> is null.</exception>
    </member>
    <member name="M:Aspose.Imaging.Graphics.DrawEllipse(Aspose.Imaging.Pen,System.Single,System.Single,System.Single,System.Single)">
      <summary>
            Draws an ellipse defined by a bounding rectangle specified by a pair of coordinates, a height, and a width.
            </summary>
      <param name="pen">
        <see cref="T:Aspose.Imaging.Pen" /> that determines the color, width, and style of the ellipse.</param>
      <param name="x">The x-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse.</param>
      <param name="y">The y-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse.</param>
      <param name="width">Width of the bounding rectangle that defines the ellipse.</param>
      <param name="height">Height of the bounding rectangle that defines the ellipse.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" /> is null.</exception>
    </member>
    <member name="M:Aspose.Imaging.Graphics.DrawEllipse(Aspose.Imaging.Pen,Aspose.Imaging.Rectangle)">
      <summary>
            Draws an ellipse specified by a bounding <see cref="T:Aspose.Imaging.Rectangle" /> structure.
            </summary>
      <param name="pen">
        <see cref="T:Aspose.Imaging.Pen" /> that determines the color, width, and style of the ellipse.</param>
      <param name="rect">
        <see cref="T:Aspose.Imaging.Rectangle" /> structure that defines the boundaries of the ellipse.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" /> is null.</exception>
    </member>
    <member name="M:Aspose.Imaging.Graphics.DrawEllipse(Aspose.Imaging.Pen,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Draws an ellipse defined by a bounding rectangle specified by a pair of coordinates, a height, and a width.
            </summary>
      <param name="pen">
        <see cref="T:Aspose.Imaging.Pen" /> that determines the color, width, and style of the ellipse.</param>
      <param name="x">The x-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse.</param>
      <param name="y">The y-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse.</param>
      <param name="width">Width of the bounding rectangle that defines the ellipse.</param>
      <param name="height">Height of the bounding rectangle that defines the ellipse.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" /> is null.</exception>
    </member>
    <member name="M:Aspose.Imaging.Graphics.DrawPolygon(Aspose.Imaging.Pen,Aspose.Imaging.PointF[])">
      <summary>
            Draws a polygon defined by an array of <see cref="T:Aspose.Imaging.PointF" /> structures.
            </summary>
      <param name="pen">
        <see cref="T:Aspose.Imaging.Pen" /> that determines the color, width, and style of the polygon.</param>
      <param name="points">Array of <see cref="T:Aspose.Imaging.PointF" /> structures that represent the vertices of the polygon.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" /> is null.
            -or-
            <paramref name="points" /> is null.</exception>
    </member>
    <member name="M:Aspose.Imaging.Graphics.DrawPolygon(Aspose.Imaging.Pen,Aspose.Imaging.Point[])">
      <summary>
            Draws a polygon defined by an array of <see cref="T:Aspose.Imaging.Point" /> structures.
            </summary>
      <param name="pen">
        <see cref="T:Aspose.Imaging.Pen" /> that determines the color, width, and style of the polygon.</param>
      <param name="points">Array of <see cref="T:Aspose.Imaging.Point" /> structures that represent the vertices of the polygon.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" /> is null.</exception>
    </member>
    <member name="M:Aspose.Imaging.Graphics.DrawImage(Aspose.Imaging.Image,Aspose.Imaging.PointF)">
      <summary>
            Draws the specified <see cref="P:Aspose.Imaging.Graphics.Image" />, using its original physical size, at the specified location.
            </summary>
      <param name="sourceImage">The image to draw with.</param>
      <param name="point">
        <see cref="T:Aspose.Imaging.PointF" /> structure that represents the upper-left corner of the drawn image.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="sourceImage" /> is null.</exception>
    </member>
    <member name="M:Aspose.Imaging.Graphics.DrawImage(Aspose.Imaging.Image,System.Single,System.Single)">
      <summary>
            Draws the specified <see cref="P:Aspose.Imaging.Graphics.Image" />, using its original physical size, at the specified location.
            </summary>
      <param name="sourceImage">The image to draw with.</param>
      <param name="x">The x-coordinate of the upper-left corner of the drawn image.</param>
      <param name="y">The y-coordinate of the upper-left corner of the drawn image.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="sourceImage" /> is null.</exception>
    </member>
    <member name="M:Aspose.Imaging.Graphics.DrawImage(Aspose.Imaging.Image,Aspose.Imaging.RectangleF)">
      <summary>
            Draws the specified <see cref="P:Aspose.Imaging.Graphics.Image" /> at the specified location and with the specified size.
            </summary>
      <param name="sourceImage">The image to draw with.</param>
      <param name="rect">
        <see cref="T:Aspose.Imaging.RectangleF" /> structure that specifies the location and size of the drawn image.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="sourceImage" /> is null.</exception>
    </member>
    <member name="M:Aspose.Imaging.Graphics.DrawImage(Aspose.Imaging.Image,System.Single,System.Single,System.Single,System.Single)">
      <summary>
            Draws the specified <see cref="P:Aspose.Imaging.Graphics.Image" /> at the specified location and with the specified size.
            </summary>
      <param name="sourceImage">The image to draw with.</param>
      <param name="x">The x-coordinate of the upper-left corner of the drawn image.</param>
      <param name="y">The y-coordinate of the upper-left corner of the drawn image.</param>
      <param name="width">Width of the drawn image.</param>
      <param name="height">Height of the drawn image.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="sourceImage" /> is null.</exception>
    </member>
    <member name="M:Aspose.Imaging.Graphics.DrawImage(Aspose.Imaging.Image,Aspose.Imaging.Point)">
      <summary>
            Draws the specified <see cref="P:Aspose.Imaging.Graphics.Image" />, using its original physical size, at the specified location.
            </summary>
      <param name="sourceImage">The image to draw with.</param>
      <param name="point">
        <see cref="T:Aspose.Imaging.Point" /> structure that represents the location of the upper-left corner of the drawn image.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="sourceImage" /> is null.</exception>
    </member>
    <member name="M:Aspose.Imaging.Graphics.DrawImage(Aspose.Imaging.Image,System.Int32,System.Int32)">
      <summary>
            Draws the specified image, using its original physical size, at the location specified by a coordinate pair.
            </summary>
      <param name="sourceImage">The image to draw with.</param>
      <param name="x">The x-coordinate of the upper-left corner of the drawn image.</param>
      <param name="y">The y-coordinate of the upper-left corner of the drawn image.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="sourceImage" /> is null.</exception>
    </member>
    <member name="M:Aspose.Imaging.Graphics.DrawImage(Aspose.Imaging.Image,Aspose.Imaging.Rectangle)">
      <summary>
            Draws the specified <see cref="P:Aspose.Imaging.Graphics.Image" /> at the specified location and with the specified size.
            </summary>
      <param name="sourceImage">The image to draw with.</param>
      <param name="rect">
        <see cref="T:Aspose.Imaging.Rectangle" /> structure that specifies the location and size of the drawn image.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="sourceImage" /> is null.</exception>
    </member>
    <member name="M:Aspose.Imaging.Graphics.DrawImage(Aspose.Imaging.Image,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Draws the specified <see cref="P:Aspose.Imaging.Graphics.Image" /> at the specified location and with the specified size.
            </summary>
      <param name="sourceImage">The image to draw with.</param>
      <param name="x">The x-coordinate of the upper-left corner of the drawn image.</param>
      <param name="y">The y-coordinate of the upper-left corner of the drawn image.</param>
      <param name="width">Width of the drawn image.</param>
      <param name="height">Height of the drawn image.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="sourceImage" /> is null.</exception>
    </member>
    <member name="M:Aspose.Imaging.Graphics.DrawImageUnscaled(Aspose.Imaging.Image,Aspose.Imaging.Point)">
      <summary>
            Draws a specified image using its original physical size at a specified location.
            </summary>
      <param name="sourceImage">The image to draw with.</param>
      <param name="point">
        <see cref="T:Aspose.Imaging.Point" /> structure that specifies the upper-left corner of the drawn image.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="sourceImage" /> is null.</exception>
    </member>
    <member name="M:Aspose.Imaging.Graphics.DrawImageUnscaled(Aspose.Imaging.Image,System.Int32,System.Int32)">
      <summary>
            Draws the specified image using its original physical size at the location specified by a coordinate pair.
            </summary>
      <param name="sourceImage">The image to draw with.</param>
      <param name="x">The x-coordinate of the upper-left corner of the drawn image.</param>
      <param name="y">The y-coordinate of the upper-left corner of the drawn image.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="sourceImage" /> is null.</exception>
    </member>
    <member name="M:Aspose.Imaging.Graphics.DrawImageUnscaled(Aspose.Imaging.Image,Aspose.Imaging.Rectangle)">
      <summary>
            Draws a specified image using its original physical size at a specified location.
            </summary>
      <param name="sourceImage">The image to draw with.</param>
      <param name="rect">
        <see cref="T:Aspose.Imaging.Rectangle" /> that specifies the upper-left corner of the drawn image. The X and Y properties of the rectangle specify the upper-left corner. The Width and Height properties are ignored.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="sourceImage" /> is null.</exception>
    </member>
    <member name="M:Aspose.Imaging.Graphics.DrawImageUnscaled(Aspose.Imaging.Image,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Draws a specified image using its original physical size at a specified location.
            </summary>
      <param name="sourceImage">The image to draw with.</param>
      <param name="x">The x-coordinate of the upper-left corner of the drawn image.</param>
      <param name="y">The y-coordinate of the upper-left corner of the drawn image.</param>
      <param name="width">The parameter is not used.</param>
      <param name="height">The parameter is not used.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="sourceImage" /> is null.</exception>
    </member>
    <member name="M:Aspose.Imaging.Graphics.DrawImageUnscaledAndClipped(Aspose.Imaging.Image,Aspose.Imaging.Rectangle)">
      <summary>
            Draws the specified image without scaling and clips it, if necessary, to fit in the specified rectangle.
            </summary>
      <param name="sourceImage">The image to draw with.</param>
      <param name="rect">The <see cref="T:Aspose.Imaging.Rectangle" /> in which to draw the image.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="sourceImage" /> is null.</exception>
    </member>
    <member name="M:Aspose.Imaging.Graphics.DrawArc(Aspose.Imaging.Pen,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
      <summary>
            Draws an arc representing a portion of an ellipse specified by a pair of coordinates, a width, and a height.
            </summary>
      <param name="pen">
        <see cref="T:Aspose.Imaging.Pen" /> that determines the color, width, and style of the arc.</param>
      <param name="x">The x-coordinate of the upper-left corner of the rectangle that defines the ellipse.</param>
      <param name="y">The y-coordinate of the upper-left corner of the rectangle that defines the ellipse.</param>
      <param name="width">Width of the rectangle that defines the ellipse.</param>
      <param name="height">Height of the rectangle that defines the ellipse.</param>
      <param name="startAngle">Angle in degrees measured clockwise from the x-axis to the starting point of the arc.</param>
      <param name="sweepAngle">Angle in degrees measured clockwise from the <paramref name="startAngle" /> parameter to ending point of the arc.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" /> is null.</exception>
    </member>
    <member name="M:Aspose.Imaging.Graphics.DrawArc(Aspose.Imaging.Pen,Aspose.Imaging.RectangleF,System.Single,System.Single)">
      <summary>
            Draws an arc representing a portion of an ellipse specified by a <see cref="T:Aspose.Imaging.RectangleF" /> structure.
            </summary>
      <param name="pen">
        <see cref="T:Aspose.Imaging.Pen" /> that determines the color, width, and style of the arc.</param>
      <param name="rect">
        <see cref="T:Aspose.Imaging.RectangleF" /> structure that defines the boundaries of the ellipse.</param>
      <param name="startAngle">Angle in degrees measured clockwise from the x-axis to the starting point of the arc.</param>
      <param name="sweepAngle">Angle in degrees measured clockwise from the <paramref name="startAngle" /> parameter to ending point of the arc.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" /> is null</exception>
    </member>
    <member name="M:Aspose.Imaging.Graphics.DrawArc(Aspose.Imaging.Pen,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Draws an arc representing a portion of an ellipse specified by a pair of coordinates, a width, and a height.
            </summary>
      <param name="pen">
        <see cref="T:Aspose.Imaging.Pen" /> that determines the color, width, and style of the arc.</param>
      <param name="x">The x-coordinate of the upper-left corner of the rectangle that defines the ellipse.</param>
      <param name="y">The y-coordinate of the upper-left corner of the rectangle that defines the ellipse.</param>
      <param name="width">Width of the rectangle that defines the ellipse.</param>
      <param name="height">Height of the rectangle that defines the ellipse.</param>
      <param name="startAngle">Angle in degrees measured clockwise from the x-axis to the starting point of the arc.</param>
      <param name="sweepAngle">Angle in degrees measured clockwise from the <paramref name="startAngle" /> parameter to ending point of the arc.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" /> is null.</exception>
    </member>
    <member name="M:Aspose.Imaging.Graphics.DrawArc(Aspose.Imaging.Pen,Aspose.Imaging.Rectangle,System.Single,System.Single)">
      <summary>
            Draws an arc representing a portion of an ellipse specified by a <see cref="T:Aspose.Imaging.Rectangle" /> structure.
            </summary>
      <param name="pen">
        <see cref="T:Aspose.Imaging.Pen" /> that determines the color, width, and style of the arc.</param>
      <param name="rect">
        <see cref="T:Aspose.Imaging.RectangleF" /> structure that defines the boundaries of the ellipse.</param>
      <param name="startAngle">Angle in degrees measured clockwise from the x-axis to the starting point of the arc.</param>
      <param name="sweepAngle">Angle in degrees measured clockwise from the <paramref name="startAngle" /> parameter to ending point of the arc.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" /> is null.</exception>
    </member>
    <member name="M:Aspose.Imaging.Graphics.DrawPie(Aspose.Imaging.Pen,Aspose.Imaging.RectangleF,System.Single,System.Single)">
      <summary>
            Draws a pie shape defined by an ellipse specified by a <see cref="T:Aspose.Imaging.RectangleF" /> structure and two radial lines.
            </summary>
      <param name="pen">
        <see cref="T:Aspose.Imaging.Pen" /> that determines the color, width, and style of the pie shape.</param>
      <param name="rect">
        <see cref="T:Aspose.Imaging.RectangleF" /> structure that represents the bounding rectangle that defines the ellipse from which the pie shape comes.</param>
      <param name="startAngle">Angle measured in degrees clockwise from the x-axis to the first side of the pie shape.</param>
      <param name="sweepAngle">Angle measured in degrees clockwise from the <paramref name="startAngle" /> parameter to the second side of the pie shape.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" /> is null.</exception>
    </member>
    <member name="M:Aspose.Imaging.Graphics.DrawPie(Aspose.Imaging.Pen,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
      <summary>
            Draws a pie shape defined by an ellipse specified by a coordinate pair, a width, a height, and two radial lines.
            </summary>
      <param name="pen">
        <see cref="T:Aspose.Imaging.Pen" /> that determines the color, width, and style of the pie shape.</param>
      <param name="x">The x-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse from which the pie shape comes.</param>
      <param name="y">The y-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse from which the pie shape comes.</param>
      <param name="width">Width of the bounding rectangle that defines the ellipse from which the pie shape comes.</param>
      <param name="height">Height of the bounding rectangle that defines the ellipse from which the pie shape comes.</param>
      <param name="startAngle">Angle measured in degrees clockwise from the x-axis to the first side of the pie shape.</param>
      <param name="sweepAngle">Angle measured in degrees clockwise from the <paramref name="startAngle" /> parameter to the second side of the pie shape.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" /> is null.</exception>
    </member>
    <member name="M:Aspose.Imaging.Graphics.DrawPie(Aspose.Imaging.Pen,Aspose.Imaging.Rectangle,System.Single,System.Single)">
      <summary>
            Draws a pie shape defined by an ellipse specified by a <see cref="T:Aspose.Imaging.Rectangle" /> structure and two radial lines.
            </summary>
      <param name="pen">
        <see cref="T:Aspose.Imaging.Pen" /> that determines the color, width, and style of the pie shape.</param>
      <param name="rect">
        <see cref="T:Aspose.Imaging.Rectangle" /> structure that represents the bounding rectangle that defines the ellipse from which the pie shape comes.</param>
      <param name="startAngle">Angle measured in degrees clockwise from the x-axis to the first side of the pie shape.</param>
      <param name="sweepAngle">Angle measured in degrees clockwise from the <paramref name="startAngle" /> parameter to the second side of the pie shape.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" /> is null.</exception>
    </member>
    <member name="M:Aspose.Imaging.Graphics.DrawPie(Aspose.Imaging.Pen,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Draws a pie shape defined by an ellipse specified by a coordinate pair, a width, a height, and two radial lines.
            </summary>
      <param name="pen">
        <see cref="T:Aspose.Imaging.Pen" /> that determines the color, width, and style of the pie shape.</param>
      <param name="x">The x-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse from which the pie shape comes.</param>
      <param name="y">The y-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse from which the pie shape comes.</param>
      <param name="width">Width of the bounding rectangle that defines the ellipse from which the pie shape comes.</param>
      <param name="height">Height of the bounding rectangle that defines the ellipse from which the pie shape comes.</param>
      <param name="startAngle">Angle measured in degrees clockwise from the x-axis to the first side of the pie shape.</param>
      <param name="sweepAngle">Angle measured in degrees clockwise from the <paramref name="startAngle" /> parameter to the second side of the pie shape.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" /> is null.</exception>
    </member>
    <member name="M:Aspose.Imaging.Graphics.DrawCurve(Aspose.Imaging.Pen,Aspose.Imaging.PointF[])">
      <summary>
            Draws a cardinal spline through a specified array of <see cref="T:Aspose.Imaging.PointF" /> structures. This method uses a default tension of 0.5.
            </summary>
      <param name="pen">
        <see cref="T:Aspose.Imaging.Pen" /> that determines the color, width, and height of the curve.</param>
      <param name="points">Array of <see cref="T:Aspose.Imaging.PointF" /> structures that define the spline.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" /> is null.
            -or-
            <paramref name="points" /> is null.</exception>
    </member>
    <member name="M:Aspose.Imaging.Graphics.DrawCurve(Aspose.Imaging.Pen,Aspose.Imaging.PointF[],System.Single)">
      <summary>
            Draws a cardinal spline through a specified array of <see cref="T:Aspose.Imaging.PointF" /> structures using a specified tension.
            </summary>
      <param name="pen">
        <see cref="T:Aspose.Imaging.Pen" /> that determines the color, width, and height of the curve.</param>
      <param name="points">Array of <see cref="T:Aspose.Imaging.PointF" /> structures that represent the points that define the curve.</param>
      <param name="tension">Value greater than or equal to 0.0F that specifies the tension of the curve.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" /> is null.
            -or-
            <paramref name="points" /> is null.</exception>
    </member>
    <member name="M:Aspose.Imaging.Graphics.DrawCurve(Aspose.Imaging.Pen,Aspose.Imaging.PointF[],System.Int32,System.Int32)">
      <summary>
            Draws a cardinal spline through a specified array of <see cref="T:Aspose.Imaging.PointF" /> structures. The drawing begins offset from the beginning of the array.
            This method uses a default tension of 0.5.
            </summary>
      <param name="pen">
        <see cref="T:Aspose.Imaging.Pen" /> that determines the color, width, and height of the curve.</param>
      <param name="points">Array of <see cref="T:Aspose.Imaging.PointF" /> structures that define the spline.</param>
      <param name="offset">Offset from the first element in the array of the <paramref name="points" /> parameter to the starting point in the curve.</param>
      <param name="numberOfSegments">Number of segments after the starting point to include in the curve.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" /> is null.
            -or-
            <paramref name="points" /> is null.</exception>
    </member>
    <member name="M:Aspose.Imaging.Graphics.DrawCurve(Aspose.Imaging.Pen,Aspose.Imaging.PointF[],System.Int32,System.Int32,System.Single)">
      <summary>
            Draws a cardinal spline through a specified array of <see cref="T:Aspose.Imaging.PointF" /> structures using a specified tension. The drawing begins offset from the beginning of the array.
            </summary>
      <param name="pen">
        <see cref="T:Aspose.Imaging.Pen" /> that determines the color, width, and height of the curve.</param>
      <param name="points">Array of <see cref="T:Aspose.Imaging.PointF" /> structures that define the spline.</param>
      <param name="offset">Offset from the first element in the array of the <paramref name="points" /> parameter to the starting point in the curve.</param>
      <param name="numberOfSegments">Number of segments after the starting point to include in the curve.</param>
      <param name="tension">Value greater than or equal to 0.0F that specifies the tension of the curve.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" /> is null.
            -or-
            <paramref name="points" /> is null.</exception>
    </member>
    <member name="M:Aspose.Imaging.Graphics.DrawCurve(Aspose.Imaging.Pen,Aspose.Imaging.Point[])">
      <summary>
            Draws a cardinal spline through a specified array of <see cref="T:Aspose.Imaging.Point" /> structures.
            </summary>
      <param name="pen">
        <see cref="T:Aspose.Imaging.Pen" /> that determines the color, width, and height of the curve.</param>
      <param name="points">Array of <see cref="T:Aspose.Imaging.Point" /> structures that define the spline.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" /> is null.
            -or-
            <paramref name="points" /> is null.</exception>
    </member>
    <member name="M:Aspose.Imaging.Graphics.DrawCurve(Aspose.Imaging.Pen,Aspose.Imaging.Point[],System.Single)">
      <summary>
            Draws a cardinal spline through a specified array of <see cref="T:Aspose.Imaging.Point" /> structures using a specified tension.
            </summary>
      <param name="pen">
        <see cref="T:Aspose.Imaging.Pen" /> that determines the color, width, and height of the curve.</param>
      <param name="points">Array of <see cref="T:Aspose.Imaging.Point" /> structures that define the spline.</param>
      <param name="tension">Value greater than or equal to 0.0F that specifies the tension of the curve.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" /> is null.
            -or-
            <paramref name="points" /> is null.</exception>
    </member>
    <member name="M:Aspose.Imaging.Graphics.DrawCurve(Aspose.Imaging.Pen,Aspose.Imaging.Point[],System.Int32,System.Int32,System.Single)">
      <summary>
            Draws a cardinal spline through a specified array of <see cref="T:Aspose.Imaging.Point" /> structures using a specified tension.
            </summary>
      <param name="pen">
        <see cref="T:Aspose.Imaging.Pen" /> that determines the color, width, and height of the curve.</param>
      <param name="points">Array of <see cref="T:Aspose.Imaging.Point" /> structures that define the spline.</param>
      <param name="offset">Offset from the first element in the array of the <paramref name="points" /> parameter to the starting point in the curve.</param>
      <param name="numberOfSegments">Number of segments after the starting point to include in the curve.</param>
      <param name="tension">Value greater than or equal to 0.0F that specifies the tension of the curve.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" /> is null.
            -or-
            <paramref name="points" /> is null.</exception>
    </member>
    <member name="M:Aspose.Imaging.Graphics.DrawClosedCurve(Aspose.Imaging.Pen,Aspose.Imaging.PointF[])">
      <summary>
            Draws a closed cardinal spline defined by an array of <see cref="T:Aspose.Imaging.PointF" /> structures. This method uses a default tension of 0.5 and <see cref="F:Aspose.Imaging.FillMode.Alternate" /> fill mode.
            </summary>
      <param name="pen">
        <see cref="T:Aspose.Imaging.Pen" /> that determines the color, width, and height of the curve.</param>
      <param name="points">Array of <see cref="T:Aspose.Imaging.PointF" /> structures that define the spline.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" /> is null.
            -or-
            <paramref name="points" /> is null.</exception>
    </member>
    <member name="M:Aspose.Imaging.Graphics.DrawClosedCurve(Aspose.Imaging.Pen,Aspose.Imaging.PointF[],System.Single)">
      <summary>
            Draws a closed cardinal spline defined by an array of <see cref="T:Aspose.Imaging.PointF" /> structures using a specified tension. This method uses a default <see cref="F:Aspose.Imaging.FillMode.Alternate" /> fill mode.
            </summary>
      <param name="pen">
        <see cref="T:Aspose.Imaging.Pen" /> that determines the color, width, and height of the curve.</param>
      <param name="points">Array of <see cref="T:Aspose.Imaging.PointF" /> structures that define the spline.</param>
      <param name="tension">Value greater than or equal to 0.0F that specifies the tension of the curve.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" /> is null.
            -or-
            <paramref name="points" /> is null.</exception>
    </member>
    <member name="M:Aspose.Imaging.Graphics.DrawClosedCurve(Aspose.Imaging.Pen,Aspose.Imaging.Point[])">
      <summary>
            Draws a closed cardinal spline defined by an array of <see cref="T:Aspose.Imaging.Point" /> structures. This method uses a default tension of 0.5 and <see cref="F:Aspose.Imaging.FillMode.Alternate" /> fill mode.
            </summary>
      <param name="pen">
        <see cref="T:Aspose.Imaging.Pen" /> that determines the color, width, and height of the curve.</param>
      <param name="points">Array of <see cref="T:Aspose.Imaging.Point" /> structures that define the spline.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" /> is null.
            -or-
            <paramref name="points" /> is null.</exception>
    </member>
    <member name="M:Aspose.Imaging.Graphics.DrawClosedCurve(Aspose.Imaging.Pen,Aspose.Imaging.Point[],System.Single)">
      <summary>
            Draws a closed cardinal spline defined by an array of <see cref="T:Aspose.Imaging.Point" /> structures using a specified tension. This method uses a default <see cref="F:Aspose.Imaging.FillMode.Alternate" /> fill mode.
            </summary>
      <param name="pen">
        <see cref="T:Aspose.Imaging.Pen" /> that determines the color, width, and height of the curve.</param>
      <param name="points">Array of <see cref="T:Aspose.Imaging.Point" /> structures that define the spline.</param>
      <param name="tension">Value greater than or equal to 0.0F that specifies the tension of the curve.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" /> is null.
            -or-
            <paramref name="points" /> is null.</exception>
    </member>
    <member name="M:Aspose.Imaging.Graphics.DrawBezier(Aspose.Imaging.Pen,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
      <summary>
            Draws a Bézier spline defined by four ordered pairs of coordinates that represent points.
            </summary>
      <param name="pen">
        <see cref="T:Aspose.Imaging.Pen" /> that determines the color, width, and style of the curve.</param>
      <param name="x1">The x-coordinate of the starting point of the curve.</param>
      <param name="y1">The y-coordinate of the starting point of the curve.</param>
      <param name="x2">The x-coordinate of the first control point of the curve.</param>
      <param name="y2">The y-coordinate of the first control point of the curve.</param>
      <param name="x3">The x-coordinate of the second control point of the curve.</param>
      <param name="y3">The y-coordinate of the second control point of the curve.</param>
      <param name="x4">The x-coordinate of the ending point of the curve.</param>
      <param name="y4">The y-coordinate of the ending point of the curve.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" /> is null.</exception>
    </member>
    <member name="M:Aspose.Imaging.Graphics.DrawBezier(Aspose.Imaging.Pen,Aspose.Imaging.PointF,Aspose.Imaging.PointF,Aspose.Imaging.PointF,Aspose.Imaging.PointF)">
      <summary>
            Draws a Bézier spline defined by four <see cref="T:Aspose.Imaging.PointF" /> structures.
            </summary>
      <param name="pen">
        <see cref="T:Aspose.Imaging.Pen" /> that determines the color, width, and style of the curve.</param>
      <param name="pt1">
        <see cref="T:Aspose.Imaging.PointF" /> structure that represents the starting point of the curve.</param>
      <param name="pt2">
        <see cref="T:Aspose.Imaging.PointF" /> structure that represents the first control point for the curve.</param>
      <param name="pt3">
        <see cref="T:Aspose.Imaging.PointF" /> structure that represents the second control point for the curve.</param>
      <param name="pt4">
        <see cref="T:Aspose.Imaging.PointF" /> structure that represents the ending point of the curve.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" /> is null.</exception>
    </member>
    <member name="M:Aspose.Imaging.Graphics.DrawBezier(Aspose.Imaging.Pen,Aspose.Imaging.Point,Aspose.Imaging.Point,Aspose.Imaging.Point,Aspose.Imaging.Point)">
      <summary>
            Draws a Bézier spline defined by four <see cref="T:Aspose.Imaging.Point" /> structures.
            </summary>
      <param name="pen">
        <see cref="T:Aspose.Imaging.Pen" /> structure that determines the color, width, and style of the curve.</param>
      <param name="pt1">
        <see cref="T:Aspose.Imaging.Point" /> structure that represents the starting point of the curve.</param>
      <param name="pt2">
        <see cref="T:Aspose.Imaging.Point" /> structure that represents the first control point for the curve.</param>
      <param name="pt3">
        <see cref="T:Aspose.Imaging.Point" /> structure that represents the second control point for the curve.</param>
      <param name="pt4">
        <see cref="T:Aspose.Imaging.Point" /> structure that represents the ending point of the curve.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" /> is null.</exception>
    </member>
    <member name="M:Aspose.Imaging.Graphics.DrawBeziers(Aspose.Imaging.Pen,Aspose.Imaging.Point[])">
      <summary>
            Draws a series of Bézier splines from an array of <see cref="T:Aspose.Imaging.Point" /> structures.
            </summary>
      <param name="pen">
        <see cref="T:Aspose.Imaging.Pen" /> that determines the color, width, and style of the curve.</param>
      <param name="points">Array of <see cref="T:Aspose.Imaging.Point" /> structures that represent the points that determine the curve.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" /> is null.
            -or-
            <paramref name="points" /> is null.</exception>
    </member>
    <member name="M:Aspose.Imaging.Graphics.DrawBeziers(Aspose.Imaging.Pen,Aspose.Imaging.PointF[])">
      <summary>
            Draws a series of Bézier splines from an array of <see cref="T:Aspose.Imaging.PointF" /> structures.
            </summary>
      <param name="pen">
        <see cref="T:Aspose.Imaging.Pen" /> that determines the color, width, and style of the curve.</param>
      <param name="points">Array of <see cref="T:Aspose.Imaging.PointF" /> structures that represent the points that determine the curve.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" /> is null.
            -or-
            <paramref name="points" /> is null.</exception>
    </member>
    <member name="M:Aspose.Imaging.Graphics.DrawString(System.String,Aspose.Imaging.Font,Aspose.Imaging.Brush,System.Single,System.Single)">
      <summary>
            Draws the specified text string at the specified location with the specified <see cref="T:Aspose.Imaging.Brush" /> and <see cref="T:Aspose.Imaging.Font" /> objects.
            </summary>
      <param name="s">String to draw.</param>
      <param name="font">
        <see cref="T:Aspose.Imaging.Font" /> that defines the text format of the string.</param>
      <param name="brush">
        <see cref="T:Aspose.Imaging.Brush" /> that determines the color and texture of the drawn text.</param>
      <param name="x">The x-coordinate of the upper-left corner of the drawn text.</param>
      <param name="y">The y-coordinate of the upper-left corner of the drawn text.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="brush" /> is null.
            -or-
            <paramref name="s" /> is null.</exception>
    </member>
    <member name="M:Aspose.Imaging.Graphics.DrawString(System.String,Aspose.Imaging.Font,Aspose.Imaging.Brush,Aspose.Imaging.PointF)">
      <summary>
            Draws the specified text string at the specified location with the specified <see cref="T:Aspose.Imaging.Brush" /> and <see cref="T:Aspose.Imaging.Font" /> objects.
            </summary>
      <param name="s">String to draw.</param>
      <param name="font">
        <see cref="T:Aspose.Imaging.Font" /> that defines the text format of the string.</param>
      <param name="brush">
        <see cref="T:Aspose.Imaging.Brush" /> that determines the color and texture of the drawn text.</param>
      <param name="point">
        <see cref="T:Aspose.Imaging.PointF" /> structure that specifies the upper-left corner of the drawn text.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="brush" /> is null.
            -or-
            <paramref name="s" /> is null.</exception>
      <example>This example demonstrates the use of Font and SolidBrush class to draw strings on Image surface. The example creates a new Image and draw shapes using Figures and GraphicsPath<code>[C#]

//Creates an instance of BmpOptions and set its various properties
Aspose.Imaging.ImageOptions.BmpOptions bmpOptions = new Aspose.Imaging.ImageOptions.BmpOptions();
bmpOptions.BitsPerPixel = 24;

// create a new source based on memory stream.
bmpOptions.Source = new Aspose.Imaging.Sources.StreamSource(new System.IO.MemoryStream(), true);

//Creates an instance of Image
using (Aspose.Imaging.Image image = Aspose.Imaging.Image.Create(bmpOptions, 500, 500))
{
    //Creates and initialize an instance of Graphics class
    Aspose.Imaging.Graphics graphics = new Aspose.Imaging.Graphics(image);

    //Clears Graphics surface
    graphics.Clear(Color.Wheat);

    //Creates an instance of Font
    Aspose.Imaging.Font font = new Aspose.Imaging.Font("Times New Roman", 16);

    //Create an instance of SolidBrush having Red Color
    Aspose.Imaging.Brushes.SolidBrush brush = new Aspose.Imaging.Brushes.SolidBrush(Color.Red);

    //Draw a String
    graphics.DrawString("Created by Aspose.Imaging for .Net", font, brush, new PointF(100, 100));

    // save all changes
    image.Save();
}</code><code>[Visual Basic]

'Creates an instance of BmpOptions and set its various properties
Dim bmpOptions As Aspose.Imaging.ImageOptions.BmpOptions = New Aspose.Imaging.ImageOptions.BmpOptions()
bmpOptions.BitsPerPixel = 24

' create a new source based on memory stream.
bmpOptions.Source = New Aspose.Imaging.Sources.StreamSource(New System.IO.MemoryStream(), True)

'Creates an instance of Image
Using image As Aspose.Imaging.Image = Aspose.Imaging.Image.Create(bmpOptions, 500, 500)
'Creates and initialize an instance of Graphics class
Dim graphics As Aspose.Imaging.Graphics = New Aspose.Imaging.Graphics(image)

'Clears Graphics surface
    graphics.Clear(Color.Wheat)

'Creates an instance of Font
Dim font As Aspose.Imaging.Font = New Aspose.Imaging.Font("Times New Roman", 16)

'Create an instance of SolidBrush having Red Color
Dim brush As Aspose.Imaging.Brushes.SolidBrush = New Aspose.Imaging.Brushes.SolidBrush(Color.Red)

'Draw a String
    graphics.DrawString("Created by Aspose.Imaging for .Net", font, brush, New PointF(100, 100))

' save all changes
    image.Save()
End Using</code></example>
    </member>
    <member name="M:Aspose.Imaging.Graphics.DrawString(System.String,Aspose.Imaging.Font,Aspose.Imaging.Brush,System.Single,System.Single,Aspose.Imaging.StringFormat)">
      <summary>
            Draws the specified text string at the specified location with the specified <see cref="T:Aspose.Imaging.Brush" /> and <see cref="T:Aspose.Imaging.Font" /> objects using the formatting attributes of the specified <see cref="T:Aspose.Imaging.StringFormat" />.
            </summary>
      <param name="s">String to draw.</param>
      <param name="font">
        <see cref="T:Aspose.Imaging.Font" /> that defines the text format of the string.</param>
      <param name="brush">
        <see cref="T:Aspose.Imaging.Brush" /> that determines the color and texture of the drawn text.</param>
      <param name="x">The x-coordinate of the upper-left corner of the drawn text.</param>
      <param name="y">The y-coordinate of the upper-left corner of the drawn text.</param>
      <param name="format">
        <see cref="T:Aspose.Imaging.StringFormat" /> that specifies formatting attributes, such as line spacing and alignment, that are applied to the drawn text.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="brush" /> is null.
            -or-
            <paramref name="s" /> is null.</exception>
    </member>
    <member name="M:Aspose.Imaging.Graphics.DrawString(System.String,Aspose.Imaging.Font,Aspose.Imaging.Brush,Aspose.Imaging.PointF,Aspose.Imaging.StringFormat)">
      <summary>
            Draws the specified text string at the specified location with the specified <see cref="T:Aspose.Imaging.Brush" /> and <see cref="T:Aspose.Imaging.Font" /> objects using the formatting attributes of the specified <see cref="T:Aspose.Imaging.StringFormat" />.
            </summary>
      <param name="s">String to draw.</param>
      <param name="font">
        <see cref="T:Aspose.Imaging.Font" /> that defines the text format of the string.</param>
      <param name="brush">
        <see cref="T:Aspose.Imaging.Brush" /> that determines the color and texture of the drawn text.</param>
      <param name="point">
        <see cref="T:Aspose.Imaging.PointF" /> structure that specifies the upper-left corner of the drawn text.</param>
      <param name="format">
        <see cref="T:Aspose.Imaging.StringFormat" /> that specifies formatting attributes, such as line spacing and alignment, that are applied to the drawn text.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="brush" /> is null.
            -or-
            <paramref name="s" /> is null.</exception>
    </member>
    <member name="M:Aspose.Imaging.Graphics.DrawString(System.String,Aspose.Imaging.Font,Aspose.Imaging.Brush,Aspose.Imaging.RectangleF)">
      <summary>
            Draws the specified text string in the specified rectangle with the specified <see cref="T:Aspose.Imaging.Brush" /> and <see cref="T:Aspose.Imaging.Font" /> objects.
            </summary>
      <param name="s">String to draw.</param>
      <param name="font">
        <see cref="T:Aspose.Imaging.Font" /> that defines the text format of the string.</param>
      <param name="brush">
        <see cref="T:Aspose.Imaging.Brush" /> that determines the color and texture of the drawn text.</param>
      <param name="layoutRectangle">
        <see cref="T:Aspose.Imaging.RectangleF" /> structure that specifies the location of the drawn text.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="brush" /> is null.
            -or-
            <paramref name="s" /> is null.</exception>
    </member>
    <member name="M:Aspose.Imaging.Graphics.DrawString(System.String,Aspose.Imaging.Font,Aspose.Imaging.Brush,Aspose.Imaging.RectangleF,Aspose.Imaging.StringFormat)">
      <summary>
            Draws the specified text string in the specified rectangle with the specified <see cref="T:Aspose.Imaging.Brush" /> and <see cref="T:Aspose.Imaging.Font" /> objects using the formatting attributes of the specified <see cref="T:Aspose.Imaging.StringFormat" />.
            </summary>
      <param name="s">String to draw.</param>
      <param name="font">
        <see cref="T:Aspose.Imaging.Font" /> that defines the text format of the string.</param>
      <param name="brush">
        <see cref="T:Aspose.Imaging.Brush" /> that determines the color and texture of the drawn text.</param>
      <param name="layoutRectangle">
        <see cref="T:Aspose.Imaging.RectangleF" /> structure that specifies the location of the drawn text.</param>
      <param name="format">
        <see cref="T:Aspose.Imaging.StringFormat" /> that specifies formatting attributes, such as line spacing and alignment, that are applied to the drawn text.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="brush" /> is null.
            -or-
            <paramref name="s" /> is null.
            -or-
            <paramref name="brush" /> is null.</exception>
    </member>
    <member name="M:Aspose.Imaging.Graphics.FillEllipse(Aspose.Imaging.Brush,Aspose.Imaging.RectangleF)">
      <summary>
            Fills the interior of an ellipse defined by a bounding rectangle specified by a <see cref="T:Aspose.Imaging.RectangleF" /> structure.
            </summary>
      <param name="brush">
        <see cref="T:Aspose.Imaging.Brush" /> that determines the characteristics of the fill.</param>
      <param name="rect">
        <see cref="T:Aspose.Imaging.RectangleF" /> structure that represents the bounding rectangle that defines the ellipse.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="brush" /> is null.</exception>
    </member>
    <member name="M:Aspose.Imaging.Graphics.FillEllipse(Aspose.Imaging.Brush,System.Single,System.Single,System.Single,System.Single)">
      <summary>
            Fills the interior of an ellipse defined by a bounding rectangle specified by a pair of coordinates, a width, and a height.
            </summary>
      <param name="brush">
        <see cref="T:Aspose.Imaging.Brush" /> that determines the characteristics of the fill.</param>
      <param name="x">The x-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse.</param>
      <param name="y">The y-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse.</param>
      <param name="width">Width of the bounding rectangle that defines the ellipse.</param>
      <param name="height">Height of the bounding rectangle that defines the ellipse.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="brush" /> is null.</exception>
    </member>
    <member name="M:Aspose.Imaging.Graphics.FillEllipse(Aspose.Imaging.Brush,Aspose.Imaging.Rectangle)">
      <summary>
            Fills the interior of an ellipse defined by a bounding rectangle specified by a <see cref="T:Aspose.Imaging.Rectangle" /> structure.
            </summary>
      <param name="brush">
        <see cref="T:Aspose.Imaging.Brush" /> that determines the characteristics of the fill.</param>
      <param name="rect">
        <see cref="T:Aspose.Imaging.Rectangle" /> structure that represents the bounding rectangle that defines the ellipse.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="brush" /> is null.</exception>
    </member>
    <member name="M:Aspose.Imaging.Graphics.FillEllipse(Aspose.Imaging.Brush,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Fills the interior of an ellipse defined by a bounding rectangle specified by a pair of coordinates, a width, and a height.
            </summary>
      <param name="brush">
        <see cref="T:Aspose.Imaging.Brush" /> that determines the characteristics of the fill.</param>
      <param name="x">The x-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse.</param>
      <param name="y">The y-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse.</param>
      <param name="width">Width of the bounding rectangle that defines the ellipse.</param>
      <param name="height">Height of the bounding rectangle that defines the ellipse.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="brush" /> is null.</exception>
    </member>
    <member name="M:Aspose.Imaging.Graphics.FillPie(Aspose.Imaging.Brush,Aspose.Imaging.Rectangle,System.Single,System.Single)">
      <summary>
            Fills the interior of a pie section defined by an ellipse specified by a <see cref="T:Aspose.Imaging.RectangleF" /> structure and two radial lines.
            </summary>
      <param name="brush">
        <see cref="T:Aspose.Imaging.Brush" /> that determines the characteristics of the fill.</param>
      <param name="rect">
        <see cref="T:Aspose.Imaging.Rectangle" /> structure that represents the bounding rectangle that defines the ellipse from which the pie section comes.</param>
      <param name="startAngle">Angle in degrees measured clockwise from the x-axis to the first side of the pie section.</param>
      <param name="sweepAngle">Angle in degrees measured clockwise from the <paramref name="startAngle" /> parameter to the second side of the pie section.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="brush" /> is null.</exception>
    </member>
    <member name="M:Aspose.Imaging.Graphics.FillPie(Aspose.Imaging.Brush,Aspose.Imaging.RectangleF,System.Single,System.Single)">
      <summary>
            Fills the interior of a pie section defined by an ellipse specified by a <see cref="T:Aspose.Imaging.RectangleF" /> structure and two radial lines.
            </summary>
      <param name="brush">
        <see cref="T:Aspose.Imaging.Brush" /> that determines the characteristics of the fill.</param>
      <param name="rect">
        <see cref="T:Aspose.Imaging.RectangleF" /> structure that represents the bounding rectangle that defines the ellipse from which the pie section comes.</param>
      <param name="startAngle">Angle in degrees measured clockwise from the x-axis to the first side of the pie section.</param>
      <param name="sweepAngle">Angle in degrees measured clockwise from the <paramref name="startAngle" /> parameter to the second side of the pie section.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="brush" /> is null.</exception>
    </member>
    <member name="M:Aspose.Imaging.Graphics.FillPie(Aspose.Imaging.Brush,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
      <summary>
            Fills the interior of a pie section defined by an ellipse specified by a pair of coordinates, a width, a height, and two radial lines.
            </summary>
      <param name="brush">
        <see cref="T:Aspose.Imaging.Brush" /> that determines the characteristics of the fill.</param>
      <param name="x">The x-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse from which the pie section comes.</param>
      <param name="y">The y-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse from which the pie section comes.</param>
      <param name="width">Width of the bounding rectangle that defines the ellipse from which the pie section comes.</param>
      <param name="height">Height of the bounding rectangle that defines the ellipse from which the pie section comes.</param>
      <param name="startAngle">Angle in degrees measured clockwise from the x-axis to the first side of the pie section.</param>
      <param name="sweepAngle">Angle in degrees measured clockwise from the <paramref name="startAngle" /> parameter to the second side of the pie section.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="brush" /> is null.</exception>
    </member>
    <member name="M:Aspose.Imaging.Graphics.FillPie(Aspose.Imaging.Brush,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Fills the interior of a pie section defined by an ellipse specified by a pair of coordinates, a width, a height, and two radial lines.
            </summary>
      <param name="brush">
        <see cref="T:Aspose.Imaging.Brush" /> that determines the characteristics of the fill.</param>
      <param name="x">The x-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse from which the pie section comes.</param>
      <param name="y">The y-coordinate of the upper-left corner of the bounding rectangle that defines the ellipse from which the pie section comes.</param>
      <param name="width">Width of the bounding rectangle that defines the ellipse from which the pie section comes.</param>
      <param name="height">Height of the bounding rectangle that defines the ellipse from which the pie section comes.</param>
      <param name="startAngle">Angle in degrees measured clockwise from the x-axis to the first side of the pie section.</param>
      <param name="sweepAngle">Angle in degrees measured clockwise from the <paramref name="startAngle" /> parameter to the second side of the pie section.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="brush" /> is null.</exception>
    </member>
    <member name="M:Aspose.Imaging.Graphics.FillPolygon(Aspose.Imaging.Brush,Aspose.Imaging.PointF[])">
      <summary>
            Fills the interior of a polygon defined by an array of points specified by <see cref="T:Aspose.Imaging.PointF" /> structures and <see cref="F:Aspose.Imaging.FillMode.Alternate" />.
            </summary>
      <param name="brush">
        <see cref="T:Aspose.Imaging.Brush" /> that determines the characteristics of the fill.</param>
      <param name="points">Array of <see cref="T:Aspose.Imaging.PointF" /> structures that represent the vertices of the polygon to fill.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="brush" /> is null.
            -or-
            <paramref name="points" /> is null.</exception>
    </member>
    <member name="M:Aspose.Imaging.Graphics.FillPolygon(Aspose.Imaging.Brush,Aspose.Imaging.PointF[],Aspose.Imaging.FillMode)">
      <summary>
            Fills the interior of a polygon defined by an array of points specified by <see cref="T:Aspose.Imaging.PointF" /> structures using the specified fill mode.
            </summary>
      <param name="brush">
        <see cref="T:Aspose.Imaging.Brush" /> that determines the characteristics of the fill.</param>
      <param name="points">Array of <see cref="T:Aspose.Imaging.PointF" /> structures that represent the vertices of the polygon to fill.</param>
      <param name="fillMode">Member of the <see cref="T:Aspose.Imaging.FillMode" /> enumeration that determines the style of the fill.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="brush" /> is null.
            -or-
            <paramref name="points" /> is null.</exception>
    </member>
    <member name="M:Aspose.Imaging.Graphics.FillPolygon(Aspose.Imaging.Brush,Aspose.Imaging.Point[])">
      <summary>
            Fills the interior of a polygon defined by an array of points specified by <see cref="T:Aspose.Imaging.Point" /> structures and <see cref="F:Aspose.Imaging.FillMode.Alternate" />.
            </summary>
      <param name="brush">
        <see cref="T:Aspose.Imaging.Brush" /> that determines the characteristics of the fill.</param>
      <param name="points">Array of <see cref="T:Aspose.Imaging.Point" /> structures that represent the vertices of the polygon to fill.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="brush" /> is null.
            -or-
            <paramref name="points" /> is null.</exception>
    </member>
    <member name="M:Aspose.Imaging.Graphics.FillPolygon(Aspose.Imaging.Brush,Aspose.Imaging.Point[],Aspose.Imaging.FillMode)">
      <summary>
            Fills the interior of a polygon defined by an array of points specified by <see cref="T:Aspose.Imaging.Point" /> structures using the specified fill mode.
            </summary>
      <param name="brush">
        <see cref="T:Aspose.Imaging.Brush" /> that determines the characteristics of the fill.</param>
      <param name="points">Array of <see cref="T:Aspose.Imaging.Point" /> structures that represent the vertices of the polygon to fill.</param>
      <param name="fillMode">Member of the <see cref="T:Aspose.Imaging.FillMode" /> enumeration that determines the style of the fill.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="brush" /> is null.
            -or-
            <paramref name="points" /> is null.</exception>
    </member>
    <member name="M:Aspose.Imaging.Graphics.FillClosedCurve(Aspose.Imaging.Brush,Aspose.Imaging.PointF[])">
      <summary>
            Fills the interior of a closed cardinal spline curve defined by an array of <see cref="T:Aspose.Imaging.PointF" /> structures. This method uses a default tension of 0.5 and <see cref="F:Aspose.Imaging.FillMode.Alternate" /> fill mode.
            </summary>
      <param name="brush">
        <see cref="T:Aspose.Imaging.Brush" /> that determines the characteristics of the fill.</param>
      <param name="points">Array of <see cref="T:Aspose.Imaging.PointF" /> structures that define the spline.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="brush" /> is null.
            -or-
            <paramref name="points" /> is null.</exception>
    </member>
    <member name="M:Aspose.Imaging.Graphics.FillClosedCurve(Aspose.Imaging.Brush,Aspose.Imaging.PointF[],Aspose.Imaging.FillMode)">
      <summary>
            Fills the interior of a closed cardinal spline curve defined by an array of <see cref="T:Aspose.Imaging.PointF" /> structures using the specified fill mode. This method uses a default tension of 0.5.
            </summary>
      <param name="brush">
        <see cref="T:Aspose.Imaging.Brush" /> that determines the characteristics of the fill.</param>
      <param name="points">Array of <see cref="T:Aspose.Imaging.PointF" /> structures that define the spline.</param>
      <param name="fillmode">Member of the <see cref="T:Aspose.Imaging.FillMode" /> enumeration that determines how the curve is filled.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="brush" /> is null.
            -or-
            <paramref name="points" /> is null.</exception>
    </member>
    <member name="M:Aspose.Imaging.Graphics.FillClosedCurve(Aspose.Imaging.Brush,Aspose.Imaging.PointF[],Aspose.Imaging.FillMode,System.Single)">
      <summary>
            Fills the interior of a closed cardinal spline curve defined by an array of <see cref="T:Aspose.Imaging.PointF" /> structures using the specified fill mode and tension.
            </summary>
      <param name="brush">A <see cref="T:Aspose.Imaging.Brush" /> that determines the characteristics of the fill.</param>
      <param name="points">Array of <see cref="T:Aspose.Imaging.PointF" /> structures that define the spline.</param>
      <param name="fillmode">Member of the <see cref="T:Aspose.Imaging.FillMode" /> enumeration that determines how the curve is filled.</param>
      <param name="tension">Value greater than or equal to 0.0F that specifies the tension of the curve.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="brush" /> is null.
            -or-
            <paramref name="points" /> is null.</exception>
    </member>
    <member name="M:Aspose.Imaging.Graphics.FillClosedCurve(Aspose.Imaging.Brush,Aspose.Imaging.Point[])">
      <summary>
            Fills the interior of a closed cardinal spline curve defined by an array of <see cref="T:Aspose.Imaging.Point" /> structures. This method uses a default tension of 0.5 and <see cref="F:Aspose.Imaging.FillMode.Alternate" /> fill mode.
            </summary>
      <param name="brush">
        <see cref="T:Aspose.Imaging.Brush" /> that determines the characteristics of the fill.</param>
      <param name="points">Array of <see cref="T:Aspose.Imaging.Point" /> structures that define the spline.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="brush" /> is null.
            -or-
            <paramref name="points" /> is null.</exception>
    </member>
    <member name="M:Aspose.Imaging.Graphics.FillClosedCurve(Aspose.Imaging.Brush,Aspose.Imaging.Point[],Aspose.Imaging.FillMode)">
      <summary>
            Fills the interior of a closed cardinal spline curve defined by an array of <see cref="T:Aspose.Imaging.Point" /> structures using the specified fill mode. This method uses a default tension of 0.5.
            </summary>
      <param name="brush">
        <see cref="T:Aspose.Imaging.Brush" /> that determines the characteristics of the fill.</param>
      <param name="points">Array of <see cref="T:Aspose.Imaging.Point" /> structures that define the spline.</param>
      <param name="fillmode">Member of the <see cref="T:Aspose.Imaging.FillMode" /> enumeration that determines how the curve is filled.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="brush" /> is null.
            -or-
            <paramref name="points" /> is null.</exception>
    </member>
    <member name="M:Aspose.Imaging.Graphics.FillClosedCurve(Aspose.Imaging.Brush,Aspose.Imaging.Point[],Aspose.Imaging.FillMode,System.Single)">
      <summary>
            Fills the interior of a closed cardinal spline curve defined by an array of <see cref="T:Aspose.Imaging.Point" /> structures using the specified fill mode and tension.
            </summary>
      <param name="brush">
        <see cref="T:Aspose.Imaging.Brush" /> that determines the characteristics of the fill.</param>
      <param name="points">Array of <see cref="T:Aspose.Imaging.Point" /> structures that define the spline.</param>
      <param name="fillmode">Member of the <see cref="T:Aspose.Imaging.FillMode" /> enumeration that determines how the curve is filled.</param>
      <param name="tension">Value greater than or equal to 0.0F that specifies the tension of the curve.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="brush" /> is null.
            -or-
            <paramref name="points" /> is null.</exception>
    </member>
    <member name="M:Aspose.Imaging.Graphics.DrawPath(Aspose.Imaging.Pen,Aspose.Imaging.GraphicsPath)">
      <summary>
            Draws a <see cref="T:Aspose.Imaging.GraphicsPath" />.
            </summary>
      <param name="pen">
        <see cref="T:Aspose.Imaging.Pen" /> that determines the color, width, and style of the path.</param>
      <param name="path">
        <see cref="T:Aspose.Imaging.GraphicsPath" /> to draw.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="pen" /> is null.
            -or-
            <paramref name="path" /> is null.</exception>
      <example>This examples make use of GraphicsPath and Graphics class to create and manipulate Figures on an Image surface. Example creates a new Image (of type Tiff) and draw paths with the help of GraphicsPath class. At the end DrawPath method exposed by Graphics class is called to render the paths on surface.<code>[C#]

//Create an instance of memory stream
using (MemoryStream stream = new MemoryStream())
{
    //Create an instance of TiffOptions and set its various properties
    Aspose.Imaging.ImageOptions.TiffOptions tiffOptions = new Aspose.Imaging.ImageOptions.TiffOptions();
        
    //Set the source for the instance of ImageOptions
    tiffOptions.Source = new Aspose.Imaging.Sources.StreamSource(stream);

    //Create an instance of Image 
    using (Aspose.Imaging.Image image = Aspose.Imaging.Image.Create(tiffOptions, 500, 500))
    {
        //Create and initialize an instance of Graphics class
        Aspose.Imaging.Graphics graphics = new Aspose.Imaging.Graphics(image);

        //Clear Graphics surface
        graphics.Clear(Color.Wheat);

        //Create an instance of GraphicsPath class
        Aspose.Imaging.GraphicsPath graphicspath = new Aspose.Imaging.GraphicsPath();

        //Create an instance of Figure class
        Aspose.Imaging.Figure figure = new Aspose.Imaging.Figure();

        //Add Shapes to Figure object
        figure.AddShape(new Aspose.Imaging.Shapes.RectangleShape(new RectangleF(10, 10, 300, 300)));
        figure.AddShape(new Aspose.Imaging.Shapes.EllipseShape(new RectangleF(50, 50, 300, 300)));
        figure.AddShape(new Aspose.Imaging.Shapes.PieShape(new Rectangle(new Point(250, 250), new Size(200, 200)), 0, 45));

        //Add Figure object to GraphicsPath
        graphicspath.AddFigure(figure);

        //Draw path with Pen object of color Black
        graphics.DrawPath(new Pen(Aspose.Imaging.Color.Black, 2), graphicspath);

        // save all changes.
        image.Save();
    }
}</code><code>[Visual Basic]

'Create an instance of memory stream
Using stream As MemoryStream = New MemoryStream()
'Create an instance of TiffOptions and set its various properties
Dim tiffOptions As Aspose.Imaging.ImageOptions.TiffOptions = New Aspose.Imaging.ImageOptions.TiffOptions()

'Set the source for the instance of ImageOptions
    tiffOptions.Source = New Aspose.Imaging.Sources.StreamSource(stream)

'Create an instance of Image 
    Using image As Aspose.Imaging.Image = Aspose.Imaging.Image.Create(tiffOptions, 500, 500)
'Create and initialize an instance of Graphics class
Dim graphics As Aspose.Imaging.Graphics = New Aspose.Imaging.Graphics(image)

'Clear Graphics surface
        graphics.Clear(Color.Wheat)

'Create an instance of GraphicsPath class
Dim graphicspath As Aspose.Imaging.GraphicsPath = New Aspose.Imaging.GraphicsPath()

'Create an instance of Figure class
Dim figure As Aspose.Imaging.Figure = New Aspose.Imaging.Figure()

'Add Shapes to Figure object
        figure.AddShape(New Aspose.Imaging.Shapes.RectangleShape(New RectangleF(10, 10, 300, 300)))
        figure.AddShape(New Aspose.Imaging.Shapes.EllipseShape(New RectangleF(50, 50, 300, 300)))
        figure.AddShape(New Aspose.Imaging.Shapes.PieShape(New Rectangle(New Point(250, 250), New Size(200, 200)), 0, 45))

'Add Figure object to GraphicsPath
        graphicspath.AddFigure(figure)

'Draw path with Pen object of color Black
        graphics.DrawPath(New Pen(Aspose.Imaging.Color.Black, 2), graphicspath)

' save all changes.
        image.Save()
    End Using
End Using</code></example>
    </member>
    <member name="M:Aspose.Imaging.Graphics.FillPath(Aspose.Imaging.Brush,Aspose.Imaging.GraphicsPath)">
      <summary>
            Fills the interior of a <see cref="T:Aspose.Imaging.GraphicsPath" />.
            </summary>
      <param name="brush">
        <see cref="T:Aspose.Imaging.Brush" /> that determines the characteristics of the fill.</param>
      <param name="path">
        <see cref="T:Aspose.Imaging.GraphicsPath" /> that represents the path to fill.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="brush" /> is null.
            -or-
            <paramref name="path" /> is null.</exception>
    </member>
    <member name="M:Aspose.Imaging.Graphics.FillRegion(Aspose.Imaging.Brush,Aspose.Imaging.Region)">
      <summary>
            Fills the interior of a <see cref="T:Aspose.Imaging.Region" />.
            </summary>
      <param name="brush">
        <see cref="T:Aspose.Imaging.Brush" /> that determines the characteristics of the fill.</param>
      <param name="region">
        <see cref="T:Aspose.Imaging.Region" /> that represents the area to fill.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="brush" /> is null.
            -or-
            <paramref name="region" /> is null.</exception>
    </member>
    <member name="P:Aspose.Imaging.Graphics.Transform">
      <summary>
            Gets or sets a copy of the geometric world transformation for this <see cref="T:Aspose.Imaging.Graphics" />.
            </summary>
      <value>
            A copy of the <see cref="T:Aspose.Imaging.Matrix" /> that represents the geometric world transformation for this <see cref="T:Aspose.Imaging.Graphics" />.
            </value>
    </member>
    <member name="P:Aspose.Imaging.Graphics.IsInBeginUpdateCall">
      <summary>
            Gets a value indicating whether graphics is in BeginUpdate call state.
            </summary>
      <value>
        <c>True</c> if graphics is in BeginUpdate call state; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Aspose.Imaging.Graphics.Image">
      <summary>
            Gets the image.
            </summary>
      <value>The graphics image.</value>
    </member>
    <member name="P:Aspose.Imaging.Graphics.CompositingQuality">
      <summary>
            Gets or sets the compositing quality.
            </summary>
      <value>The compositing quality.</value>
    </member>
    <member name="P:Aspose.Imaging.Graphics.InterpolationMode">
      <summary>
            Gets or sets the interpolation mode.
            </summary>
      <value>The interpolation mode.</value>
    </member>
    <member name="P:Aspose.Imaging.Graphics.SmoothingMode">
      <summary>
            Gets or sets the smoothing mode.
            </summary>
      <value>The smoothing mode.</value>
    </member>
    <member name="P:Aspose.Imaging.Graphics.TextRenderingHint">
      <summary>
            Gets or sets the text rendering hint.
            </summary>
      <value>The text rendering hint.</value>
    </member>
    <member name="T:Aspose.Imaging.GraphicsPath">
      <summary>
            Represents a series of connected lines and curves. This class cannot be inherited.
            </summary>
      <example>This examples make use of GraphicsPath and Graphics class to create and manipulate Figures on an Image surface. Example creates a new Image (of type Tiff) and draw paths with the help of GraphicsPath class. At the end DrawPath method exposed by Graphics class is called to render the paths on surface.<code>[C#]

//Create an instance of memory stream
using (MemoryStream stream = new MemoryStream())
{
    //Create an instance of TiffOptions and set its various properties
    Aspose.Imaging.ImageOptions.TiffOptions tiffOptions = new Aspose.Imaging.ImageOptions.TiffOptions();
        
    //Set the source for the instance of ImageOptions
    tiffOptions.Source = new Aspose.Imaging.Sources.StreamSource(stream);

    //Create an instance of Image 
    using (Aspose.Imaging.Image image = Aspose.Imaging.Image.Create(tiffOptions, 500, 500))
    {
        //Create and initialize an instance of Graphics class
        Aspose.Imaging.Graphics graphics = new Aspose.Imaging.Graphics(image);

        //Clear Graphics surface
        graphics.Clear(Color.Wheat);

        //Create an instance of GraphicsPath class
        Aspose.Imaging.GraphicsPath graphicspath = new Aspose.Imaging.GraphicsPath();

        //Create an instance of Figure class
        Aspose.Imaging.Figure figure = new Aspose.Imaging.Figure();

        //Add Shapes to Figure object
        figure.AddShape(new Aspose.Imaging.Shapes.RectangleShape(new RectangleF(10, 10, 300, 300)));
        figure.AddShape(new Aspose.Imaging.Shapes.EllipseShape(new RectangleF(50, 50, 300, 300)));
        figure.AddShape(new Aspose.Imaging.Shapes.PieShape(new Rectangle(new Point(250, 250), new Size(200, 200)), 0, 45));

        //Add Figure object to GraphicsPath
        graphicspath.AddFigure(figure);

        //Draw path with Pen object of color Black
        graphics.DrawPath(new Pen(Aspose.Imaging.Color.Black, 2), graphicspath);

        // save all changes.
        image.Save();
    }
}</code><code>[Visual Basic]

'Create an instance of memory stream
Using stream As MemoryStream = New MemoryStream()
'Create an instance of TiffOptions and set its various properties
Dim tiffOptions As Aspose.Imaging.ImageOptions.TiffOptions = New Aspose.Imaging.ImageOptions.TiffOptions()

'Set the source for the instance of ImageOptions
    tiffOptions.Source = New Aspose.Imaging.Sources.StreamSource(stream)

'Create an instance of Image 
    Using image As Aspose.Imaging.Image = Aspose.Imaging.Image.Create(tiffOptions, 500, 500)
'Create and initialize an instance of Graphics class
Dim graphics As Aspose.Imaging.Graphics = New Aspose.Imaging.Graphics(image)

'Clear Graphics surface
        graphics.Clear(Color.Wheat)

'Create an instance of GraphicsPath class
Dim graphicspath As Aspose.Imaging.GraphicsPath = New Aspose.Imaging.GraphicsPath()

'Create an instance of Figure class
Dim figure As Aspose.Imaging.Figure = New Aspose.Imaging.Figure()

'Add Shapes to Figure object
        figure.AddShape(New Aspose.Imaging.Shapes.RectangleShape(New RectangleF(10, 10, 300, 300)))
        figure.AddShape(New Aspose.Imaging.Shapes.EllipseShape(New RectangleF(50, 50, 300, 300)))
        figure.AddShape(New Aspose.Imaging.Shapes.PieShape(New Rectangle(New Point(250, 250), New Size(200, 200)), 0, 45))

'Add Figure object to GraphicsPath
        graphicspath.AddFigure(figure)

'Draw path with Pen object of color Black
        graphics.DrawPath(New Pen(Aspose.Imaging.Color.Black, 2), graphicspath)

' save all changes.
        image.Save()
    End Using
End Using</code></example>
    </member>
    <member name="M:Aspose.Imaging.GraphicsPath.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.GraphicsPath" /> class.
            </summary>
    </member>
    <member name="M:Aspose.Imaging.GraphicsPath.#ctor(Aspose.Imaging.Figure[])">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.GraphicsPath" /> class.
            </summary>
      <param name="figures">The figures to initialize from.</param>
    </member>
    <member name="M:Aspose.Imaging.GraphicsPath.#ctor(Aspose.Imaging.Figure[],Aspose.Imaging.FillMode)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.GraphicsPath" /> class.
            </summary>
      <param name="figures">The figures to initialize from.</param>
      <param name="fillMode">The fill mode.</param>
    </member>
    <member name="M:Aspose.Imaging.GraphicsPath.Reset">
      <summary>
            Empties the graphics path and sets the <see cref="T:Aspose.Imaging.FillMode" /> to <see cref="F:Aspose.Imaging.FillMode.Alternate" />.
            </summary>
    </member>
    <member name="M:Aspose.Imaging.GraphicsPath.Reverse">
      <summary>
            Reverses the order of figures, shapes, and points in each shape of this <see cref="T:Aspose.Imaging.GraphicsPath" />.
            </summary>
    </member>
    <member name="M:Aspose.Imaging.GraphicsPath.IsVisible(System.Single,System.Single)">
      <summary>
            Indicates whether the specified point is contained within this <see cref="T:Aspose.Imaging.GraphicsPath" />.
            </summary>
      <param name="x">The x-coordinate of the point to test.</param>
      <param name="y">The y-coordinate of the point to test.</param>
      <returns>
            This method returns true if the specified point is contained within this <see cref="T:Aspose.Imaging.GraphicsPath" />; otherwise, false.
            </returns>
    </member>
    <member name="M:Aspose.Imaging.GraphicsPath.IsVisible(Aspose.Imaging.PointF)">
      <summary>
            Indicates whether the specified point is contained within this <see cref="T:Aspose.Imaging.GraphicsPath" />.
            </summary>
      <param name="point">A <see cref="T:Aspose.Imaging.PointF" /> that represents the point to test.</param>
      <returns>
            This method returns true if the specified point is contained within this <see cref="T:Aspose.Imaging.GraphicsPath" />; otherwise, false.
            </returns>
    </member>
    <member name="M:Aspose.Imaging.GraphicsPath.IsVisible(System.Int32,System.Int32)">
      <summary>
            Indicates whether the specified point is contained within this <see cref="T:Aspose.Imaging.GraphicsPath" />.
            </summary>
      <param name="x">The x-coordinate of the point to test.</param>
      <param name="y">The y-coordinate of the point to test.</param>
      <returns>
            This method returns true if the specified point is contained within this <see cref="T:Aspose.Imaging.GraphicsPath" />; otherwise, false.
            </returns>
    </member>
    <member name="M:Aspose.Imaging.GraphicsPath.IsVisible(Aspose.Imaging.Point)">
      <summary>
            Indicates whether the specified point is contained within this <see cref="T:Aspose.Imaging.GraphicsPath" />.
            </summary>
      <param name="point">A <see cref="T:Aspose.Imaging.Point" /> that represents the point to test.</param>
      <returns>
            This method returns true if the specified point is contained within this <see cref="T:Aspose.Imaging.GraphicsPath" />; otherwise, false.
            </returns>
    </member>
    <member name="M:Aspose.Imaging.GraphicsPath.IsVisible(System.Single,System.Single,Aspose.Imaging.Graphics)">
      <summary>
            Indicates whether the specified point is contained within this <see cref="T:Aspose.Imaging.GraphicsPath" /> in the visible clip region of the specified <see cref="T:Aspose.Imaging.Graphics" />.
            </summary>
      <param name="x">The x-coordinate of the point to test.</param>
      <param name="y">The y-coordinate of the point to test.</param>
      <param name="graphics">The <see cref="T:Aspose.Imaging.Graphics" /> for which to test visibility.</param>
      <returns>
            This method returns true if the specified point is contained within this <see cref="T:Aspose.Imaging.GraphicsPath" />; otherwise, false.
            </returns>
    </member>
    <member name="M:Aspose.Imaging.GraphicsPath.IsVisible(Aspose.Imaging.PointF,Aspose.Imaging.Graphics)">
      <summary>
            Indicates whether the specified point is contained within this <see cref="T:Aspose.Imaging.GraphicsPath" />.
            </summary>
      <param name="pt">A <see cref="T:Aspose.Imaging.PointF" /> that represents the point to test.</param>
      <param name="graphics">The <see cref="T:Aspose.Imaging.Graphics" /> for which to test visibility.</param>
      <returns>
            This method returns true if the specified point is contained within this; otherwise, false.
            </returns>
    </member>
    <member name="M:Aspose.Imaging.GraphicsPath.IsVisible(System.Int32,System.Int32,Aspose.Imaging.Graphics)">
      <summary>
            Indicates whether the specified point is contained within this <see cref="T:Aspose.Imaging.GraphicsPath" />, using the specified <see cref="T:Aspose.Imaging.Graphics" />.
            </summary>
      <param name="x">The x-coordinate of the point to test.</param>
      <param name="y">The y-coordinate of the point to test.</param>
      <param name="graphics">The <see cref="T:Aspose.Imaging.Graphics" /> for which to test visibility.</param>
      <returns>
            This method returns true if the specified point is contained within this <see cref="T:Aspose.Imaging.GraphicsPath" />; otherwise, false.
            </returns>
    </member>
    <member name="M:Aspose.Imaging.GraphicsPath.IsVisible(Aspose.Imaging.Point,Aspose.Imaging.Graphics)">
      <summary>
            Indicates whether the specified point is contained within this <see cref="T:Aspose.Imaging.GraphicsPath" />.
            </summary>
      <param name="pt">A <see cref="T:Aspose.Imaging.Point" /> that represents the point to test.</param>
      <param name="graphics">The <see cref="T:Aspose.Imaging.Graphics" /> for which to test visibility.</param>
      <returns>
            This method returns true if the specified point is contained within this <see cref="T:Aspose.Imaging.GraphicsPath" />; otherwise, false.
            </returns>
    </member>
    <member name="M:Aspose.Imaging.GraphicsPath.IsOutlineVisible(System.Single,System.Single,Aspose.Imaging.Pen)">
      <summary>
            Indicates whether the specified point is contained within (under) the outline of this <see cref="T:Aspose.Imaging.GraphicsPath" /> when drawn with the specified <see cref="T:Aspose.Imaging.Pen" />.
            </summary>
      <param name="x">The x-coordinate of the point to test.</param>
      <param name="y">The y-coordinate of the point to test.</param>
      <param name="pen">The <see cref="T:Aspose.Imaging.Pen" /> to test.</param>
      <returns>
            This method returns true if the specified point is contained within the outline of this <see cref="T:Aspose.Imaging.GraphicsPath" /> when drawn with the specified <see cref="T:Aspose.Imaging.Pen" />; otherwise, false.
            </returns>
    </member>
    <member name="M:Aspose.Imaging.GraphicsPath.IsOutlineVisible(Aspose.Imaging.PointF,Aspose.Imaging.Pen)">
      <summary>
            Indicates whether the specified point is contained within (under) the outline of this <see cref="T:Aspose.Imaging.GraphicsPath" /> when drawn with the specified <see cref="T:Aspose.Imaging.Pen" />.
            </summary>
      <param name="point">A <see cref="T:Aspose.Imaging.PointF" /> that specifies the location to test.</param>
      <param name="pen">The <see cref="T:Aspose.Imaging.Pen" /> to test.</param>
      <returns>
            This method returns true if the specified point is contained within the outline of this <see cref="T:Aspose.Imaging.GraphicsPath" /> when drawn with the specified <see cref="T:Aspose.Imaging.Pen" />; otherwise, false.
            </returns>
    </member>
    <member name="M:Aspose.Imaging.GraphicsPath.IsOutlineVisible(System.Single,System.Single,Aspose.Imaging.Pen,Aspose.Imaging.Graphics)">
      <summary>
            Indicates whether the specified point is contained within (under) the outline of this <see cref="T:Aspose.Imaging.GraphicsPath" /> when drawn with the specified <see cref="T:Aspose.Imaging.Pen" /> and using the specified <see cref="T:Aspose.Imaging.Graphics" />.
            </summary>
      <param name="x">The x-coordinate of the point to test.</param>
      <param name="y">The y-coordinate of the point to test.</param>
      <param name="pen">The <see cref="T:Aspose.Imaging.Pen" /> to test.</param>
      <param name="graphics">The <see cref="T:Aspose.Imaging.Graphics" /> for which to test visibility.</param>
      <returns>
            This method returns true if the specified point is contained within (under) the outline of this <see cref="T:Aspose.Imaging.GraphicsPath" /> as drawn with the specified <see cref="T:Aspose.Imaging.Pen" />; otherwise, false.
            </returns>
    </member>
    <member name="M:Aspose.Imaging.GraphicsPath.IsOutlineVisible(Aspose.Imaging.PointF,Aspose.Imaging.Pen,Aspose.Imaging.Graphics)">
      <summary>
            Indicates whether the specified point is contained within (under) the outline of this <see cref="T:Aspose.Imaging.GraphicsPath" /> when drawn with the specified <see cref="T:Aspose.Imaging.Pen" /> and using the specified <see cref="T:Aspose.Imaging.Graphics" />.
            </summary>
      <param name="pt">A <see cref="T:Aspose.Imaging.PointF" /> that specifies the location to test.</param>
      <param name="pen">The <see cref="T:Aspose.Imaging.Pen" /> to test.</param>
      <param name="graphics">The <see cref="T:Aspose.Imaging.Graphics" /> for which to test visibility.</param>
      <returns>
            This method returns true if the specified point is contained within (under) the outline of this <see cref="T:Aspose.Imaging.GraphicsPath" /> as drawn with the specified <see cref="T:Aspose.Imaging.Pen" />; otherwise, false.
            </returns>
    </member>
    <member name="M:Aspose.Imaging.GraphicsPath.IsOutlineVisible(System.Int32,System.Int32,Aspose.Imaging.Pen)">
      <summary>
            Indicates whether the specified point is contained within (under) the outline of this <see cref="T:Aspose.Imaging.GraphicsPath" /> when drawn with the specified <see cref="T:Aspose.Imaging.Pen" />.
            </summary>
      <param name="x">The x-coordinate of the point to test.</param>
      <param name="y">The y-coordinate of the point to test.</param>
      <param name="pen">The <see cref="T:Aspose.Imaging.Pen" /> to test.</param>
      <returns>
            This method returns true if the specified point is contained within the outline of this <see cref="T:Aspose.Imaging.GraphicsPath" /> when drawn with the specified <see cref="T:Aspose.Imaging.Pen" />; otherwise, false.
            </returns>
    </member>
    <member name="M:Aspose.Imaging.GraphicsPath.IsOutlineVisible(Aspose.Imaging.Point,Aspose.Imaging.Pen)">
      <summary>
            Indicates whether the specified point is contained within (under) the outline of this <see cref="T:Aspose.Imaging.GraphicsPath" /> when drawn with the specified <see cref="T:Aspose.Imaging.Pen" />.
            </summary>
      <param name="point">A <see cref="T:Aspose.Imaging.Point" /> that specifies the location to test.</param>
      <param name="pen">The <see cref="T:Aspose.Imaging.Pen" /> to test.</param>
      <returns>
            This method returns true if the specified point is contained within the outline of this <see cref="T:Aspose.Imaging.GraphicsPath" /> when drawn with the specified <see cref="T:Aspose.Imaging.Pen" />; otherwise, false.
            </returns>
    </member>
    <member name="M:Aspose.Imaging.GraphicsPath.IsOutlineVisible(System.Int32,System.Int32,Aspose.Imaging.Pen,Aspose.Imaging.Graphics)">
      <summary>
            Indicates whether the specified point is contained within (under) the outline of this <see cref="T:Aspose.Imaging.GraphicsPath" /> when drawn with the specified <see cref="T:Aspose.Imaging.Pen" /> and using the specified <see cref="T:Aspose.Imaging.Graphics" />.
            </summary>
      <param name="x">The x-coordinate of the point to test.</param>
      <param name="y">The y-coordinate of the point to test.</param>
      <param name="pen">The <see cref="T:Aspose.Imaging.Pen" /> to test.</param>
      <param name="graphics">The <see cref="T:Aspose.Imaging.Graphics" /> for which to test visibility.</param>
      <returns>
            This method returns true if the specified point is contained within the outline of this <see cref="T:Aspose.Imaging.GraphicsPath" /> as drawn with the specified <see cref="T:Aspose.Imaging.Pen" />; otherwise, false.
            </returns>
    </member>
    <member name="M:Aspose.Imaging.GraphicsPath.IsOutlineVisible(Aspose.Imaging.Point,Aspose.Imaging.Pen,Aspose.Imaging.Graphics)">
      <summary>
            Indicates whether the specified point is contained within (under) the outline of this <see cref="T:Aspose.Imaging.GraphicsPath" /> when drawn with the specified <see cref="T:Aspose.Imaging.Pen" /> and using the specified <see cref="T:Aspose.Imaging.Graphics" />.
            </summary>
      <param name="pt">A <see cref="T:Aspose.Imaging.Point" /> that specifies the location to test.</param>
      <param name="pen">The <see cref="T:Aspose.Imaging.Pen" /> to test.</param>
      <param name="graphics">The <see cref="T:Aspose.Imaging.Graphics" /> for which to test visibility.</param>
      <returns>
            This method returns true if the specified point is contained within the outline of this <see cref="T:Aspose.Imaging.GraphicsPath" /> as drawn with the specified <see cref="T:Aspose.Imaging.Pen" />; otherwise, false.
            </returns>
    </member>
    <member name="M:Aspose.Imaging.GraphicsPath.Flatten">
      <summary>
            Converts each curve in this path into a sequence of connected line segments.
            </summary>
    </member>
    <member name="M:Aspose.Imaging.GraphicsPath.Flatten(Aspose.Imaging.Matrix)">
      <summary>
            Applies the specified transform and then converts each curve in this <see cref="T:Aspose.Imaging.GraphicsPath" /> into a sequence of connected line segments.
            </summary>
      <param name="matrix">A <see cref="T:Aspose.Imaging.Matrix" /> by which to transform this <see cref="T:Aspose.Imaging.GraphicsPath" /> before flattening.</param>
    </member>
    <member name="M:Aspose.Imaging.GraphicsPath.Flatten(Aspose.Imaging.Matrix,System.Single)">
      <summary>
            Converts each curve in this <see cref="T:Aspose.Imaging.GraphicsPath" /> into a sequence of connected line segments.
            </summary>
      <param name="matrix">A <see cref="T:Aspose.Imaging.Matrix" /> by which to transform this <see cref="T:Aspose.Imaging.GraphicsPath" /> before flattening.</param>
      <param name="flatness">Specifies the maximum permitted error between the curve and its flattened approximation. A value of 0.25 is the default. Reducing the flatness value will increase the number of line segments in the approximation.</param>
    </member>
    <member name="M:Aspose.Imaging.GraphicsPath.Widen(Aspose.Imaging.Pen)">
      <summary>
            Adds an additional outline to the path.
            </summary>
      <param name="pen">A <see cref="T:Aspose.Imaging.Pen" /> that specifies the width between the original outline of the path and the new outline this method creates.</param>
    </member>
    <member name="M:Aspose.Imaging.GraphicsPath.Widen(Aspose.Imaging.Pen,Aspose.Imaging.Matrix)">
      <summary>
            Adds an additional outline to the <see cref="T:Aspose.Imaging.GraphicsPath" />.
            </summary>
      <param name="pen">A <see cref="T:Aspose.Imaging.Pen" /> that specifies the width between the original outline of the path and the new outline this method creates.</param>
      <param name="matrix">A <see cref="T:Aspose.Imaging.Matrix" /> that specifies a transform to apply to the path before widening.</param>
    </member>
    <member name="M:Aspose.Imaging.GraphicsPath.Widen(Aspose.Imaging.Pen,Aspose.Imaging.Matrix,System.Single)">
      <summary>
            Replaces this <see cref="T:Aspose.Imaging.GraphicsPath" /> with curves that enclose the area that is filled when this path is drawn by the specified pen.
            </summary>
      <param name="pen">A <see cref="T:Aspose.Imaging.Pen" /> that specifies the width between the original outline of the path and the new outline this method creates.</param>
      <param name="matrix">A <see cref="T:Aspose.Imaging.Matrix" /> that specifies a transform to apply to the path before widening.</param>
      <param name="flatness">A value that specifies the flatness for curves.</param>
    </member>
    <member name="M:Aspose.Imaging.GraphicsPath.Warp(Aspose.Imaging.PointF[],Aspose.Imaging.RectangleF)">
      <summary>
            Applies a warp transform, defined by a rectangle and a parallelogram, to this <see cref="T:Aspose.Imaging.GraphicsPath" />.
            </summary>
      <param name="destPoints">An array of <see cref="T:Aspose.Imaging.PointF" /> structures that define a parallelogram to which the rectangle defined by <paramref name="srcRect" /> is transformed. The array can contain either three or four elements. If the array contains three elements, the lower-right corner of the parallelogram is implied by the first three points.</param>
      <param name="srcRect">A <see cref="T:Aspose.Imaging.RectangleF" /> that represents the rectangle that is transformed to the parallelogram defined by <paramref name="destPoints" />.</param>
    </member>
    <member name="M:Aspose.Imaging.GraphicsPath.Warp(Aspose.Imaging.PointF[],Aspose.Imaging.RectangleF,Aspose.Imaging.Matrix)">
      <summary>
            Applies a warp transform, defined by a rectangle and a parallelogram, to this <see cref="T:Aspose.Imaging.GraphicsPath" />.
            </summary>
      <param name="destPoints">An array of <see cref="T:Aspose.Imaging.PointF" /> structures that define a parallelogram to which the rectangle defined by <paramref name="srcRect" /> is transformed. The array can contain either three or four elements. If the array contains three elements, the lower-right corner of the parallelogram is implied by the first three points.</param>
      <param name="srcRect">A <see cref="T:Aspose.Imaging.RectangleF" /> that represents the rectangle that is transformed to the parallelogram defined by <paramref name="destPoints" />.</param>
      <param name="matrix">A <see cref="T:Aspose.Imaging.Matrix" /> that specifies a geometric transform to apply to the path.</param>
    </member>
    <member name="M:Aspose.Imaging.GraphicsPath.Warp(Aspose.Imaging.PointF[],Aspose.Imaging.RectangleF,Aspose.Imaging.Matrix,Aspose.Imaging.WarpMode)">
      <summary>
            Applies a warp transform, defined by a rectangle and a parallelogram, to this <see cref="T:Aspose.Imaging.GraphicsPath" />.
            </summary>
      <param name="destPoints">An array of <see cref="T:Aspose.Imaging.PointF" /> structures that defines a parallelogram to which the rectangle defined by <paramref name="srcRect" /> is transformed. The array can contain either three or four elements. If the array contains three elements, the lower-right corner of the parallelogram is implied by the first three points.</param>
      <param name="srcRect">A <see cref="T:Aspose.Imaging.RectangleF" /> that represents the rectangle that is transformed to the parallelogram defined by <paramref name="destPoints" />.</param>
      <param name="matrix">A <see cref="T:Aspose.Imaging.Matrix" /> that specifies a geometric transform to apply to the path.</param>
      <param name="warpMode">A <see cref="T:Aspose.Imaging.WarpMode" /> enumeration that specifies whether this warp operation uses perspective or bilinear mode.</param>
    </member>
    <member name="M:Aspose.Imaging.GraphicsPath.Warp(Aspose.Imaging.PointF[],Aspose.Imaging.RectangleF,Aspose.Imaging.Matrix,Aspose.Imaging.WarpMode,System.Single)">
      <summary>
            Applies a warp transform, defined by a rectangle and a parallelogram, to this <see cref="T:Aspose.Imaging.GraphicsPath" />.
            </summary>
      <param name="destPoints">An array of <see cref="T:Aspose.Imaging.PointF" /> structures that define a parallelogram to which the rectangle defined by <paramref name="srcRect" /> is transformed. The array can contain either three or four elements. If the array contains three elements, the lower-right corner of the parallelogram is implied by the first three points.</param>
      <param name="srcRect">A <see cref="T:Aspose.Imaging.RectangleF" /> that represents the rectangle that is transformed to the parallelogram defined by <paramref name="destPoints" />.</param>
      <param name="matrix">A <see cref="T:Aspose.Imaging.Matrix" /> that specifies a geometric transform to apply to the path.</param>
      <param name="warpMode">A <see cref="T:Aspose.Imaging.WarpMode" /> enumeration that specifies whether this warp operation uses perspective or bilinear mode.</param>
      <param name="flatness">A value from 0 through 1 that specifies how flat the resulting path is. For more information, see the <see cref="M:Aspose.Imaging.GraphicsPath.Flatten" /> methods.</param>
    </member>
    <member name="M:Aspose.Imaging.GraphicsPath.AddFigure(Aspose.Imaging.Figure)">
      <summary>
            Adds a new figure.
            </summary>
      <param name="figure">The figure to add.</param>
      <example>This examples make use of GraphicsPath and Graphics class to create and manipulate Figures on an Image surface. Example creates a new Image (of type Tiff) and draw paths with the help of GraphicsPath class. At the end DrawPath method exposed by Graphics class is called to render the paths on surface.<code>[C#]

//Create an instance of memory stream
using (MemoryStream stream = new MemoryStream())
{
    //Create an instance of TiffOptions and set its various properties
    Aspose.Imaging.ImageOptions.TiffOptions tiffOptions = new Aspose.Imaging.ImageOptions.TiffOptions();
        
    //Set the source for the instance of ImageOptions
    tiffOptions.Source = new Aspose.Imaging.Sources.StreamSource(stream);

    //Create an instance of Image 
    using (Aspose.Imaging.Image image = Aspose.Imaging.Image.Create(tiffOptions, 500, 500))
    {
        //Create and initialize an instance of Graphics class
        Aspose.Imaging.Graphics graphics = new Aspose.Imaging.Graphics(image);

        //Clear Graphics surface
        graphics.Clear(Color.Wheat);

        //Create an instance of GraphicsPath class
        Aspose.Imaging.GraphicsPath graphicspath = new Aspose.Imaging.GraphicsPath();

        //Create an instance of Figure class
        Aspose.Imaging.Figure figure = new Aspose.Imaging.Figure();

        //Add Shapes to Figure object
        figure.AddShape(new Aspose.Imaging.Shapes.RectangleShape(new RectangleF(10, 10, 300, 300)));
        figure.AddShape(new Aspose.Imaging.Shapes.EllipseShape(new RectangleF(50, 50, 300, 300)));
        figure.AddShape(new Aspose.Imaging.Shapes.PieShape(new Rectangle(new Point(250, 250), new Size(200, 200)), 0, 45));

        //Add Figure object to GraphicsPath
        graphicspath.AddFigure(figure);

        //Draw path with Pen object of color Black
        graphics.DrawPath(new Pen(Aspose.Imaging.Color.Black, 2), graphicspath);

        // save all changes.
        image.Save();
    }
}</code><code>[Visual Basic]

'Create an instance of memory stream
Using stream As MemoryStream = New MemoryStream()
'Create an instance of TiffOptions and set its various properties
Dim tiffOptions As Aspose.Imaging.ImageOptions.TiffOptions = New Aspose.Imaging.ImageOptions.TiffOptions()

'Set the source for the instance of ImageOptions
    tiffOptions.Source = New Aspose.Imaging.Sources.StreamSource(stream)

'Create an instance of Image 
    Using image As Aspose.Imaging.Image = Aspose.Imaging.Image.Create(tiffOptions, 500, 500)
'Create and initialize an instance of Graphics class
Dim graphics As Aspose.Imaging.Graphics = New Aspose.Imaging.Graphics(image)

'Clear Graphics surface
        graphics.Clear(Color.Wheat)

'Create an instance of GraphicsPath class
Dim graphicspath As Aspose.Imaging.GraphicsPath = New Aspose.Imaging.GraphicsPath()

'Create an instance of Figure class
Dim figure As Aspose.Imaging.Figure = New Aspose.Imaging.Figure()

'Add Shapes to Figure object
        figure.AddShape(New Aspose.Imaging.Shapes.RectangleShape(New RectangleF(10, 10, 300, 300)))
        figure.AddShape(New Aspose.Imaging.Shapes.EllipseShape(New RectangleF(50, 50, 300, 300)))
        figure.AddShape(New Aspose.Imaging.Shapes.PieShape(New Rectangle(New Point(250, 250), New Size(200, 200)), 0, 45))

'Add Figure object to GraphicsPath
        graphicspath.AddFigure(figure)

'Draw path with Pen object of color Black
        graphics.DrawPath(New Pen(Aspose.Imaging.Color.Black, 2), graphicspath)

' save all changes.
        image.Save()
    End Using
End Using</code></example>
    </member>
    <member name="M:Aspose.Imaging.GraphicsPath.AddFigures(Aspose.Imaging.Figure[])">
      <summary>
            Adds new figures.
            </summary>
      <param name="figures">The figures to add.</param>
      <example>This example creates a new Image and draws a variety of shapes using Figures and GraphicsPath on the Image surface<code>[C#]

//Creates an instance of BmpOptions and set its various properties            
Aspose.Imaging.ImageOptions.BmpOptions bmpOptions = new Aspose.Imaging.ImageOptions.BmpOptions();
bmpOptions.BitsPerPixel = 24;

// create a new source based on memory stream.
bmpOptions.Source = new Aspose.Imaging.Sources.StreamSource(new System.IO.MemoryStream(), true);

//Create an instance of Image 
using (Aspose.Imaging.Image image = Aspose.Imaging.Image.Create(bmpOptions, 500, 500))
{
    //Create and initialize an instance of Graphics class
    Aspose.Imaging.Graphics graphics = new Aspose.Imaging.Graphics(image);

    //Clear Graphics surface
    graphics.Clear(Color.Wheat);

    //Create an instance of GraphicsPath class
    Aspose.Imaging.GraphicsPath graphicspath = new Aspose.Imaging.GraphicsPath();

    //Create an instance of Figure class
    Aspose.Imaging.Figure figure1 = new Aspose.Imaging.Figure();

    //Add Shape to Figure object
    figure1.AddShape(new Aspose.Imaging.Shapes.EllipseShape(new RectangleF(50, 50, 300, 300)));
    figure1.AddShape(new Aspose.Imaging.Shapes.PieShape(new Rectangle(new Point(110, 110), new Size(200, 200)), 0, 90));

    //Create an instance of Figure class
    Aspose.Imaging.Figure figure2 = new Aspose.Imaging.Figure();

    //Add Shape to Figure object
    figure2.AddShape(new Aspose.Imaging.Shapes.ArcShape(new RectangleF(10, 10, 300, 300), 0, 45));
    figure2.AddShape(new Aspose.Imaging.Shapes.PolygonShape(new[] { new PointF(150, 10), new PointF(150, 200), new PointF(250, 300), new PointF(350, 400) }, true));
    figure2.AddShape(new Aspose.Imaging.Shapes.RectangleShape(new Rectangle(new Point(250, 250), new Size(200, 200))));

    //Add Figure object to GraphicsPath
    graphicspath.AddFigures(new[] { figure1, figure2 });

    //Draw path with Pen object of color Black
    graphics.DrawPath(new Pen(Aspose.Imaging.Color.Black, 2), graphicspath);

    // save all changes.
    image.Save();
}</code><code>[Visual Basic]

'Creates an instance of BmpOptions and set its various properties            
Dim bmpOptions As Aspose.Imaging.ImageOptions.BmpOptions = New Aspose.Imaging.ImageOptions.BmpOptions()
bmpOptions.BitsPerPixel = 24

' create a new source based on memory stream.
bmpOptions.Source = New Aspose.Imaging.Sources.StreamSource(New System.IO.MemoryStream(), True)

'Create an instance of Image 
Using image As Aspose.Imaging.Image = Aspose.Imaging.Image.Create(bmpOptions, 500, 500)
'Create and initialize an instance of Graphics class
Dim graphics As Aspose.Imaging.Graphics = New Aspose.Imaging.Graphics(image)

'Clear Graphics surface
    graphics.Clear(Color.Wheat)

'Create an instance of GraphicsPath class
Dim graphicspath As Aspose.Imaging.GraphicsPath = New Aspose.Imaging.GraphicsPath()

'Create an instance of Figure class
Dim figure1 As Aspose.Imaging.Figure = New Aspose.Imaging.Figure()

'Add Shape to Figure object
    figure1.AddShape(New Aspose.Imaging.Shapes.EllipseShape(New RectangleF(50, 50, 300, 300)))
    figure1.AddShape(New Aspose.Imaging.Shapes.PieShape(New Rectangle(New Point(110, 110), New Size(200, 200)), 0, 90))

'Create an instance of Figure class
Dim figure2 As Aspose.Imaging.Figure = New Aspose.Imaging.Figure()

'Add Shape to Figure object
    figure2.AddShape(New Aspose.Imaging.Shapes.ArcShape(New RectangleF(10, 10, 300, 300), 0, 45))
    figure2.AddShape(New Aspose.Imaging.Shapes.PolygonShape(New() { New PointF(150, 10), New PointF(150, 200), New PointF(250, 300), New PointF(350, 400) }, True))
    figure2.AddShape(New Aspose.Imaging.Shapes.RectangleShape(New Rectangle(New Point(250, 250), New Size(200, 200))))

'Add Figure object to GraphicsPath
    graphicspath.AddFigures(New() { figure1, figure2 })

'Draw path with Pen object of color Black
    graphics.DrawPath(New Pen(Aspose.Imaging.Color.Black, 2), graphicspath)

' save all changes.
    image.Save()
End Using</code></example>
    </member>
    <member name="M:Aspose.Imaging.GraphicsPath.RemoveFigure(Aspose.Imaging.Figure)">
      <summary>
            Removes a figure.
            </summary>
      <param name="figure">The figure to remove.</param>
    </member>
    <member name="M:Aspose.Imaging.GraphicsPath.RemoveFigures(Aspose.Imaging.Figure[])">
      <summary>
            Removes figures.
            </summary>
      <param name="figures">The figures to remove.</param>
    </member>
    <member name="M:Aspose.Imaging.GraphicsPath.AddPath(Aspose.Imaging.GraphicsPath)">
      <summary>
            Appends the specified <see cref="T:Aspose.Imaging.GraphicsPath" /> to this path.
            </summary>
      <param name="addingPath">The <see cref="T:Aspose.Imaging.GraphicsPath" /> to add.</param>
    </member>
    <member name="M:Aspose.Imaging.GraphicsPath.AddPath(Aspose.Imaging.GraphicsPath,System.Boolean)">
      <summary>
            Appends the specified <see cref="T:Aspose.Imaging.GraphicsPath" /> to this path.
            </summary>
      <param name="addingPath">The <see cref="T:Aspose.Imaging.GraphicsPath" /> to add.</param>
      <param name="connect">A Boolean value that specifies whether the first figure in the added path is part of the last figure in this path. A value of true specifies that the first figure in the added path is part of the last figure in this path. A value of false specifies that the first figure in the added path is separate from the last figure in this path.</param>
    </member>
    <member name="M:Aspose.Imaging.GraphicsPath.GetBounds(Aspose.Imaging.Matrix)">
      <summary>
            Gets the object's bounds.
            </summary>
      <param name="matrix">The matrix to apply before bounds will be calculated.</param>
      <returns>The estimated object's bounds.</returns>
    </member>
    <member name="M:Aspose.Imaging.GraphicsPath.GetBounds(Aspose.Imaging.Matrix,Aspose.Imaging.Pen)">
      <summary>
            Gets the object's bounds.
            </summary>
      <param name="matrix">The matrix to apply before bounds will be calculated.</param>
      <param name="pen">The pen to use for object. This can influence the object's bounds size.</param>
      <returns>The estimated object's bounds.</returns>
    </member>
    <member name="M:Aspose.Imaging.GraphicsPath.DeepClone">
      <summary>
            Performs a deep clone of this graphics path.
            </summary>
      <returns>A deep clone of the graphics path.</returns>
    </member>
    <member name="M:Aspose.Imaging.GraphicsPath.Transform(Aspose.Imaging.Matrix)">
      <summary>
            Applies the specified transformation to the shape.
            </summary>
      <param name="transform">The transformation to apply.</param>
    </member>
    <member name="P:Aspose.Imaging.GraphicsPath.FillMode">
      <summary>
            Gets or sets a <see cref="T:Aspose.Imaging.FillMode" /> enumeration that determines how the interiors of shapes in this <see cref="T:Aspose.Imaging.GraphicsPath" /> are filled.
            </summary>
      <value>The fill mode.</value>
      <returns>
            A <see cref="T:Aspose.Imaging.FillMode" /> enumeration that specifies how the interiors of shapes in this <see cref="T:Aspose.Imaging.GraphicsPath" /> are filled.
            </returns>
      <PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
      </PermissionSet>
    </member>
    <member name="P:Aspose.Imaging.GraphicsPath.Figures">
      <summary>
            Gets the path figures.
            </summary>
      <value>The path figures.</value>
    </member>
    <member name="P:Aspose.Imaging.GraphicsPath.Bounds">
      <summary>
            Gets or sets the object's bounds.
            </summary>
      <value>The object's bounds.</value>
    </member>
    <member name="T:Aspose.Imaging.GraphicsUnit">
      <summary>
            Specifies the unit of measure for the given data.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.GraphicsUnit.World">
      <summary>
            Specifies the world coordinate system unit as the unit of measure.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.GraphicsUnit.Display">
      <summary>
            Specifies the unit of measure of the display device. Typically pixels for video displays, and 1/100 inch for printers.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.GraphicsUnit.Pixel">
      <summary>
            Specifies a device pixel as the unit of measure.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.GraphicsUnit.Point">
      <summary>
            Specifies a printer's point (1/72 inch) as the unit of measure.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.GraphicsUnit.Inch">
      <summary>
            Specifies the inch as the unit of measure.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.GraphicsUnit.Document">
      <summary>
            Specifies the document unit (1/300 inch) as the unit of measure.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.GraphicsUnit.Millimeter">
      <summary>
            Specifies the millimeter as the unit of measure.
            </summary>
    </member>
    <member name="T:Aspose.Imaging.HatchStyle">
      <summary>
            Specifies the different patterns available for <see cref="T:Aspose.Imaging.Brushes.HatchBrush" /> objects.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.HatchStyle.Horizontal">
      <summary>
            A pattern of horizontal lines.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.HatchStyle.Min">
      <summary>
            Specifies hatch style Horizontal.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.HatchStyle.Vertical">
      <summary>
            A pattern of vertical lines.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.HatchStyle.ForwardDiagonal">
      <summary>
            A pattern of lines on a diagonal from upper left to lower right.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.HatchStyle.BackwardDiagonal">
      <summary>
            A pattern of lines on a diagonal from upper right to lower left.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.HatchStyle.Cross">
      <summary>
            Specifies horizontal and vertical lines that cross.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.HatchStyle.LargeGrid">
      <summary>
            Specifies the hatch style Cross.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.HatchStyle.Max">
      <summary>
            Specifies hatch style SolidDiamond.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.HatchStyle.DiagonalCross">
      <summary>
            A pattern of crisscross diagonal lines.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.HatchStyle.Percent05">
      <summary>
            Specifies a 5-percent hatch. The ratio of foreground color to background color is 5:95.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.HatchStyle.Percent10">
      <summary>
            Specifies a 10-percent hatch. The ratio of foreground color to background color is 10:90.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.HatchStyle.Percent20">
      <summary>
            Specifies a 20-percent hatch. The ratio of foreground color to background color is 20:80.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.HatchStyle.Percent25">
      <summary>
            Specifies a 25-percent hatch. The ratio of foreground color to background color is 25:75.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.HatchStyle.Percent30">
      <summary>
            Specifies a 30-percent hatch. The ratio of foreground color to background color is 30:70.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.HatchStyle.Percent40">
      <summary>
            Specifies a 40-percent hatch. The ratio of foreground color to background color is 40:60.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.HatchStyle.Percent50">
      <summary>
            Specifies a 50-percent hatch. The ratio of foreground color to background color is 50:50.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.HatchStyle.Percent60">
      <summary>
            Specifies a 60-percent hatch. The ratio of foreground color to background color is 60:40.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.HatchStyle.Percent70">
      <summary>
            Specifies a 70-percent hatch. The ratio of foreground color to background color is 70:30.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.HatchStyle.Percent75">
      <summary>
            Specifies a 75-percent hatch. The ratio of foreground color to background color is 75:25.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.HatchStyle.Percent80">
      <summary>
            Specifies a 80-percent hatch. The ratio of foreground color to background color is 80:100.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.HatchStyle.Percent90">
      <summary>
            Specifies a 90-percent hatch. The ratio of foreground color to background color is 90:10.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.HatchStyle.LightDownwardDiagonal">
      <summary>
            Specifies diagonal lines that slant to the right from top points to bottom points and are spaced 50 percent closer together than ForwardDiagonal, but are not antialiased.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.HatchStyle.LightUpwardDiagonal">
      <summary>
            Specifies diagonal lines that slant to the left from top points to bottom points and are spaced 50 percent closer together than BackwardDiagonal, but they are not antialiased.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.HatchStyle.DarkDownwardDiagonal">
      <summary>
            Specifies diagonal lines that slant to the right from top points to bottom points, are spaced 50 percent closer together than, and are twice the width of ForwardDiagonal. This hatch pattern is not antialiased.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.HatchStyle.DarkUpwardDiagonal">
      <summary>
            Specifies diagonal lines that slant to the left from top points to bottom points, are spaced 50 percent closer together than BackwardDiagonal, and are twice its width, but the lines are not antialiased.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.HatchStyle.WideDownwardDiagonal">
      <summary>
            Specifies diagonal lines that slant to the right from top points to bottom points, have the same spacing as hatch style ForwardDiagonal, and are triple its width, but are not antialiased.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.HatchStyle.WideUpwardDiagonal">
      <summary>
            Specifies diagonal lines that slant to the left from top points to bottom points, have the same spacing as hatch style BackwardDiagonal, and are triple its width, but are not antialiased.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.HatchStyle.LightVertical">
      <summary>
            Specifies vertical lines that are spaced 50 percent closer together than Vertical.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.HatchStyle.LightHorizontal">
      <summary>
            Specifies horizontal lines that are spaced 50 percent closer together than Horizontal.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.HatchStyle.NarrowVertical">
      <summary>
            Specifies vertical lines that are spaced 75 percent closer together than hatch style Vertical (or 25 percent closer together than LightVertical).
            </summary>
    </member>
    <member name="F:Aspose.Imaging.HatchStyle.NarrowHorizontal">
      <summary>
            Specifies horizontal lines that are spaced 75 percent closer together than hatch style Horizontal (or 25 percent closer together than LightHorizontal).
            </summary>
    </member>
    <member name="F:Aspose.Imaging.HatchStyle.DarkVertical">
      <summary>
            Specifies vertical lines that are spaced 50 percent closer together than Vertical and are twice its width.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.HatchStyle.DarkHorizontal">
      <summary>
            Specifies horizontal lines that are spaced 50 percent closer together than Horizontal and are twice the width of Horizontal.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.HatchStyle.DashedDownwardDiagonal">
      <summary>
            Specifies dashed diagonal lines, that slant to the right from top points to bottom points.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.HatchStyle.DashedUpwardDiagonal">
      <summary>
            Specifies dashed diagonal lines, that slant to the left from top points to bottom points.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.HatchStyle.DashedHorizontal">
      <summary>
            Specifies dashed horizontal lines.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.HatchStyle.DashedVertical">
      <summary>
            Specifies dashed vertical lines.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.HatchStyle.SmallConfetti">
      <summary>
            Specifies a hatch that has the appearance of confetti.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.HatchStyle.LargeConfetti">
      <summary>
            Specifies a hatch that has the appearance of confetti, and is composed of larger pieces than SmallConfetti.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.HatchStyle.ZigZag">
      <summary>
            Specifies horizontal lines that are composed of zigzags.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.HatchStyle.Wave">
      <summary>
            Specifies horizontal lines that are composed of tildes.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.HatchStyle.DiagonalBrick">
      <summary>
            Specifies a hatch that has the appearance of layered bricks that slant to the left from top points to bottom points.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.HatchStyle.HorizontalBrick">
      <summary>
            Specifies a hatch that has the appearance of horizontally layered bricks.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.HatchStyle.Weave">
      <summary>
            Specifies a hatch that has the appearance of a woven material.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.HatchStyle.Plaid">
      <summary>
            Specifies a hatch that has the appearance of a plaid material.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.HatchStyle.Divot">
      <summary>
            Specifies a hatch that has the appearance of divots.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.HatchStyle.DottedGrid">
      <summary>
            Specifies horizontal and vertical lines, each of which is composed of dots, that cross.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.HatchStyle.DottedDiamond">
      <summary>
            Specifies forward diagonal and backward diagonal lines, each of which is composed of dots, that cross.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.HatchStyle.Shingle">
      <summary>
            Specifies a hatch that has the appearance of diagonally layered shingles that slant to the right from top points to bottom points.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.HatchStyle.Trellis">
      <summary>
            Specifies a hatch that has the appearance of a trellis.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.HatchStyle.Sphere">
      <summary>
            Specifies a hatch that has the appearance of spheres laid adjacent to one another.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.HatchStyle.SmallGrid">
      <summary>
            Specifies horizontal and vertical lines that cross and are spaced 50 percent closer together than hatch style Cross.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.HatchStyle.SmallCheckerBoard">
      <summary>
            Specifies a hatch that has the appearance of a checkerboard.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.HatchStyle.LargeCheckerBoard">
      <summary>
            Specifies a hatch that has the appearance of a checkerboard with squares that are twice the size of SmallCheckerBoard.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.HatchStyle.OutlinedDiamond">
      <summary>
            Specifies forward diagonal and backward diagonal lines that cross but are not antialiased.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.HatchStyle.SolidDiamond">
      <summary>
            Specifies a hatch that has the appearance of a checkerboard placed diagonally.
            </summary>
    </member>
    <member name="T:Aspose.Imaging.HotkeyPrefix">
      <summary>
            Specifies the type of display for hot-key prefixes that relate to text.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.HotkeyPrefix.None">
      <summary>
            No hot-key prefix.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.HotkeyPrefix.Show">
      <summary>
            Display the hot-key prefix.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.HotkeyPrefix.Hide">
      <summary>
            Do not display the hot-key prefix.
            </summary>
    </member>
    <member name="T:Aspose.Imaging.ImageCreatorsRegistry">
      <summary>
            Represents the image creators registry.
            </summary>
    </member>
    <member name="M:Aspose.Imaging.ImageCreatorsRegistry.GetFirstSupportedDescriptor(Aspose.Imaging.ImageOptionsBase)">
      <summary>
            Gets the fist found supported descriptor suitable for the specified.
            </summary>
      <param name="imageOptions">The image options.</param>
      <returns>
            The creator descriptor which supports the specified or null if no such descriptor is found.
            </returns>
      <remarks>
            The first creator descriptor will be actually the last registered.
            </remarks>
    </member>
    <member name="M:Aspose.Imaging.ImageCreatorsRegistry.CreateFirstSupportedCreator(Aspose.Imaging.ImageOptionsBase)">
      <summary>
            Creates the first found creator suitable for the specified.
            </summary>
      <param name="imageOptions">The image options.</param>
      <returns>
            The creator which supports the specified or null if no such creator is found.
            </returns>
      <remarks>
            The first creator will be actually the last registered.
            </remarks>
    </member>
    <member name="M:Aspose.Imaging.ImageCreatorsRegistry.RegisterCreator(Aspose.Imaging.IImageCreatorDescriptor)">
      <summary>
            Registers the creator.
            </summary>
      <param name="creatorDescriptor">The creator descriptor to register.</param>
    </member>
    <member name="M:Aspose.Imaging.ImageCreatorsRegistry.UnregisterCreator(Aspose.Imaging.IImageCreatorDescriptor)">
      <summary>
            Unregisters the creator.
            </summary>
      <param name="creatorDescriptor">The creator descriptor.</param>
    </member>
    <member name="P:Aspose.Imaging.ImageCreatorsRegistry.RegisteredFormats">
      <summary>
            Gets the registered image creation formats.
            </summary>
      <value>The registered image creation formats.</value>
    </member>
    <member name="P:Aspose.Imaging.ImageCreatorsRegistry.RegisteredDescriptors">
      <summary>
            Gets the registered descriptors.
            </summary>
      <value>The registered descriptors.</value>
    </member>
    <member name="T:Aspose.Imaging.ImageExportersRegistry">
      <summary>
            Represents the image exporters registry.
            </summary>
    </member>
    <member name="M:Aspose.Imaging.ImageExportersRegistry.GetFirstSupportedDescriptor(Aspose.Imaging.Image,Aspose.Imaging.ImageOptionsBase)">
      <summary>
            Gets the fist found supported descriptor suitable for the specified save options and image.
            </summary>
      <param name="image">The image to export.</param>
      <param name="options">The options.</param>
      <returns>
            The exporter descriptor which supports the specified image and save options or null if no such descriptor is found.
            </returns>
      <remarks>
            The first exporter descriptor will be actually the last registered.
            </remarks>
    </member>
    <member name="M:Aspose.Imaging.ImageExportersRegistry.CreateFirstSupportedExporter(Aspose.Imaging.Image,Aspose.Imaging.ImageOptionsBase)">
      <summary>
            Creates the first found exporter suitable for the specified save options and image.
            </summary>
      <param name="image">The image to export.</param>
      <param name="options">The save options to use for export.</param>
      <returns>The exporter which supports the specified image and save options or null if no such exporter is found.</returns>
      <remarks>The first exporter will be actually the last registered.</remarks>
    </member>
    <member name="M:Aspose.Imaging.ImageExportersRegistry.RegisterExporter(Aspose.Imaging.IImageExporterDescriptor)">
      <summary>
            Registers the exporter.
            </summary>
      <param name="exporterDescriptor">The exporter descriptor to register.</param>
    </member>
    <member name="M:Aspose.Imaging.ImageExportersRegistry.UnregisterExporter(Aspose.Imaging.IImageExporterDescriptor)">
      <summary>
            Unregisters the exporter.
            </summary>
      <param name="exporterDescriptor">The exporter descriptor to unregister.</param>
    </member>
    <member name="P:Aspose.Imaging.ImageExportersRegistry.RegisteredFormats">
      <summary>
            Gets the registered export formats.
            </summary>
      <value>The registered export formats.</value>
    </member>
    <member name="P:Aspose.Imaging.ImageExportersRegistry.RegisteredExporterDescriptors">
      <summary>
            Gets the registered exporter descriptors.
            </summary>
      <value>The registered exporter descriptors.</value>
    </member>
    <member name="T:Aspose.Imaging.ImageLoadersRegistry">
      <summary>
            Represents the image loaders registry.
            </summary>
    </member>
    <member name="M:Aspose.Imaging.ImageLoadersRegistry.GetFirstSupportedDescriptorByTypeName(System.String)">
      <summary>
            Gets the first supported descriptor by its type name.
            </summary>
      <param name="descriptorTypeName">The descriptor type name.</param>
      <returns>The first found loader descriptor or null if not such descriptor is found.</returns>
      <remarks>The first loader descriptor will be actually the last registered.</remarks>
    </member>
    <member name="M:Aspose.Imaging.ImageLoadersRegistry.GetFirstSupportedDescriptor(System.IO.Stream,Aspose.Imaging.LoadOptions)">
      <summary>
            Gets the fist found supported descriptor suitable for the specified <paramref name="stream" /> and optionally the <paramref name="loadOptions" />.
            </summary>
      <param name="stream">The stream.</param>
      <param name="loadOptions">The load options.</param>
      <returns>
            The loader descriptor which supports the specified <paramref name="stream" /> and <paramref name="loadOptions" /> or null if no such descriptor is found.
            </returns>
      <remarks>The first loader descriptor will be actually the last registered.</remarks>
    </member>
    <member name="M:Aspose.Imaging.ImageLoadersRegistry.CreateFirstSupportedLoader(System.IO.Stream,Aspose.Imaging.LoadOptions)">
      <summary>
            Creates the first found loader suitable for the specified <paramref name="stream" /> and optionally the <paramref name="loadOptions" />.
            </summary>
      <param name="stream">The stream.</param>
      <param name="loadOptions">The load options.</param>
      <returns>
            The loader which supports the specified <paramref name="stream" /> and <paramref name="loadOptions" /> or null if no such loader is found.
            </returns>
      <remarks>The first loader will be actually the last registered.</remarks>
    </member>
    <member name="M:Aspose.Imaging.ImageLoadersRegistry.RegisterLoader(Aspose.Imaging.IImageLoaderDescriptor)">
      <summary>
            Registers the loader.
            </summary>
      <param name="loaderDescriptor">The loader descriptor to register.</param>
    </member>
    <member name="M:Aspose.Imaging.ImageLoadersRegistry.UnregisterLoader(Aspose.Imaging.IImageLoaderDescriptor)">
      <summary>
            Unregisters the loader.
            </summary>
      <param name="loaderDescriptor">The loader descriptor to unregister.</param>
    </member>
    <member name="P:Aspose.Imaging.ImageLoadersRegistry.RegisteredFormats">
      <summary>
            Gets the registered image loading formats.
            </summary>
      <value>The registered image loading formats.</value>
    </member>
    <member name="P:Aspose.Imaging.ImageLoadersRegistry.RegisteredDescriptors">
      <summary>
            Gets the registered descriptors.
            </summary>
      <value>The registered descriptors.</value>
    </member>
    <member name="T:Aspose.Imaging.LoadOptions">
      <summary>
            Represents the loading options.
            </summary>
    </member>
    <member name="P:Aspose.Imaging.LoadOptions.DataRecoveryMode">
      <summary>
            Gets or sets the data recovery mode.
            </summary>
      <value>
            The data recovery mode.
            </value>
    </member>
    <member name="P:Aspose.Imaging.LoadOptions.DataBackgroundColor">
      <summary>
            Gets or sets the <see cref="T:Aspose.Imaging.Image" /> background <see cref="T:Aspose.Imaging.Color" />.
            </summary>
      <value>
            The background color.
            </value>
      <remarks>Typically the background color is set whenever pixel value cannot be recovered due to data corruption.</remarks>
    </member>
    <member name="T:Aspose.Imaging.ImageOptionsBase">
      <summary>
            The image base options.
            </summary>
    </member>
    <member name="M:Aspose.Imaging.ImageOptionsBase.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.ImageOptionsBase" /> class.
            </summary>
    </member>
    <member name="M:Aspose.Imaging.ImageOptionsBase.#ctor(Aspose.Imaging.ImageOptionsBase)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.ImageOptionsBase" /> class.
            </summary>
      <param name="imageOptions">The image options.</param>
    </member>
    <member name="P:Aspose.Imaging.ImageOptionsBase.Source">
      <summary>
            Gets or sets the source to create image in.
            </summary>
      <value>The source to create image in.</value>
    </member>
    <member name="P:Aspose.Imaging.ImageOptionsBase.Palette">
      <summary>
            Gets or sets the color palette.
            </summary>
      <value> The color palette.</value>
    </member>
    <member name="P:Aspose.Imaging.ImageOptionsBase.ResolutionSettings">
      <summary>
            Gets or sets the resolution settings.
            </summary>
    </member>
    <member name="T:Aspose.Imaging.ImageOptions.BmpOptions">
      <summary>
            The bmp file format creation options.
            </summary>
      <example>This example creates a new Image file in memory as specified by Source property of the BmpOptions instance.<code>[C#]

//Creates an instance of BmpOptions and set its various properties
Aspose.Imaging.ImageOptions.BmpOptions bmpOptions = new Aspose.Imaging.ImageOptions.BmpOptions();
bmpOptions.BitsPerPixel = 24;
using (MemoryStream ms = new MemoryStream())
{
    //Create an instance of StreamSource and assign it as Source for the instance of BmpOptions
    bmpOptions.Source = new Aspose.Imaging.Sources.StreamSource(ms, false);

    //Creates an instance of Image 
    using (Aspose.Imaging.Image image = Aspose.Imaging.Image.Create(bmpOptions, 500, 500))
    {
        //do some image processing

        // save all changes
        image.Save();
    }
}</code><code>[Visual Basic]

'Creates an instance of BmpOptions and set its various properties
Dim bmpOptions As Aspose.Imaging.ImageOptions.BmpOptions = New Aspose.Imaging.ImageOptions.BmpOptions()
bmpOptions.BitsPerPixel = 24
Using ms As MemoryStream = New MemoryStream()
'Create an instance of StreamSource and assign it as Source for the instance of BmpOptions
    bmpOptions.Source = New Aspose.Imaging.Sources.StreamSource(ms, False)

'Creates an instance of Image 
    Using image As Aspose.Imaging.Image = Aspose.Imaging.Image.Create(bmpOptions, 500, 500)
'do some image processing

' save all changes
        image.Save()
    End Using
End Using</code></example>
      <example>This example demonstrates the use of different classes from SaveOptions Namespace for export purposes. An image of type Gif is loaded into an instance of Image and then exported out to several formats.<code>[C#]

//Load an existing image (of type Gif) in an instance of Image class
using (Aspose.Imaging.Image image = Aspose.Imaging.Image.Load(memoryStream))
{
    //Export to BMP file format using the default options
    image.Save(memoryStream1, new Aspose.Imaging.ImageOptions.BmpOptions());

    //Export to JPEG file format using the default options
    image.Save(memoryStream2, new Aspose.Imaging.ImageOptions.JpegOptions());
 
    //Export to PNG file format using the default options
    image.Save(memoryStream3, new Aspose.Imaging.ImageOptions.PngOptions());
 
    //Export to TIFF file format using the default options
    image.Save(memoryStream4, new Aspose.Imaging.ImageOptions.TiffOptions());
}</code><code>[Visual Basic]

'Load an existing image (of type Gif) in an instance of Image class
Using image As Aspose.Imaging.Image = Aspose.Imaging.Image.Load(memoryStream)
'Export to BMP file format using the default options
    image.Save(memoryStream1, New Aspose.Imaging.ImageOptions.BmpOptions())

'Export to JPEG file format using the default options
    image.Save(memoryStream2, New Aspose.Imaging.ImageOptions.JpegOptions())

'Export to PNG file format using the default options
    image.Save(memoryStream3, New Aspose.Imaging.ImageOptions.PngOptions())

'Export to TIFF file format using the default options
    image.Save(memoryStream4, New Aspose.Imaging.ImageOptions.TiffOptions())
End Using</code></example>
    </member>
    <member name="M:Aspose.Imaging.ImageOptions.BmpOptions.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.ImageOptions.BmpOptions" /> class.
            </summary>
    </member>
    <member name="M:Aspose.Imaging.ImageOptions.BmpOptions.#ctor(Aspose.Imaging.ImageOptions.BmpOptions)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.ImageOptions.BmpOptions" /> class.
            </summary>
      <param name="bmpOptions">The BMP options.</param>
    </member>
    <member name="P:Aspose.Imaging.ImageOptions.BmpOptions.BitsPerPixel">
      <summary>
            Gets or sets the image bits per pixel count.
            </summary>
      <value>The image bits per pixel count.</value>
    </member>
    <member name="P:Aspose.Imaging.ImageOptions.BmpOptions.Compression">
      <summary>
            Gets or sets the compression.
            </summary>
      <value>
            The compression.
            </value>
    </member>
    <member name="P:Aspose.Imaging.ImageOptions.BmpOptions.HorizontalResolution">
      <summary>
            Gets or sets the horizontal resolution. Note due to the rounding the resulting resolution may slightly differ from the passed.
            </summary>
      <value>
            The horizontal resolution.
            </value>
    </member>
    <member name="P:Aspose.Imaging.ImageOptions.BmpOptions.VerticalResolution">
      <summary>
            Gets or sets the vertical resolution. Note due to the rounding the resulting resolution may slightly differ from the passed.
            </summary>
      <value>
            The vertical resolution.
            </value>
    </member>
    <member name="T:Aspose.Imaging.ImageOptions.GifOptions">
      <summary>
            The gif file format creation options.
            </summary>
      <example>This example demonstrates the use of different classes from SaveOptions Namespace for export purposes. An image of type Gif is loaded into an instance of Image and then exported out to several formats.<code>[C#]

//Load an existing image (of type Gif) in an instance of Image class
using (Aspose.Imaging.Image image = Aspose.Imaging.Image.Load(memoryStream))
{
    //Export to BMP file format using the default options
    image.Save(memoryStream1, new Aspose.Imaging.ImageOptions.BmpOptions());

    //Export to JPEG file format using the default options
    image.Save(memoryStream2, new Aspose.Imaging.ImageOptions.JpegOptions());
 
    //Export to PNG file format using the default options
    image.Save(memoryStream3, new Aspose.Imaging.ImageOptions.PngOptions());
 
    //Export to TIFF file format using the default options
    image.Save(memoryStream4, new Aspose.Imaging.ImageOptions.TiffOptions());
}</code><code>[Visual Basic]

'Load an existing image (of type Gif) in an instance of Image class
Using image As Aspose.Imaging.Image = Aspose.Imaging.Image.Load(memoryStream)
'Export to BMP file format using the default options
    image.Save(memoryStream1, New Aspose.Imaging.ImageOptions.BmpOptions())

'Export to JPEG file format using the default options
    image.Save(memoryStream2, New Aspose.Imaging.ImageOptions.JpegOptions())

'Export to PNG file format using the default options
    image.Save(memoryStream3, New Aspose.Imaging.ImageOptions.PngOptions())

'Export to TIFF file format using the default options
    image.Save(memoryStream4, New Aspose.Imaging.ImageOptions.TiffOptions())
End Using</code></example>
      <example>This example shows how to Loads Pixel information in an Array of Type Color, manipulates the array and set it back to the image. To perform these operations, this example creates a new Image file (in GIF format) uisng MemoryStream object.<code>[C#]

//Create an instance of MemoryStream
using (System.IO.MemoryStream stream = new System.IO.MemoryStream())
{
    //Create an instance of GifOptions and set its various properties including the Source property
    Aspose.Imaging.ImageOptions.GifOptions gifOptions = new Aspose.Imaging.ImageOptions.GifOptions();
    gifOptions.Source = new Aspose.Imaging.Sources.StreamSource(stream);

    //Create an instance of Image
    using (Aspose.Imaging.RasterImage image = (Aspose.Imaging.RasterImage)Aspose.Imaging.Image.Create(gifOptions, 500, 500))
    {
        //Get the pixels of image by specifying the area as image boundary
        Aspose.Imaging.Color[] pixels = image.LoadPixels(image.Bounds);

        //Loop over the Array and sets color of alrenative indexed pixel
        for (int index = 0; index &lt; pixels.Length; index++)
        {
            if (index % 2 == 0)
            {
                //Set the indexed pixel color to yellow
                pixels[index] = Aspose.Imaging.Color.Yellow;
            }
            else
            {
                //Set the indexed pixel color to blue
                pixels[index] = Aspose.Imaging.Color.Blue;
            }
        }

        //Apply the pixel changes to the image
        image.SavePixels(image.Bounds, pixels);

        // save all changes.
        image.Save();
    }
}</code><code>[Visual Basic]

'Create an instance of MemoryStream
Using stream As System.IO.MemoryStream = New System.IO.MemoryStream()
'Create an instance of GifOptions and set its various properties including the Source property
Dim gifOptions As Aspose.Imaging.ImageOptions.GifOptions = New Aspose.Imaging.ImageOptions.GifOptions()
    gifOptions.Source = New Aspose.Imaging.Sources.StreamSource(stream)

'Create an instance of Image
    Using image As Aspose.Imaging.RasterImage = CType(Aspose.Imaging.Image.Create(gifOptions, 500, 500), Aspose.Imaging.RasterImage)
'Get the pixels of image by specifying the area as image boundary
Dim pixels As Aspose.Imaging.Color() = image.LoadPixels(image.Bounds)

'Loop over the Array and sets color of alrenative indexed pixel
Dim index As Integer = 0
        Do While index &lt; pixels.Length
            If index Mod 2 = 0 Then
'Set the indexed pixel color to yellow
                pixels(index) = Aspose.Imaging.Color.Yellow
            Else
'Set the indexed pixel color to blue
                pixels(index) = Aspose.Imaging.Color.Blue
            End If
            index += 1
        Loop

'Apply the pixel changes to the image
        image.SavePixels(image.Bounds, pixels)

' save all changes.
        image.Save()
    End Using
End Using</code></example>
    </member>
    <member name="M:Aspose.Imaging.ImageOptions.GifOptions.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.ImageOptions.GifOptions" /> class.
            </summary>
    </member>
    <member name="M:Aspose.Imaging.ImageOptions.GifOptions.#ctor(Aspose.Imaging.ImageOptions.GifOptions)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.ImageOptions.GifOptions" /> class.
            </summary>
      <param name="gifOptions">
            The GIF Options.
            </param>
    </member>
    <member name="P:Aspose.Imaging.ImageOptions.GifOptions.DoPaletteCorrection">
      <summary>
            Gets or sets a value indicating whether palette correction is applied.
            </summary>
      <value>
        <c>true</c> if palette correction is applied; otherwise, <c>false</c>.
            </value>
      <remarks>Palette correction means that whenever image is exported to GIF the source image colors will be analyzed
            in order to build the best matching palette (in case image Palette does not exist or not specified in the options).
            The analyze process takes some time however the output image will have the best matching color palette and result is visually better.</remarks>
    </member>
    <member name="P:Aspose.Imaging.ImageOptions.GifOptions.ColorResolution">
      <summary>
            Gets or sets the GIF color resolution.
            </summary>
      <value>
            The color resolution.
            </value>
      <remarks>
            Color Resolution - Number of bits per primary color available
            to the original image, minus 1. This value represents the size of
            the entire palette from which the colors in the graphic were
            selected, not the number of colors actually used in the graphic.
            For example, if the value in this field is 3, then the palette of
            the original image had 4 bits per primary color available to create
            the image.  This value should be set to indicate the richness of
            the original palette, even if not every color from the whole
            palette is available on the source machine.
            </remarks>
    </member>
    <member name="P:Aspose.Imaging.ImageOptions.GifOptions.IsPaletteSorted">
      <summary>
            Gets or sets a value indicating whether palette entries are sorted.
            </summary>
      <value>
        <c>true</c> if palette entries are sorted; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Aspose.Imaging.ImageOptions.GifOptions.PixelAspectRatio">
      <summary>
            Gets or sets the GIF pixel aspect ratio.
            </summary>
      <value>
            The GIF pixel aspect ratio.
            </value>
      <remarks>
            Pixel Aspect Ratio - Factor used to compute an approximation
            of the aspect ratio of the pixel in the original image.  If the
            value of the field is not 0, this approximation of the aspect ratio
            is computed based on the formula:
            Aspect Ratio = (Pixel Aspect Ratio + 15) / 64
            The Pixel Aspect Ratio is defined to be the quotient of the pixel's
            width over its height.  The value range in this field allows
            specification of the widest pixel of 4:1 to the tallest pixel of
            1:4 in increments of 1/64th.
            Values :
            0 -         No aspect ratio information is given.
            1..255 -    Value used in the computation.</remarks>
    </member>
    <member name="P:Aspose.Imaging.ImageOptions.GifOptions.BackgroundColorIndex">
      <summary>
            Gets or sets the GIF background color index.
            </summary>
      <value>
            The GIF background color index.
            </value>
    </member>
    <member name="P:Aspose.Imaging.ImageOptions.GifOptions.HasTrailer">
      <summary>
            Gets or sets a value indicating whether GIF has trailer.
            </summary>
      <value>
        <c>true</c> if GIF has trailer; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Aspose.Imaging.ImageOptions.GifOptions.Interlaced">
      <summary>
            True if image should be interlaced.
            </summary>
    </member>
    <member name="T:Aspose.Imaging.ImageOptions.JpegOptions">
      <summary>
                The jpeg file format create options.
            </summary>
      <example>This example demonstrates the use of System.IO.Stream to Create a new Image file (a JPEG type)<code>[C#]

//Define the source property for the instance of JpegOptions
//Second boolean parameter determines if the Stream is disposed once get out of scope
jpegOptions.Source = new Aspose.Imaging.Sources.StreamSource(new MemoryStream(), true);

//Creates an instance of Image and call Create method with JpegOptions as parameter to initialize the Image object   
using (Aspose.Imaging.Image image = Aspose.Imaging.Image.Create(jpegOptions, 500, 500))
{
    //do some image processing
}</code><code>[Visual Basic]

'Define the source property for the instance of JpegOptions
'Second boolean parameter determines if the Stream is disposed once get out of scope
jpegOptions.Source = New Aspose.Imaging.Sources.StreamSource(New MemoryStream(), True)

'Creates an instance of Image and call Create method with JpegOptions as parameter to initialize the Image object   
Using image As Aspose.Imaging.Image = Aspose.Imaging.Image.Create(jpegOptions, 500, 500)
'do some image processing
End Using</code></example>
      <example>This example demonstrates the use of different classes from SaveOptions Namespace for export purposes. An image of type Gif is loaded into an instance of Image and then exported out to several formats.<code>[C#]

//Load an existing image (of type Gif) in an instance of Image class
using (Aspose.Imaging.Image image = Aspose.Imaging.Image.Load(memoryStream))
{
    //Export to BMP file format using the default options
    image.Save(memoryStream1, new Aspose.Imaging.ImageOptions.BmpOptions());

    //Export to JPEG file format using the default options
    image.Save(memoryStream2, new Aspose.Imaging.ImageOptions.JpegOptions());
 
    //Export to PNG file format using the default options
    image.Save(memoryStream3, new Aspose.Imaging.ImageOptions.PngOptions());
 
    //Export to TIFF file format using the default options
    image.Save(memoryStream4, new Aspose.Imaging.ImageOptions.TiffOptions());
}</code><code>[Visual Basic]

'Load an existing image (of type Gif) in an instance of Image class
Using image As Aspose.Imaging.Image = Aspose.Imaging.Image.Load(memoryStream)
'Export to BMP file format using the default options
    image.Save(memoryStream1, New Aspose.Imaging.ImageOptions.BmpOptions())

'Export to JPEG file format using the default options
    image.Save(memoryStream2, New Aspose.Imaging.ImageOptions.JpegOptions())

'Export to PNG file format using the default options
    image.Save(memoryStream3, New Aspose.Imaging.ImageOptions.PngOptions())

'Export to TIFF file format using the default options
    image.Save(memoryStream4, New Aspose.Imaging.ImageOptions.TiffOptions())
End Using</code></example>
    </member>
    <member name="M:Aspose.Imaging.ImageOptions.JpegOptions.#ctor">
      <summary>
                Initializes a new instance of the <see cref="T:Aspose.Imaging.ImageOptions.JpegOptions" /> class.
            </summary>
    </member>
    <member name="M:Aspose.Imaging.ImageOptions.JpegOptions.#ctor(Aspose.Imaging.ImageOptions.JpegOptions)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.ImageOptions.JpegOptions" /> class.
            </summary>
      <param name="jpegOptions">
            The JPEG options.
            </param>
    </member>
    <member name="P:Aspose.Imaging.ImageOptions.JpegOptions.Jfif">
      <summary>
                Gets or sets the jfif.
            </summary>
    </member>
    <member name="P:Aspose.Imaging.ImageOptions.JpegOptions.Comment">
      <summary>
            Gets or sets the jpeg file comment.
            </summary>
    </member>
    <member name="P:Aspose.Imaging.ImageOptions.JpegOptions.ExifData">
      <summary>
            Get or set exif data container
            </summary>
    </member>
    <member name="P:Aspose.Imaging.ImageOptions.JpegOptions.CompressionType">
      <summary>
             Gets or sets the compression type.
            </summary>
    </member>
    <member name="P:Aspose.Imaging.ImageOptions.JpegOptions.ColorType">
      <summary>
            Gets or sets the color type for jpeg image.
            </summary>
    </member>
    <member name="P:Aspose.Imaging.ImageOptions.JpegOptions.Quality">
      <summary>
              Gets or sets image quality.
            </summary>
    </member>
    <member name="P:Aspose.Imaging.ImageOptions.JpegOptions.ScaledQuality">
      <summary>
                The scaled quality.
            </summary>
    </member>
    <member name="T:Aspose.Imaging.ImageOptions.NamespaceDoc">
      <summary>
            The namespace contains classes suitable for export, save or creation of different file formats.
            </summary>
    </member>
    <member name="T:Aspose.Imaging.ImageOptions.PngOptions">
      <summary>
            The png file format create options.
            </summary>
      <example>This example demonstrates the use of different classes from SaveOptions Namespace for export purposes. An image of type Gif is loaded into an instance of Image and then exported out to several formats.<code>[C#]

//Load an existing image (of type Gif) in an instance of Image class
using (Aspose.Imaging.Image image = Aspose.Imaging.Image.Load(memoryStream))
{
    //Export to BMP file format using the default options
    image.Save(memoryStream1, new Aspose.Imaging.ImageOptions.BmpOptions());

    //Export to JPEG file format using the default options
    image.Save(memoryStream2, new Aspose.Imaging.ImageOptions.JpegOptions());
 
    //Export to PNG file format using the default options
    image.Save(memoryStream3, new Aspose.Imaging.ImageOptions.PngOptions());
 
    //Export to TIFF file format using the default options
    image.Save(memoryStream4, new Aspose.Imaging.ImageOptions.TiffOptions());
}</code><code>[Visual Basic]

'Load an existing image (of type Gif) in an instance of Image class
Using image As Aspose.Imaging.Image = Aspose.Imaging.Image.Load(memoryStream)
'Export to BMP file format using the default options
    image.Save(memoryStream1, New Aspose.Imaging.ImageOptions.BmpOptions())

'Export to JPEG file format using the default options
    image.Save(memoryStream2, New Aspose.Imaging.ImageOptions.JpegOptions())

'Export to PNG file format using the default options
    image.Save(memoryStream3, New Aspose.Imaging.ImageOptions.PngOptions())

'Export to TIFF file format using the default options
    image.Save(memoryStream4, New Aspose.Imaging.ImageOptions.TiffOptions())
End Using</code></example>
      <example>This example uses Graphics class to create primitive shapes on the Image surface. To demonstrate the operation, the example creates a new Image in PNG format and draw primitive shapes on Image surface using Draw methods exposed by Graphics class<code>[C#]

//Create an instance of memory stream
using (MemoryStream ms = new MemoryStream())
{
    //Create an instance of PngOptions and set its various properties
    Aspose.Imaging.ImageOptions.PngOptions pngOptions = new Aspose.Imaging.ImageOptions.PngOptions();

    //Set the Source for PngOptions
    pngOptions.Source = new Aspose.Imaging.Sources.StreamSource(ms);

    //Create an instance of Image 
    using (Aspose.Imaging.Image image = Aspose.Imaging.Image.Create(pngOptions, 500, 500))
    {
        //Create and initialize an instance of Graphics class
        Aspose.Imaging.Graphics graphics = new Aspose.Imaging.Graphics(image);

        //Clear Graphics surface
        graphics.Clear(Color.Wheat);

        //Draw an Arc by specifying the Pen object having Black color, 
        //a Rectangle surrounding the Arc, Start Angle and Sweep Angle
        graphics.DrawArc(new Pen(Color.Black, 2), new Rectangle(200, 200, 100, 200), 0, 300);

        //Draw a Bezier by specifying the Pen object having Blue color and co-ordinate Points.
        graphics.DrawBezier(new Pen(Color.Blue, 2), new Point(250, 100), new Point(300, 30), new Point(450, 100), new Point(235, 25));

        //Draw a Curve by specifying the Pen object having Green color and an array of Points
        graphics.DrawCurve(new Pen(Color.Green, 2), new[] { new Point(100, 200), new Point(100, 350), new Point(200, 450) });

        //Draw an Ellipse using the Pen object and a surrounding Rectangle
        graphics.DrawEllipse(new Pen(Color.Yellow, 2), new Rectangle(300, 300, 100, 100));

        //Draw a Line 
        graphics.DrawLine(new Pen(Color.Violet, 2), new Point(100, 100), new Point(200, 200));

        //Draw a Pie segment
        graphics.DrawPie(new Pen(Color.Silver, 2), new Rectangle(new Point(200, 20), new Size(200, 200)), 0, 45);

        //Draw a Polygon by specifying the Pen object having Red color and an array of Points
        graphics.DrawPolygon(new Pen(Color.Red, 2), new[] { new Point(20, 100), new Point(20, 200), new Point(220, 20) });

        //Draw a Rectangle
        graphics.DrawRectangle(new Pen(Color.Orange, 2), new Rectangle(new Point(250, 250), new Size(100, 100)));

        //Create a SolidBrush object and set its various properties
        Aspose.Imaging.Brushes.SolidBrush brush = new Aspose.Imaging.Brushes.SolidBrush();
        brush.Color = Color.Purple;
        brush.Opacity = 100;

        //Draw a String using the SolidBrush object and Font, at specific Point
        graphics.DrawString("This image is created by Aspose.Imaging API", new Font("Times New Roman", 16), brush, new PointF(50, 400));

        // save all changes.
        image.Save();
    }
}</code><code>[Visual Basic]

'Create an instance of memory stream
Using ms As MemoryStream = New MemoryStream()
'Create an instance of PngOptions and set its various properties
Dim pngOptions As Aspose.Imaging.ImageOptions.PngOptions = New Aspose.Imaging.ImageOptions.PngOptions()

'Set the Source for PngOptions
    pngOptions.Source = New Aspose.Imaging.Sources.StreamSource(ms)

'Create an instance of Image 
    Using image As Aspose.Imaging.Image = Aspose.Imaging.Image.Create(pngOptions, 500, 500)
'Create and initialize an instance of Graphics class
Dim graphics As Aspose.Imaging.Graphics = New Aspose.Imaging.Graphics(image)

'Clear Graphics surface
        graphics.Clear(Color.Wheat)

'Draw an Arc by specifying the Pen object having Black color, 
'a Rectangle surrounding the Arc, Start Angle and Sweep Angle
        graphics.DrawArc(New Pen(Color.Black, 2), New Rectangle(200, 200, 100, 200), 0, 300)

'Draw a Bezier by specifying the Pen object having Blue color and co-ordinate Points.
        graphics.DrawBezier(New Pen(Color.Blue, 2), New Point(250, 100), New Point(300, 30), New Point(450, 100), New Point(235, 25))

'Draw a Curve by specifying the Pen object having Green color and an array of Points
        graphics.DrawCurve(New Pen(Color.Green, 2), New() { New Point(100, 200), New Point(100, 350), New Point(200, 450) })

'Draw an Ellipse using the Pen object and a surrounding Rectangle
        graphics.DrawEllipse(New Pen(Color.Yellow, 2), New Rectangle(300, 300, 100, 100))

'Draw a Line 
        graphics.DrawLine(New Pen(Color.Violet, 2), New Point(100, 100), New Point(200, 200))

'Draw a Pie segment
        graphics.DrawPie(New Pen(Color.Silver, 2), New Rectangle(New Point(200, 20), New Size(200, 200)), 0, 45)

'Draw a Polygon by specifying the Pen object having Red color and an array of Points
        graphics.DrawPolygon(New Pen(Color.Red, 2), New() { New Point(20, 100), New Point(20, 200), New Point(220, 20) })

'Draw a Rectangle
        graphics.DrawRectangle(New Pen(Color.Orange, 2), New Rectangle(New Point(250, 250), New Size(100, 100)))

'Create a SolidBrush object and set its various properties
Dim brush As Aspose.Imaging.Brushes.SolidBrush = New Aspose.Imaging.Brushes.SolidBrush()
        brush.Color = Color.Purple
        brush.Opacity = 100

'Draw a String using the SolidBrush object and Font, at specific Point
        graphics.DrawString("This image is created by Aspose.Imaging API", New Font("Times New Roman", 16), brush, New PointF(50, 400))

' save all changes.
        image.Save()
    End Using
End Using</code></example>
    </member>
    <member name="M:Aspose.Imaging.ImageOptions.PngOptions.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.ImageOptions.PngOptions" /> class.
            </summary>
    </member>
    <member name="M:Aspose.Imaging.ImageOptions.PngOptions.#ctor(Aspose.Imaging.ImageOptions.PngOptions)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.ImageOptions.JpegOptions" /> class.
            </summary>
      <param name="pngOptions">The PNG options.</param>
    </member>
    <member name="P:Aspose.Imaging.ImageOptions.PngOptions.ColorType">
      <summary>
            Gets or sets the type of the color.
            </summary>
      <value>
            The type of the color.
            </value>
    </member>
    <member name="P:Aspose.Imaging.ImageOptions.PngOptions.Progressive">
      <summary>
            Gets or sets a value indicating whether this <see cref="T:Aspose.Imaging.ImageOptions.PngOptions" /> is progressive.
            </summary>
      <value>
        <c>true</c> if progressive; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Aspose.Imaging.ImageOptions.PngOptions.FilterType">
      <summary>
            Gets or sets the filter type used during png file save process.
            </summary>
    </member>
    <member name="T:Aspose.Imaging.ImageOptions.PsdOptions">
      <summary>
            The psd file format create options.
            </summary>
      <example>This example demonstrates the use of Aspsoe.Imaging for .Net API to convert Images to PSD format. To achieve this goal this example loads an existing image and then saves it back to PSD format.<code>[C#]

//Create an instance of image class and initialize it with an existing file through stream
using (Aspose.Imaging.Image image = Aspose.Imaging.Image.Load(memoryStream))
{
    //Create an instance of PsdOptions class
    Aspose.Imaging.ImageOptions.PsdOptions psdOptions = new Aspose.Imaging.ImageOptions.PsdOptions();

    //Set the CompressionMethod as RLE
    //Note: Other supported CompressionMethod is CompressionMethod.RAW [No Compression]
    psdOptions.CompressionMethod = Aspose.Imaging.FileFormats.Psd.CompressionMethod.RLE;

    //Set the ColorMode to GrayScale
    //Note: Other supported ColorModes are ColorModes.Bitmap and ColorModes.RGB
    psdOptions.ColorMode = Aspose.Imaging.FileFormats.Psd.ColorModes.Grayscale;

    //Save the image to another stream with supplied PsdOptions settings
    image.Save(memoryStream2, psdOptions);
}</code><code>[Visual Basic]

'Create an instance of image class and initialize it with an existing file through stream
Using image As Aspose.Imaging.Image = Aspose.Imaging.Image.Load(memoryStream)
'Create an instance of PsdOptions class
Dim psdOptions As Aspose.Imaging.ImageOptions.PsdOptions = New Aspose.Imaging.ImageOptions.PsdOptions()

'Set the CompressionMethod as RLE
'Note: Other supported CompressionMethod is CompressionMethod.RAW [No Compression]
    psdOptions.CompressionMethod = Aspose.Imaging.FileFormats.Psd.CompressionMethod.RLE

'Set the ColorMode to GrayScale
'Note: Other supported ColorModes are ColorModes.Bitmap and ColorModes.RGB
    psdOptions.ColorMode = Aspose.Imaging.FileFormats.Psd.ColorModes.Grayscale

'Save the image to another stream with supplied PsdOptions settings
    image.Save(memoryStream2, psdOptions)
End Using</code></example>
    </member>
    <member name="P:Aspose.Imaging.ImageOptions.PsdOptions.Resources">
      <summary>
            Gets or sets the psd resources.
            </summary>
      <value>The psd resources.</value>
    </member>
    <member name="P:Aspose.Imaging.ImageOptions.PsdOptions.Version">
      <summary>
            Gets or sets the psd file version.
            </summary>
      <value>The psd file version.</value>
    </member>
    <member name="P:Aspose.Imaging.ImageOptions.PsdOptions.CompressionMethod">
      <summary>
            Gets or sets the psd compression method.
            </summary>
      <value>The compression method.</value>
    </member>
    <member name="P:Aspose.Imaging.ImageOptions.PsdOptions.ColorMode">
      <summary>
            Gets or sets the psd color mode.
            </summary>
      <value>The color mode.</value>
    </member>
    <member name="P:Aspose.Imaging.ImageOptions.PsdOptions.ChannelBitsCount">
      <summary>
            Gets or sets the bits count per color channel.
            </summary>
      <value>The bits count per color channel.</value>
    </member>
    <member name="P:Aspose.Imaging.ImageOptions.PsdOptions.ChannelsCount">
      <summary>
            Gets or sets the color channels count.
            </summary>
      <value>The color channels count.</value>
    </member>
    <member name="T:Aspose.Imaging.ImageOptions.TiffOptions">
      <summary>
                The tiff file format options.
                Note that width and height tags will get overwritten on image creation by width and height parameters so there is no need to specify them directly.
                Note that many options return a default value but that does not mean that this option is set explicitly as a tag value. To verify the tag is present use Tags property or the corresponding IsTagPresent method.
            </summary>
      <developer_tip>
                WARNING! never modify tiff options during save since this may cause side effects and hard to find bugs.
                The following line was specially left commented since it caused incorrect determination of data beginning.
                The passed options did not contain spp (although the options are not correct in such case but still this scenario causes errors)
                and the next line caused +spp tag +bpp tag added and when options were written after data completely written they have overwritten
                the data beginning for uncompressed codec!!! See TiffUncompressedCodec.Encode.
                this.Options.SamplesPerPixel = 3;
            </developer_tip>
      <example>This example demonstrates the use of different classes from SaveOptions Namespace for export purposes. An image of type Gif is loaded into an instance of Image and then exported out to several formats.<code>[C#]

//Load an existing image (of type Gif) in an instance of Image class
using (Aspose.Imaging.Image image = Aspose.Imaging.Image.Load(memoryStream))
{
    //Export to BMP file format using the default options
    image.Save(memoryStream1, new Aspose.Imaging.ImageOptions.BmpOptions());

    //Export to JPEG file format using the default options
    image.Save(memoryStream2, new Aspose.Imaging.ImageOptions.JpegOptions());
 
    //Export to PNG file format using the default options
    image.Save(memoryStream3, new Aspose.Imaging.ImageOptions.PngOptions());
 
    //Export to TIFF file format using the default options
    image.Save(memoryStream4, new Aspose.Imaging.ImageOptions.TiffOptions());
}</code><code>[Visual Basic]

'Load an existing image (of type Gif) in an instance of Image class
Using image As Aspose.Imaging.Image = Aspose.Imaging.Image.Load(memoryStream)
'Export to BMP file format using the default options
    image.Save(memoryStream1, New Aspose.Imaging.ImageOptions.BmpOptions())

'Export to JPEG file format using the default options
    image.Save(memoryStream2, New Aspose.Imaging.ImageOptions.JpegOptions())

'Export to PNG file format using the default options
    image.Save(memoryStream3, New Aspose.Imaging.ImageOptions.PngOptions())

'Export to TIFF file format using the default options
    image.Save(memoryStream4, New Aspose.Imaging.ImageOptions.TiffOptions())
End Using</code></example>
      <example>This examples make use of GraphicsPath and Graphics class to create and manipulate Figures on an Image surface. Example creates a new Image (of type Tiff) and draw paths with the help of GraphicsPath class. At the end DrawPath method exposed by Graphics class is called to render the paths on surface.<code>[C#]

//Create an instance of memory stream
using (MemoryStream stream = new MemoryStream())
{
    //Create an instance of TiffOptions and set its various properties
    Aspose.Imaging.ImageOptions.TiffOptions tiffOptions = new Aspose.Imaging.ImageOptions.TiffOptions();
        
    //Set the source for the instance of ImageOptions
    tiffOptions.Source = new Aspose.Imaging.Sources.StreamSource(stream);

    //Create an instance of Image 
    using (Aspose.Imaging.Image image = Aspose.Imaging.Image.Create(tiffOptions, 500, 500))
    {
        //Create and initialize an instance of Graphics class
        Aspose.Imaging.Graphics graphics = new Aspose.Imaging.Graphics(image);

        //Clear Graphics surface
        graphics.Clear(Color.Wheat);

        //Create an instance of GraphicsPath class
        Aspose.Imaging.GraphicsPath graphicspath = new Aspose.Imaging.GraphicsPath();

        //Create an instance of Figure class
        Aspose.Imaging.Figure figure = new Aspose.Imaging.Figure();

        //Add Shapes to Figure object
        figure.AddShape(new Aspose.Imaging.Shapes.RectangleShape(new RectangleF(10, 10, 300, 300)));
        figure.AddShape(new Aspose.Imaging.Shapes.EllipseShape(new RectangleF(50, 50, 300, 300)));
        figure.AddShape(new Aspose.Imaging.Shapes.PieShape(new Rectangle(new Point(250, 250), new Size(200, 200)), 0, 45));

        //Add Figure object to GraphicsPath
        graphicspath.AddFigure(figure);

        //Draw path with Pen object of color Black
        graphics.DrawPath(new Pen(Aspose.Imaging.Color.Black, 2), graphicspath);

        // save all changes.
        image.Save();
    }
}</code><code>[Visual Basic]

'Create an instance of memory stream
Using stream As MemoryStream = New MemoryStream()
'Create an instance of TiffOptions and set its various properties
Dim tiffOptions As Aspose.Imaging.ImageOptions.TiffOptions = New Aspose.Imaging.ImageOptions.TiffOptions()

'Set the source for the instance of ImageOptions
    tiffOptions.Source = New Aspose.Imaging.Sources.StreamSource(stream)

'Create an instance of Image 
    Using image As Aspose.Imaging.Image = Aspose.Imaging.Image.Create(tiffOptions, 500, 500)
'Create and initialize an instance of Graphics class
Dim graphics As Aspose.Imaging.Graphics = New Aspose.Imaging.Graphics(image)

'Clear Graphics surface
        graphics.Clear(Color.Wheat)

'Create an instance of GraphicsPath class
Dim graphicspath As Aspose.Imaging.GraphicsPath = New Aspose.Imaging.GraphicsPath()

'Create an instance of Figure class
Dim figure As Aspose.Imaging.Figure = New Aspose.Imaging.Figure()

'Add Shapes to Figure object
        figure.AddShape(New Aspose.Imaging.Shapes.RectangleShape(New RectangleF(10, 10, 300, 300)))
        figure.AddShape(New Aspose.Imaging.Shapes.EllipseShape(New RectangleF(50, 50, 300, 300)))
        figure.AddShape(New Aspose.Imaging.Shapes.PieShape(New Rectangle(New Point(250, 250), New Size(200, 200)), 0, 45))

'Add Figure object to GraphicsPath
        graphicspath.AddFigure(figure)

'Draw path with Pen object of color Black
        graphics.DrawPath(New Pen(Aspose.Imaging.Color.Black, 2), graphicspath)

' save all changes.
        image.Save()
    End Using
End Using</code></example>
    </member>
    <member name="M:Aspose.Imaging.ImageOptions.TiffOptions.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.ImageOptions.TiffOptions" /> class.
            </summary>
    </member>
    <member name="M:Aspose.Imaging.ImageOptions.TiffOptions.#ctor(Aspose.Imaging.ImageOptions.TiffOptions)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.ImageOptions.TiffOptions" /> class.
            </summary>
      <param name="options">The options to copy from.</param>
    </member>
    <member name="M:Aspose.Imaging.ImageOptions.TiffOptions.#ctor(Aspose.Imaging.FileFormats.Tiff.TiffDataType[])">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.ImageOptions.TiffOptions" /> class.
            </summary>
      <param name="tags">The tags to initialize options with.</param>
      <exception cref="T:System.ArgumentNullException">tags</exception>
    </member>
    <member name="M:Aspose.Imaging.ImageOptions.TiffOptions.IsTagPresent(Aspose.Imaging.FileFormats.Tiff.Enums.TiffTags)">
      <summary>
            Determines whether tag is present in the options or not.
            </summary>
      <param name="tag">The tag id to check.</param>
      <returns>
        <c>true</c> if tag is present; otherwise, <c>false</c>.
            </returns>
    </member>
    <member name="M:Aspose.Imaging.ImageOptions.TiffOptions.RemoveTag(Aspose.Imaging.FileFormats.Tiff.Enums.TiffTags)">
      <summary>
            Removes the tag.
            </summary>
      <param name="tag">
            The tag to remove.
            </param>
      <returns>
            true if successfully removed
            </returns>
    </member>
    <member name="M:Aspose.Imaging.ImageOptions.TiffOptions.Validate">
      <summary>
            Validates if options have valid combination of tags
            </summary>
    </member>
    <member name="M:Aspose.Imaging.ImageOptions.TiffOptions.AddTags(Aspose.Imaging.FileFormats.Tiff.TiffDataType[])">
      <summary>
            Adds the tags.
            </summary>
      <param name="tagsToAdd">The tags to add.</param>
    </member>
    <member name="M:Aspose.Imaging.ImageOptions.TiffOptions.AddTag(Aspose.Imaging.FileFormats.Tiff.TiffDataType)">
      <summary>
            Adds a new tag.
            </summary>
      <param name="tagToAdd">The tag to add.</param>
    </member>
    <member name="M:Aspose.Imaging.ImageOptions.TiffOptions.GetTagByType(Aspose.Imaging.FileFormats.Tiff.Enums.TiffTags)">
      <summary>
            Gets the instance of the tag by type.
            </summary>
      <param name="tagKey">The tag key.</param>
      <returns>
            Instance of the tag if exists or null otherwise.
            </returns>
    </member>
    <member name="P:Aspose.Imaging.ImageOptions.TiffOptions.IsValid">
      <summary>
            Gets a value indicating whether the <see cref="T:Aspose.Imaging.ImageOptions.TiffOptions" /> have been properly configured. Use Validate method as to find the failure reason.
            </summary>
      <value>
        <c>true</c> if TiffOptions are properly configured; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Aspose.Imaging.ImageOptions.TiffOptions.Artist">
      <summary>
            Gets or sets the artist.
            </summary>
      <value>
            The artist.
            </value>
    </member>
    <member name="P:Aspose.Imaging.ImageOptions.TiffOptions.ByteOrder">
      <summary>
            Gets or sets a value indicating the tiff byte order.
            </summary>
    </member>
    <member name="P:Aspose.Imaging.ImageOptions.TiffOptions.BitsPerSample">
      <summary>
            Gets or sets the bits per sample.
            </summary>
      <value>
            The bits per sample value.
            </value>
      <remarks>When setting this value keep in mind that it will also set SamplesPerPixel value to array length. These 2 properties are very tightly coupled so may be set alltogether only.</remarks>
    </member>
    <member name="P:Aspose.Imaging.ImageOptions.TiffOptions.Compression">
      <summary>
            Gets or sets the compression.
            </summary>
      <value>
            The compression.
            </value>
    </member>
    <member name="P:Aspose.Imaging.ImageOptions.TiffOptions.Copyright">
      <summary>
            Gets or sets the copyright.
            </summary>
      <value>
            The copyright.
            </value>
    </member>
    <member name="P:Aspose.Imaging.ImageOptions.TiffOptions.ColorMap">
      <summary>
            Gets or sets the color map.
            </summary>
      <value>
            The color map.
            </value>
      <exception cref="T:System.ArgumentNullException">value</exception>
      <exception cref="T:Aspose.Imaging.Exceptions.ImageFormats.TiffImageException">
            The color map may be defined for samples per pixel equal to 1 only.
            or
            The bits per sample are not defined.
            </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">value;The array length must correspond to the followign formula: 3 * (2**BitsPerSample).</exception>
    </member>
    <member name="P:Aspose.Imaging.ImageOptions.TiffOptions.Palette">
      <summary>
            Gets or sets the color palette.
            </summary>
      <value>
            The color palette.
            </value>
    </member>
    <member name="P:Aspose.Imaging.ImageOptions.TiffOptions.DateTime">
      <summary>
            Gets or sets the date and time.
            </summary>
      <value>
            The date and time.
            </value>
    </member>
    <member name="P:Aspose.Imaging.ImageOptions.TiffOptions.DocumentName">
      <summary>
            Gets or sets the name of the document.
            </summary>
      <value>
            The name of the document.
            </value>
    </member>
    <member name="P:Aspose.Imaging.ImageOptions.TiffOptions.AlphaStorage">
      <summary>
            Gets or sets the alpha storage option. Options other than <see cref="F:Aspose.Imaging.FileFormats.Tiff.Enums.TiffAlphaStorage.Unspecified" />
            are used when there are more than 3 <see cref="P:Aspose.Imaging.ImageOptions.TiffOptions.SamplesPerPixel" /> defined.
            </summary>
      <value>
            The alpha storage option.
            </value>
    </member>
    <member name="P:Aspose.Imaging.ImageOptions.TiffOptions.FillOrder">
      <summary>
            Gets or sets the byte bits fill order.
            </summary>
      <value>
            The byte bits fill order.
            </value>
    </member>
    <member name="P:Aspose.Imaging.ImageOptions.TiffOptions.HalfToneHints">
      <summary>
            Gets or sets the halftone hints.
            </summary>
      <value>
            The halftone hints.
            </value>
      <exception cref="T:System.ArgumentNullException">value</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">value;Halftone hints array length must be equal to 2.</exception>
    </member>
    <member name="P:Aspose.Imaging.ImageOptions.TiffOptions.ImageDescription">
      <summary>
            Gets or sets the image description.
            </summary>
      <value>
            The image description.
            </value>
    </member>
    <member name="P:Aspose.Imaging.ImageOptions.TiffOptions.InkNames">
      <summary>
            Gets or sets the ink names.
            </summary>
      <value>
            The ink names.
            </value>
    </member>
    <member name="P:Aspose.Imaging.ImageOptions.TiffOptions.ScannerManufacturer">
      <summary>
            Gets or sets the scanner manufacturer.
            </summary>
      <value>
            The scanner manufacturer.
            </value>
    </member>
    <member name="P:Aspose.Imaging.ImageOptions.TiffOptions.MaxSampleValue">
      <summary>
            Gets or sets the max sample value.
            </summary>
      <value>
            The max sample value.
            </value>
      <exception cref="T:System.ArgumentNullException">value</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">value;The array length must correspond to the samples per pixel count.</exception>
    </member>
    <member name="P:Aspose.Imaging.ImageOptions.TiffOptions.MinSampleValue">
      <summary>
            Gets or sets the min sample value.
            </summary>
      <value>
            The min sample value.
            </value>
      <exception cref="T:System.ArgumentNullException">value</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">value;The array length must correspond to the samples per pixel count.</exception>
    </member>
    <member name="P:Aspose.Imaging.ImageOptions.TiffOptions.ScannerModel">
      <summary>
            Gets or sets the scanner model.
            </summary>
      <value>
            The scanner model.
            </value>
    </member>
    <member name="P:Aspose.Imaging.ImageOptions.TiffOptions.Orientation">
      <summary>
            Gets or sets the orientation.
            </summary>
      <value>
            The orientation.
            </value>
    </member>
    <member name="P:Aspose.Imaging.ImageOptions.TiffOptions.PageName">
      <summary>
            Gets or sets the page name.
            </summary>
      <value>
            The page name.
            </value>
    </member>
    <member name="P:Aspose.Imaging.ImageOptions.TiffOptions.PageNumber">
      <summary>
            Gets or sets the page number tag.
            </summary>
      <value>
            The page number tag.
            </value>
      <exception cref="T:System.ArgumentNullException">value</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">value;Expected 2 values in the array: PageNumber[0] is the page number and PageNumber[1] is the total number of pages in the document.</exception>
    </member>
    <member name="P:Aspose.Imaging.ImageOptions.TiffOptions.Photometric">
      <summary>
            Gets or sets the photometric.
            </summary>
      <value>
            The photometric.
            </value>
    </member>
    <member name="P:Aspose.Imaging.ImageOptions.TiffOptions.PlanarConfiguration">
      <summary>
            Gets or sets the planar configuration.
            </summary>
      <value>
            The planar configuration.
            </value>
    </member>
    <member name="P:Aspose.Imaging.ImageOptions.TiffOptions.ResolutionUnit">
      <summary>
            Gets or sets the resolution unit.
            </summary>
      <value>
            The resolution unit.
            </value>
    </member>
    <member name="P:Aspose.Imaging.ImageOptions.TiffOptions.RowsPerStrip">
      <summary>
            Gets or sets the rows per strip.
            </summary>
      <value>
            The rows per strip.
            </value>
    </member>
    <member name="P:Aspose.Imaging.ImageOptions.TiffOptions.SampleFormat">
      <summary>
            Gets or sets the sample format.
            </summary>
      <value>
            The sample format.
            </value>
      <exception cref="T:System.ArgumentNullException">value</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">value;The array length must correspond to the samples per pixel count.</exception>
    </member>
    <member name="P:Aspose.Imaging.ImageOptions.TiffOptions.SamplesPerPixel">
      <summary>
            Gets the samples per pixel. To change this property value use the <see cref="P:Aspose.Imaging.ImageOptions.TiffOptions.BitsPerSample" /> property setter.
            </summary>
      <value>
            The samples per pixel.
            </value>
    </member>
    <member name="P:Aspose.Imaging.ImageOptions.TiffOptions.SmaxSampleValue">
      <summary>
            Gets or sets the max sample value. The value has a field type which best matches the sample data (Byte, Short or Long type).
            </summary>
      <value>
            The max sample value.
            </value>
    </member>
    <member name="P:Aspose.Imaging.ImageOptions.TiffOptions.SminSampleValue">
      <summary>
            Gets or sets the min sample value. The value has a field type which best matches the sample data (Byte, Short or Long type).
            </summary>
      <value>
            The min sample value.
            </value>
    </member>
    <member name="P:Aspose.Imaging.ImageOptions.TiffOptions.SoftwareType">
      <summary>
            Gets or sets the software type.
            </summary>
      <value>
            The software type.
            </value>
    </member>
    <member name="P:Aspose.Imaging.ImageOptions.TiffOptions.StripByteCounts">
      <summary>
            Gets or sets the strip byte counts.
            </summary>
      <value>
            The strip byte counts.
            </value>
    </member>
    <member name="P:Aspose.Imaging.ImageOptions.TiffOptions.StripOffsets">
      <summary>
            Gets or sets the strip offsets.
            </summary>
      <value>
            The strip offsets.
            </value>
    </member>
    <member name="P:Aspose.Imaging.ImageOptions.TiffOptions.SubFileType">
      <summary>
            Gets or sets a general indication of the kind of data contained in this subfile.
            </summary>
      <value>
            The general indication of the kind of data contained in this subfile.
            </value>
    </member>
    <member name="P:Aspose.Imaging.ImageOptions.TiffOptions.TargetPrinter">
      <summary>
            Gets or sets the target printer.
            </summary>
      <value>
            The target printer.
            </value>
    </member>
    <member name="P:Aspose.Imaging.ImageOptions.TiffOptions.Threshholding">
      <summary>
            Gets or sets the threshholding.
            </summary>
      <value>
            The threshholding.
            </value>
    </member>
    <member name="P:Aspose.Imaging.ImageOptions.TiffOptions.TotalPages">
      <summary>
            Gets the total pages.
            </summary>
      <value>
            The total pages.
            </value>
    </member>
    <member name="P:Aspose.Imaging.ImageOptions.TiffOptions.Xposition">
      <summary>
            Gets or sets the x position.
            </summary>
      <value>
            The x position.
            </value>
    </member>
    <member name="P:Aspose.Imaging.ImageOptions.TiffOptions.ResolutionSettings">
      <summary>
            Gets or sets the resolution settings.
            </summary>
    </member>
    <member name="P:Aspose.Imaging.ImageOptions.TiffOptions.Xresolution">
      <summary>
            Gets or sets the x resolution.
            </summary>
      <value>
            The x resolution.
            </value>
    </member>
    <member name="P:Aspose.Imaging.ImageOptions.TiffOptions.Yposition">
      <summary>
            Gets or sets the y position.
            </summary>
      <value>
            The y position.
            </value>
    </member>
    <member name="P:Aspose.Imaging.ImageOptions.TiffOptions.Yresolution">
      <summary>
            Gets or sets the y resolution.
            </summary>
      <value>
            The y resolution.
            </value>
    </member>
    <member name="P:Aspose.Imaging.ImageOptions.TiffOptions.FaxT4Options">
      <summary>
            Gets or sets the fax t4 options.
            </summary>
      <value>
            The fax t4 options.
            </value>
    </member>
    <member name="P:Aspose.Imaging.ImageOptions.TiffOptions.Predictor">
      <summary>
            Gets or sets the predictor for LZW compression.
            </summary>
      <value>
            The predictor type.
            </value>
    </member>
    <member name="P:Aspose.Imaging.ImageOptions.TiffOptions.ImageLength">
      <summary>
            Gets or sets the image length.
            </summary>
      <value>
            The image length.
            </value>
    </member>
    <member name="P:Aspose.Imaging.ImageOptions.TiffOptions.ImageWidth">
      <summary>
            Gets or sets the image width.
            </summary>
      <value>
            The image width.
            </value>
    </member>
    <member name="P:Aspose.Imaging.ImageOptions.TiffOptions.Tags">
      <summary>
            Gets or sets the tags.
            </summary>
      <value>
            The tags.
            </value>
    </member>
    <member name="P:Aspose.Imaging.ImageOptions.TiffOptions.ValidTagCount">
      <summary>
            Gets the valid tag count. This is not the total tags count but the number of tags which may be preserved.
            </summary>
      <value>
            The valid tag count.
            </value>
    </member>
    <member name="P:Aspose.Imaging.ImageOptions.TiffOptions.BitsPerPixel">
      <summary>
            Gets the bits per pixel.
            </summary>
      <value>
            The bits per pixel.
            </value>
    </member>
    <member name="T:Aspose.Imaging.IColorConverter">
      <summary>
            The color converter.
            </summary>
    </member>
    <member name="M:Aspose.Imaging.IColorConverter.Convert(Aspose.Imaging.PixelDataFormat,System.Byte[],System.Int32,System.Int32,System.Int32,System.Int32,Aspose.Imaging.PixelDataFormat,System.Byte[],System.Int32)">
      <summary>
            Converts the passed data to the output format.
            </summary>
      <param name="sourceFormat">The source format.</param>
      <param name="data">The source data.</param>
      <param name="offset">The offset in bytes where data copying should begin.</param>
      <param name="bitStart">The bit start. Note this value is not byte aligned value instead this is actual bit where copying should begin.</param>
      <param name="samplesCount">The samples count.</param>
      <param name="linesCount">The lines count.</param>
      <param name="destFormat">The destination format.</param>
      <param name="outputData">The output data.</param>
      <param name="outputOffset">The output offset where data copying should start.</param>
      <returns>
            The converted bytes count.
            </returns>
    </member>
    <member name="T:Aspose.Imaging.IKeyedObject">
      <summary>
            Represents interface for objects with keys.
            </summary>
    </member>
    <member name="P:Aspose.Imaging.IKeyedObject.Key">
      <summary>
            Gets the object key.
            </summary>
      <value>The object key.</value>
    </member>
    <member name="T:Aspose.Imaging.IImageLoader">
      <summary>
            The image loader.
            </summary>
    </member>
    <member name="M:Aspose.Imaging.IImageLoader.Load(Aspose.Imaging.StreamContainer,Aspose.Imaging.LoadOptions)">
      <summary>
            Opens a new image with <paramref name="loadOptions"></paramref>.
            </summary>
      <param name="streamContainer">The stream container.</param>
      <param name="loadOptions">The load options.</param>
      <returns>A newly opened image instance.</returns>
    </member>
    <member name="T:Aspose.Imaging.IImageLoaderDescriptor">
      <summary>
            The image loader descriptor specifying the loader properties. The loader descriptor is used to overcome
            the necessity to contain each image loader instance in memory and multithreading issues.
            </summary>
    </member>
    <member name="M:Aspose.Imaging.IImageLoaderDescriptor.CanLoad(Aspose.Imaging.StreamContainer,Aspose.Imaging.LoadOptions)">
      <summary>
            Determines whether image loader can read a new image from the specified stream and optionally using the <paramref name="loadOptions" />.
            </summary>
      <param name="streamContainer">The stream container.</param>
      <param name="loadOptions">The file format details specified by <paramref name="loadOptions" />. The <paramref name="loadOptions" /> may be null.</param>
      <returns>
        <c>true</c> if image loader created by this descriptor can read image from stream; otherwise, <c>false</c>.
            </returns>
    </member>
    <member name="M:Aspose.Imaging.IImageLoaderDescriptor.CreateInstance">
      <summary>
            Creates a new loader instance.
            </summary>
      <returns>A new loader instance.</returns>
    </member>
    <member name="T:Aspose.Imaging.IIndexedColorConverter">
      <summary>
            The color converter for indexed image formats.
            </summary>
    </member>
    <member name="M:Aspose.Imaging.IIndexedColorConverter.FillIndexedtoIndexedMap(System.Byte[],Aspose.Imaging.PixelDataFormat,Aspose.Imaging.PixelDataFormat)">
      <summary>
            Fills the indexed to indexed image conversion map.
            </summary>
      <param name="map">The conversion map.</param>
      <param name="sourceFormat">The source format.</param>
      <param name="destFormat">The destination format.</param>
    </member>
    <member name="T:Aspose.Imaging.IOrderedShape">
      <summary>
            Represents an ordered shape. An ordered shape is a continuous set of points having a start point and end point.
            The continuous set of points connected using a specific rule.
            </summary>
    </member>
    <member name="M:Aspose.Imaging.IOrderedShape.Reverse">
      <summary>
            Reverses the order of points for this shape.
            </summary>
    </member>
    <member name="P:Aspose.Imaging.IOrderedShape.StartPoint">
      <summary>
            Gets the starting shape point.
            </summary>
      <value>The starting shape point.</value>
    </member>
    <member name="P:Aspose.Imaging.IOrderedShape.EndPoint">
      <summary>
            Gets the ending shape point.
            </summary>
      <value>The ending shape point.</value>
    </member>
    <member name="P:Aspose.Imaging.IOrderedShape.IsClosed">
      <summary>
            Gets or sets a value indicating whether ordered shape is closed. When processing closed ordered shape the starting and ending points have no meaning.
            </summary>
      <value>
        <c>True</c> if this ordered shape is closed; otherwise, <c>false</c>.</value>
    </member>
    <member name="T:Aspose.Imaging.InterpolationMode">
      <summary>
            The <see cref="T:Aspose.Imaging.InterpolationMode" /> enumeration specifies the algorithm that is used when images are scaled or rotated.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.InterpolationMode.Invalid">
      <summary>
            Invalid interpolation mode.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.InterpolationMode.Default">
      <summary>
            Specifies default mode.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.InterpolationMode.Low">
      <summary>
            Specifies low quality interpolation.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.InterpolationMode.High">
      <summary>
            Specifies high quality interpolation.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.InterpolationMode.Bilinear">
      <summary>
            Specifies bilinear interpolation. No prefiltering is done. This mode is not suitable for shrinking an image below 50 percent of its original size.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.InterpolationMode.Bicubic">
      <summary>
            Specifies bicubic interpolation. No prefiltering is done. This mode is not suitable for shrinking an image below 25 percent of its original size.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.InterpolationMode.NearestNeighbor">
      <summary>
            Specifies nearest-neighbor interpolation.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.InterpolationMode.HighQualityBilinear">
      <summary>
            Specifies high-quality, bilinear interpolation. Prefiltering is performed to ensure high-quality shrinking.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.InterpolationMode.HighQualityBicubic">
      <summary>
            Specifies high-quality, bicubic interpolation. Prefiltering is performed to ensure high-quality shrinking. This mode produces the highest quality transformed images.
            </summary>
    </member>
    <member name="T:Aspose.Imaging.KnownColor">
      <summary>
            Specifies the known system colors.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.KnownColor.Transparent">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.KnownColor.AliceBlue">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.KnownColor.AntiqueWhite">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.KnownColor.Aqua">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.KnownColor.Aquamarine">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.KnownColor.Azure">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.KnownColor.Beige">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.KnownColor.Bisque">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.KnownColor.Black">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.KnownColor.BlanchedAlmond">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.KnownColor.Blue">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.KnownColor.BlueViolet">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.KnownColor.Brown">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.KnownColor.BurlyWood">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.KnownColor.CadetBlue">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.KnownColor.Chartreuse">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.KnownColor.Chocolate">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.KnownColor.Coral">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.KnownColor.CornflowerBlue">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.KnownColor.Cornsilk">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.KnownColor.Crimson">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.KnownColor.Cyan">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.KnownColor.DarkBlue">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.KnownColor.DarkCyan">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.KnownColor.DarkGoldenrod">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.KnownColor.DarkGray">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.KnownColor.DarkGreen">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.KnownColor.DarkKhaki">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.KnownColor.DarkMagenta">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.KnownColor.DarkOliveGreen">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.KnownColor.DarkOrange">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.KnownColor.DarkOrchid">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.KnownColor.DarkRed">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.KnownColor.DarkSalmon">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.KnownColor.DarkSeaGreen">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.KnownColor.DarkSlateBlue">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.KnownColor.DarkSlateGray">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.KnownColor.DarkTurquoise">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.KnownColor.DarkViolet">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.KnownColor.DeepPink">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.KnownColor.DeepSkyBlue">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.KnownColor.DimGray">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.KnownColor.DodgerBlue">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.KnownColor.Firebrick">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.KnownColor.FloralWhite">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.KnownColor.ForestGreen">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.KnownColor.Fuchsia">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.KnownColor.Gainsboro">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.KnownColor.GhostWhite">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.KnownColor.Gold">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.KnownColor.Goldenrod">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.KnownColor.Gray">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.KnownColor.Green">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.KnownColor.GreenYellow">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.KnownColor.Honeydew">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.KnownColor.HotPink">
      <summary>        
            A system-defined color.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.KnownColor.IndianRed">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.KnownColor.Indigo">
      <summary>        
            A system-defined color.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.KnownColor.Ivory">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.KnownColor.Khaki">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.KnownColor.Lavender">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.KnownColor.LavenderBlush">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.KnownColor.LawnGreen">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.KnownColor.LemonChiffon">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.KnownColor.LightBlue">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.KnownColor.LightCoral">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.KnownColor.LightCyan">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.KnownColor.LightGoldenrodYellow">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.KnownColor.LightGray">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.KnownColor.LightGreen">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.KnownColor.LightPink">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.KnownColor.LightSalmon">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.KnownColor.LightSeaGreen">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.KnownColor.LightSkyBlue">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.KnownColor.LightSlateGray">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.KnownColor.LightSteelBlue">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.KnownColor.LightYellow">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.KnownColor.Lime">
      <summary>        
            A system-defined color.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.KnownColor.LimeGreen">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.KnownColor.Linen">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.KnownColor.Magenta">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.KnownColor.Maroon">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.KnownColor.MediumAquamarine">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.KnownColor.MediumBlue">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.KnownColor.MediumOrchid">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.KnownColor.MediumPurple">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.KnownColor.MediumSeaGreen">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.KnownColor.MediumSlateBlue">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.KnownColor.MediumSpringGreen">
      <summary>        
            A system-defined color.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.KnownColor.MediumTurquoise">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.KnownColor.MediumVioletRed">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.KnownColor.MidnightBlue">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.KnownColor.MintCream">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.KnownColor.MistyRose">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.KnownColor.Moccasin">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.KnownColor.NavajoWhite">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.KnownColor.Navy">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.KnownColor.OldLace">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.KnownColor.Olive">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.KnownColor.OliveDrab">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.KnownColor.Orange">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.KnownColor.OrangeRed">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.KnownColor.Orchid">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.KnownColor.PaleGoldenrod">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.KnownColor.PaleGreen">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.KnownColor.PaleTurquoise">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.KnownColor.PaleVioletRed">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.KnownColor.PapayaWhip">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.KnownColor.PeachPuff">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.KnownColor.Peru">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.KnownColor.Pink">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.KnownColor.Plum">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.KnownColor.PowderBlue">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.KnownColor.Purple">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.KnownColor.Red">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.KnownColor.RosyBrown">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.KnownColor.RoyalBlue">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.KnownColor.SaddleBrown">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.KnownColor.Salmon">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.KnownColor.SandyBrown">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.KnownColor.SeaGreen">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.KnownColor.SeaShell">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.KnownColor.Sienna">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.KnownColor.Silver">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.KnownColor.SkyBlue">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.KnownColor.SlateBlue">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.KnownColor.SlateGray">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.KnownColor.Snow">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.KnownColor.SpringGreen">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.KnownColor.SteelBlue">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.KnownColor.Tan">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.KnownColor.Teal">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.KnownColor.Thistle">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.KnownColor.Tomato">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.KnownColor.Turquoise">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.KnownColor.Violet">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.KnownColor.Wheat">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.KnownColor.White">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.KnownColor.WhiteSmoke">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.KnownColor.Yellow">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.KnownColor.YellowGreen">
      <summary>
            A system-defined color.
            </summary>
    </member>
    <member name="T:Aspose.Imaging.LineCap">
      <summary>
            Specifies the available cap styles with which a <see cref="T:Aspose.Imaging.Pen" /> object can end a line.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.LineCap.Flat">
      <summary>
            Specifies a flat line cap.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.LineCap.Square">
      <summary>
            Specifies a square line cap.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.LineCap.Round">
      <summary>
            Specifies a round line cap.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.LineCap.Triangle">
      <summary>
            Specifies a triangular line cap.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.LineCap.NoAnchor">
      <summary>
            Specifies no anchor.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.LineCap.SquareAnchor">
      <summary>
            Specifies a square anchor line cap.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.LineCap.RoundAnchor">
      <summary>
            Specifies a round anchor cap.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.LineCap.DiamondAnchor">
      <summary>
            Specifies a diamond anchor cap.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.LineCap.ArrowAnchor">
      <summary>
            Specifies an arrow-shaped anchor cap.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.LineCap.AnchorMask">
      <summary>
            Specifies a custom line cap.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.LineCap.Custom">
      <summary>
            Specifies a mask used to check whether a line cap is an anchor cap.
            </summary>
    </member>
    <member name="T:Aspose.Imaging.LineJoin">
      <summary>
            Specifies how to join consecutive line or curve segments in a figure (subpath) contained in a <see cref="T:Aspose.Imaging.GraphicsPath" /> object.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.LineJoin.Miter">
      <summary>
            Specifies a mitered join. This produces a sharp corner or a clipped corner, depending on whether the length of the miter exceeds the miter limit.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.LineJoin.Bevel">
      <summary>
            Specifies a beveled join. This produces a diagonal corner.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.LineJoin.Round">
      <summary>
            Specifies a circular join. This produces a smooth, circular arc between the lines.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.LineJoin.MiterClipped">
      <summary>
            Specifies a mitered join. This produces a sharp corner or a beveled corner, depending on whether the length of the miter exceeds the miter limit.
            </summary>
    </member>
    <member name="T:Aspose.Imaging.Matrix">
      <summary>
            Replaces the GDI+ Matrix.
            </summary>
      <remarks>
            Most algorithms taken from Sun's AffineTransform.java.
            Java's names for matrix elements used internally.
            Map of java names to .net ones to description:
            m00     M11     Scale X
            m10     M12     Shear Y
            m01     M21     Shear X
            m11     M22     Scale Y
            m02     M31     Translate X
            m12     M32     Translate Y
            </remarks>
    </member>
    <member name="F:Aspose.Imaging.Matrix.TypeIdentity">
      <summary>
            An identity transform is one in which the output coordinates are
            always the same as the input coordinates.
            If this transform is anything other than the identity transform,
            the type will either be the constant GENERAL_TRANSFORM or a
            combination of the appropriate flag bits for the various coordinate
            conversions that this transform performs.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Matrix.TypeTranslation">
      <summary>
            A translation moves the coordinates by a constant amount in x
            and y without changing the length or angle of vectors.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Matrix.TypeUniformScale">
      <summary>
            A uniform scale multiplies the length of vectors by the same amount
            in both the x and y directions without changing the angle between
            vectors.
            This flag bit is mutually exclusive with the TypeGeneralScale flag.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Matrix.TypeGeneralScale">
      <summary>
            A general scale multiplies the length of vectors by different
            amounts in the x and y directions without changing the angle
            between perpendicular vectors.
            This flag bit is mutually exclusive with the TypeUniformScale flag.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Matrix.TypeMaskScale">
      <summary>
            This constant is a bit mask for any of the scale flag bits.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Matrix.TypeFlip">
      <summary>
            This flag bit indicates that the transform defined by this object
            performs a mirror image flip about some axis which changes the
            normally right handed coordinate system into a left handed
            system in addition to the conversions indicated by other flag bits.
            A right handed coordinate system is one where the positive X
            axis rotates counterclockwise to overlay the positive Y axis
            similar to the direction that the fingers on your right hand
            curl when you stare end on at your thumb.
            A left handed coordinate system is one where the positive X
            axis rotates clockwise to overlay the positive Y axis similar
            to the direction that the fingers on your left hand curl.
            There is no mathematical way to determine the angle of the
            original flipping or mirroring transformation since all angles
            of flip are identical given an appropriate adjusting rotation.
            NOTE: TypeFlip was added after GENERAL_TRANSFORM was in public
            circulation and the flag bits could no longer be conveniently
            renumbered without introducing binary incompatibility in outside
            code.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Matrix.TypeQuadrantRotation">
      <summary>
            This flag bit indicates that the transform defined by this object
            performs a quadrant rotation by some multiple of 90 degrees in
            addition to the conversions indicated by other flag bits.
            A rotation changes the angles of vectors by the same amount
            regardless of the original direction of the vector and without
            changing the length of the vector.
            This flag bit is mutually exclusive with the TypeGeneralRotation flag.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Matrix.TypeGeneralRotation">
      <summary>
            This flag bit indicates that the transform defined by this object
            performs a rotation by an arbitrary angle in addition to the
            conversions indicated by other flag bits.
            A rotation changes the angles of vectors by the same amount
            regardless of the original direction of the vector and without
            changing the length of the vector.
            This flag bit is mutually exclusive with the
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Matrix.TypeMaskRotation">
      <summary>
            This constant is a bit mask for any of the rotation flag bits.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.Matrix.TypeGeneralTransform">
      <summary>
            This constant indicates that the transform defined by this object
            performs an arbitrary conversion of the input coordinates.
            If this transform can be classified by any of the above constants,
            the type will either be the constant TypeIdentity or a
            combination of the appropriate flag bits for the various coordinate
            conversions that this transform performs.
            </summary>
    </member>
    <member name="M:Aspose.Imaging.Matrix.#ctor">
      <summary>
            Initializes a new instance of the Matrix class as the identity matrix.
            </summary>
    </member>
    <member name="M:Aspose.Imaging.Matrix.#ctor(System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.Matrix" /> class.
            </summary>
      <param name="m11">m00     M11     Scale X</param>
      <param name="m12">m10     M12     Shear Y</param>
      <param name="m21">m01     M21     Shear X</param>
      <param name="m22">m11     M22     Scale Y</param>
      <param name="m31">m02     M31     Translate X</param>
      <param name="m32">m12     M32     Translate Y</param>
    </member>
    <member name="M:Aspose.Imaging.Matrix.#ctor(Aspose.Imaging.RectangleF,Aspose.Imaging.PointF[])">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.Matrix" /> class to the geometric transform defined by the specified rectangle and array of points.
            </summary>
      <param name="rect">A <see cref="T:Aspose.Imaging.RectangleF" /> structure that represents the rectangle to be transformed.</param>
      <param name="plgpts">An array of three <see cref="T:Aspose.Imaging.PointF" /> structures that represents the points of a parallelogram to which the upper-left, upper-right, and lower-left corners of the rectangle is to be transformed. The lower-right corner of the parallelogram is implied by the first three corners.</param>
    </member>
    <member name="M:Aspose.Imaging.Matrix.#ctor(Aspose.Imaging.Rectangle,Aspose.Imaging.Point[])">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.Matrix" /> class to the geometric transform defined by the specified rectangle and array of points.
            </summary>
      <param name="rect">A <see cref="T:Aspose.Imaging.Rectangle" /> structure that represents the rectangle to be transformed.</param>
      <param name="plgpts">An array of three <see cref="T:Aspose.Imaging.Point" /> structures that represents the points of a parallelogram to which the upper-left, upper-right, and lower-left corners of the rectangle is to be transformed. The lower-right corner of the parallelogram is implied by the first three corners.</param>
    </member>
    <member name="M:Aspose.Imaging.Matrix.op_Equality(Aspose.Imaging.Matrix,Aspose.Imaging.Matrix)">
      <summary>
            Implements the operator ==.
            </summary>
      <param name="matrix1">The first matrix to compare.</param>
      <param name="matrix2">The second matrix to compare.</param>
      <returns>The result of the operator.</returns>
    </member>
    <member name="M:Aspose.Imaging.Matrix.op_Inequality(Aspose.Imaging.Matrix,Aspose.Imaging.Matrix)">
      <summary>
            Implements the operator !=.
            </summary>
      <param name="matrix1">The first matrix to compare.</param>
      <param name="matrix2">The second matrix to compare.</param>
      <returns>The result of the operator.</returns>
    </member>
    <member name="M:Aspose.Imaging.Matrix.GetElements">
      <summary>
            Gets the copy of matrix elements.
            </summary>
      <returns>
                A matrix elements copy.
            </returns>
    </member>
    <member name="M:Aspose.Imaging.Matrix.TransformPoints(Aspose.Imaging.PointF[])">
      <summary>
            Applies the geometric transform represented by this <see cref="T:Aspose.Imaging.Matrix" /> to a specified array of points.
            </summary>
      <param name="points">The points.</param>
    </member>
    <member name="M:Aspose.Imaging.Matrix.Scale(System.Single,System.Single,Aspose.Imaging.MatrixOrder)">
      <summary>
            Applies the specified scale vector (scaleX and scaleY) to this <see cref="T:Aspose.Imaging.Matrix" /> using the specified order.
            </summary>
      <param name="scaleX">The scale X.</param>
      <param name="scaleY">The scale Y.</param>
      <param name="order">The order.</param>
    </member>
    <member name="M:Aspose.Imaging.Matrix.Scale(System.Single,System.Single)">
      <summary>
            Applies the specified scale vector (scaleX and scaleY) to this Matrix using (default) Prepend order.
            </summary>
      <param name="sx">The sx. The sx. The sx.</param>
      <param name="sy">The sy. The sy. The sy.</param>
    </member>
    <member name="M:Aspose.Imaging.Matrix.Translate(System.Single,System.Single,Aspose.Imaging.MatrixOrder)">
      <summary>
            Applies the specified translation vector to this Matrix in the specified order.
            </summary>
      <param name="offsetX">The offset X.</param>
      <param name="offsetY">The offset Y.</param>
      <param name="order">The order.</param>
    </member>
    <member name="M:Aspose.Imaging.Matrix.Translate(System.Single,System.Single)">
      <summary>
            Applies the specified translation vector to this <see cref="T:Aspose.Imaging.Matrix" /> using (default) Prepend order.
            </summary>
      <param name="tx">The tx. The tx. The tx.</param>
      <param name="ty">The ty. The ty. The ty.</param>
    </member>
    <member name="M:Aspose.Imaging.Matrix.Multiply(Aspose.Imaging.Matrix,Aspose.Imaging.MatrixOrder)">
      <summary>
            Multiplies this Matrix by the matrix specified in the matrix parameter, and in the order specified in the order parameter.
            </summary>
      <param name="Tx">The tx. The tx. The tx. </param>
      <param name="order">The order. The order. The order.</param>
    </member>
    <member name="M:Aspose.Imaging.Matrix.Multiply(Aspose.Imaging.Matrix)">
      <summary>
            Multiplies this Matrix by the matrix specified in the matrix parameter using (default) Prepend order.
            </summary>
      <param name="Tx">The matrix to multiply with.</param>
    </member>
    <member name="M:Aspose.Imaging.Matrix.Rotate(System.Single,Aspose.Imaging.MatrixOrder)">
      <summary>
            Applies a clockwise rotation of an amount specified in the angle parameter, around the origin (zero x and y coordinates) for this Matrix in the specified order.
            </summary>
      <param name="angle">The rotate angle.</param>
      <param name="order">The matrix order.</param>
    </member>
    <member name="M:Aspose.Imaging.Matrix.Rotate(System.Single)">
      <summary>
            Applies a clockwise rotation of an amount specified in the angle parameter, around the origin (zero x and y coordinates) for this Matrix in the default (Prepend) order.
            </summary>
      <param name="angle">The rotate angle.</param>
    </member>
    <member name="M:Aspose.Imaging.Matrix.RotateAt(System.Single,Aspose.Imaging.PointF,Aspose.Imaging.MatrixOrder)">
      <summary>
            Applies a clockwise rotation about the specified point to this Matrix in the specified order.
            </summary>
      <param name="angle">The angle.</param>
      <param name="point">The point.</param>
      <param name="order">The order.</param>
    </member>
    <member name="M:Aspose.Imaging.Matrix.RotateAt(System.Single,Aspose.Imaging.PointF)">
      <summary>
            Applies a clockwise rotation about the specified point to this Matrix in the default (Prepend) order.
            </summary>
      <param name="angle">The angle.</param>
      <param name="point">The point.</param>
    </member>
    <member name="M:Aspose.Imaging.Matrix.Reset">
      <summary>
            Resets this Matrix to have the elements of the identity matrix.
            </summary>
    </member>
    <member name="M:Aspose.Imaging.Matrix.GetHashCode">
      <summary>
            Returns a hash code for this instance.
            </summary>
      <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
    </member>
    <member name="M:Aspose.Imaging.Matrix.Equals(System.Object)">
      <summary>
            Determines whether the specified <see cref="T:System.Object" /> is equal to this instance.
            </summary>
      <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
      <returns>
        <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
      <exception cref="T:System.NullReferenceException">
            The <paramref name="obj" /> parameter is null.
            </exception>
    </member>
    <member name="M:Aspose.Imaging.Matrix.Equals(Aspose.Imaging.Matrix,Aspose.Imaging.Matrix)">
      <summary>
            Determines whether two matrixes are equal.
            </summary>
      <param name="a">The first matrix to compare.</param>
      <param name="b">The second matrix to compare.</param>
      <returns>True if matrixes are equal.</returns>
    </member>
    <member name="M:Aspose.Imaging.Matrix.ToString">
      <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
      <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
    </member>
    <member name="P:Aspose.Imaging.Matrix.Elements">
      <summary>
            Gets an array of floating-point values that represents the elements of this <see cref="T:Aspose.Imaging.Matrix" />.
            </summary>
      <value>An array of floating-point values that represents the elements of this <see cref="T:Aspose.Imaging.Matrix" />.</value>
    </member>
    <member name="P:Aspose.Imaging.Matrix.M11">
      <summary>
            Gets the matrix element at first row first column. Represents scale along X axis.
            </summary>
    </member>
    <member name="P:Aspose.Imaging.Matrix.M12">
      <summary>
            Gets the matrix element at first row second column. Represents shear along Y axis.
            </summary>
    </member>
    <member name="P:Aspose.Imaging.Matrix.M21">
      <summary>
            Gets the matrix element at second row first column. Represents shear along X axis.
            </summary>
    </member>
    <member name="P:Aspose.Imaging.Matrix.M22">
      <summary>
            Gets the matrix element at second row second column. Represents scale along Y axis.
            </summary>
    </member>
    <member name="P:Aspose.Imaging.Matrix.M31">
      <summary>
            Gets the matrix element at third row first column. Represents translation along X axis.
            </summary>
    </member>
    <member name="P:Aspose.Imaging.Matrix.M32">
      <summary>
            Gets the matrix element at third row first column. Represents translation along Y axis.
            </summary>
    </member>
    <member name="T:Aspose.Imaging.MatrixOrder">
      <summary>
            Specifies the order for matrix transform operations.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.MatrixOrder.Prepend">
      <summary>
            The new operation is applied before the old operation.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.MatrixOrder.Append">
      <summary>
            The new operation is applied after the old operation.
            </summary>
    </member>
    <member name="T:Aspose.Imaging.NamespaceDoc">
      <summary>
            The namespace is the core for nested namespaces and the most basic objects used for Aspose.Imaging processing.
            </summary>
    </member>
    <member name="T:Aspose.Imaging.Pen">
      <summary>
            Defines an object used to draw lines, curves and figures.
            </summary>
      <example>This example shows the creation and usage Pen objects. The example creates a new Image and draw Rectangles on Image surface.<code>[C#]

//Create an instance of BmpOptions and set its various properties
Aspose.Imaging.ImageOptions.BmpOptions bmpOptions = new Aspose.Imaging.ImageOptions.BmpOptions();
bmpOptions.BitsPerPixel = 24;
    
// create a new source based on memory stream.
bmpOptions.Source = new Aspose.Imaging.Sources.StreamSource(new System.IO.MemoryStream(), true);

//Create an instance of Image
using (Aspose.Imaging.Image image = Aspose.Imaging.Image.Create(bmpOptions, 500, 500))
{
    //Create an instance of Graphics and initialize it with Image object
    Aspose.Imaging.Graphics graphics = new Aspose.Imaging.Graphics(image);

    //Clear the Graphics sutface with White Color
    graphics.Clear(Aspose.Imaging.Color.White);

    //Create an instance of Pen with color Red and width 5
    Aspose.Imaging.Pen pen = new Pen(Aspose.Imaging.Color.Red, 5);

    //Create an instance of HatchBrush and set its properties
    Aspose.Imaging.Brushes.HatchBrush brush = new HatchBrush();
    brush.BackgroundColor = Color.Wheat;
    brush.ForegroundColor = Color.Red;

    //Create an instance of Pen
    //initialize it with HatchBrush object and width
    Aspose.Imaging.Pen brusedpen = new Pen(brush, 5);

    //Draw Rectangles by specifying Pen object
    graphics.DrawRectangles(pen, new[] { new Rectangle(new Point(210, 210), new Size(100, 100)), new Rectangle(new Point(110, 110), new Size(100, 100)), new Rectangle(new Point(310, 310), new Size(100, 100)) });

    //Draw Rectangles by specifying Pen object
    graphics.DrawRectangles(brusedpen, new[] { new Rectangle(new Point(310, 110), new Size(100, 100)), new Rectangle(new Point(110, 310), new Size(100, 100)) });

    // save all changes.
    image.Save();
}</code><code>[Visual Basic]

'Create an instance of BmpOptions and set its various properties
Dim bmpOptions As Aspose.Imaging.ImageOptions.BmpOptions = New Aspose.Imaging.ImageOptions.BmpOptions()
bmpOptions.BitsPerPixel = 24

' create a new source based on memory stream.
bmpOptions.Source = New Aspose.Imaging.Sources.StreamSource(New System.IO.MemoryStream(), True)

'Create an instance of Image
Using image As Aspose.Imaging.Image = Aspose.Imaging.Image.Create(bmpOptions, 500, 500)
'Create an instance of Graphics and initialize it with Image object
Dim graphics As Aspose.Imaging.Graphics = New Aspose.Imaging.Graphics(image)

'Clear the Graphics sutface with White Color
    graphics.Clear(Aspose.Imaging.Color.White)

'Create an instance of Pen with color Red and width 5
Dim pen As Aspose.Imaging.Pen = New Pen(Aspose.Imaging.Color.Red, 5)

'Create an instance of HatchBrush and set its properties
Dim brush As Aspose.Imaging.Brushes.HatchBrush = New HatchBrush()
    brush.BackgroundColor = Color.Wheat
    brush.ForegroundColor = Color.Red

'Create an instance of Pen
'initialize it with HatchBrush object and width
Dim brusedpen As Aspose.Imaging.Pen = New Pen(brush, 5)

'Draw Rectangles by specifying Pen object
    graphics.DrawRectangles(pen, New() { New Rectangle(New Point(210, 210), New Size(100, 100)), New Rectangle(New Point(110, 110), New Size(100, 100)), New Rectangle(New Point(310, 310), New Size(100, 100)) })

'Draw Rectangles by specifying Pen object
    graphics.DrawRectangles(brusedpen, New() { New Rectangle(New Point(310, 110), New Size(100, 100)), New Rectangle(New Point(110, 310), New Size(100, 100)) })

' save all changes.
    image.Save()
End Using</code></example>
    </member>
    <member name="T:Aspose.Imaging.TransparencySupporter">
      <summary>
            The object supporting transparency.
            </summary>
    </member>
    <member name="P:Aspose.Imaging.TransparencySupporter.Opacity">
      <summary>
            Gets or sets the object's opacity. The value should be between 0 and 1. Value of 0 means that object is fully visible, value of 1 means the object is fully opaque.
            </summary>
      <value>The opacity value.</value>
    </member>
    <member name="M:Aspose.Imaging.Pen.#ctor(Aspose.Imaging.Color)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.Pen" /> class with the specified color.
            </summary>
      <param name="color">A <see cref="P:Aspose.Imaging.Pen.Color" /> structure that indicates the color of this <see cref="T:Aspose.Imaging.Pen" />.</param>
    </member>
    <member name="M:Aspose.Imaging.Pen.#ctor(Aspose.Imaging.Color,System.Single)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.Pen" /> class with the specified <see cref="P:Aspose.Imaging.Pen.Color" /> and <see cref="P:Aspose.Imaging.Pen.Width" /> properties.
            </summary>
      <param name="color">A <see cref="P:Aspose.Imaging.Pen.Color" /> structure that indicates the color of this <see cref="T:Aspose.Imaging.Pen" />.</param>
      <param name="width">A value indicating the width of this <see cref="T:Aspose.Imaging.Pen" />.</param>
    </member>
    <member name="M:Aspose.Imaging.Pen.#ctor(Aspose.Imaging.Brush)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.Pen" /> class with the specified <see cref="P:Aspose.Imaging.Pen.Brush" />.
            </summary>
      <param name="brush">A <see cref="P:Aspose.Imaging.Pen.Brush" /> that determines the fill properties of this <see cref="T:Aspose.Imaging.Pen" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="brush" /> is null.</exception>
    </member>
    <member name="M:Aspose.Imaging.Pen.#ctor(Aspose.Imaging.Brush,System.Single)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.Pen" /> class with the specified <see cref="P:Aspose.Imaging.Pen.Brush" /> and <see cref="P:Aspose.Imaging.Pen.Width" />.
            </summary>
      <param name="brush">A <see cref="P:Aspose.Imaging.Pen.Brush" /> that determines the characteristics of this <see cref="T:Aspose.Imaging.Pen" />.</param>
      <param name="width">The width of the new <see cref="T:Aspose.Imaging.Pen" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="brush" /> is null.</exception>
    </member>
    <member name="M:Aspose.Imaging.Pen.SetLineCap(Aspose.Imaging.LineCap,Aspose.Imaging.LineCap,Aspose.Imaging.DashCap)">
      <summary>
            Sets the values that determine the style of cap used to end lines drawn by this <see cref="T:Aspose.Imaging.Pen" />.
            </summary>
      <param name="startCap">A <see cref="T:Aspose.Imaging.LineCap" /> that represents the cap style to use at the beginning of lines drawn with this <see cref="T:Aspose.Imaging.Pen" />.</param>
      <param name="endCap">A <see cref="T:Aspose.Imaging.LineCap" /> that represents the cap style to use at the end of lines drawn with this <see cref="T:Aspose.Imaging.Pen" />.</param>
      <param name="dashCap">A <see cref="T:Aspose.Imaging.LineCap" /> that represents the cap style to use at the beginning or end of dashed lines drawn with this <see cref="T:Aspose.Imaging.Pen" />.</param>
    </member>
    <member name="M:Aspose.Imaging.Pen.ResetTransform">
      <summary>
            Resets the geometric transformation matrix for this <see cref="T:Aspose.Imaging.Pen" /> to identity.
            </summary>
    </member>
    <member name="M:Aspose.Imaging.Pen.MultiplyTransform(Aspose.Imaging.Matrix)">
      <summary>
            Multiplies the transformation matrix for this <see cref="T:Aspose.Imaging.Pen" /> by the specified <see cref="T:Aspose.Imaging.Matrix" />.
            </summary>
      <param name="matrix">The <see cref="T:Aspose.Imaging.Matrix" /> object by which to multiply the transformation matrix.</param>
    </member>
    <member name="M:Aspose.Imaging.Pen.MultiplyTransform(Aspose.Imaging.Matrix,Aspose.Imaging.MatrixOrder)">
      <summary>
            Multiplies the transformation matrix for this <see cref="T:Aspose.Imaging.Pen" /> by the specified <see cref="T:Aspose.Imaging.Matrix" /> in the specified order.
            </summary>
      <param name="matrix">The <see cref="T:Aspose.Imaging.Matrix" /> by which to multiply the transformation matrix.</param>
      <param name="order">The order in which to perform the multiplication operation.</param>
    </member>
    <member name="M:Aspose.Imaging.Pen.TranslateTransform(System.Single,System.Single)">
      <summary>
            Translates the local geometric transformation by the specified dimensions. This method prepends the translation to the transformation.
            </summary>
      <param name="dx">The value of the translation in x.</param>
      <param name="dy">The value of the translation in y.</param>
    </member>
    <member name="M:Aspose.Imaging.Pen.TranslateTransform(System.Single,System.Single,Aspose.Imaging.MatrixOrder)">
      <summary>
            Translates the local geometric transformation by the specified dimensions in the specified order.
            </summary>
      <param name="dx">The value of the translation in x.</param>
      <param name="dy">The value of the translation in y.</param>
      <param name="order">The order (prepend or append) in which to apply the translation.</param>
    </member>
    <member name="M:Aspose.Imaging.Pen.ScaleTransform(System.Single,System.Single)">
      <summary>
            Scales the local geometric transformation by the specified factors. This method prepends the scaling matrix to the transformation.
            </summary>
      <param name="sx">The factor by which to scale the transformation in the x-axis direction.</param>
      <param name="sy">The factor by which to scale the transformation in the y-axis direction.</param>
    </member>
    <member name="M:Aspose.Imaging.Pen.ScaleTransform(System.Single,System.Single,Aspose.Imaging.MatrixOrder)">
      <summary>
            Scales the local geometric transformation by the specified factors in the specified order.
            </summary>
      <param name="sx">The factor by which to scale the transformation in the x-axis direction.</param>
      <param name="sy">The factor by which to scale the transformation in the y-axis direction.</param>
      <param name="order">A <see cref="T:Aspose.Imaging.MatrixOrder" /> that specifies whether to append or prepend the scaling matrix.</param>
    </member>
    <member name="M:Aspose.Imaging.Pen.RotateTransform(System.Single)">
      <summary>
            Rotates the local geometric transformation by the specified angle. This method prepends the rotation to the transformation.
            </summary>
      <param name="angle">The angle of rotation.</param>
    </member>
    <member name="M:Aspose.Imaging.Pen.RotateTransform(System.Single,Aspose.Imaging.MatrixOrder)">
      <summary>
            Rotates the local geometric transformation by the specified angle in the specified order.
            </summary>
      <param name="angle">The angle of rotation.</param>
      <param name="order">A <see cref="T:Aspose.Imaging.MatrixOrder" /> that specifies whether to append or prepend the rotation matrix.</param>
    </member>
    <member name="P:Aspose.Imaging.Pen.Width">
      <summary>
            Gets or sets the width of this <see cref="T:Aspose.Imaging.Pen" />, in units of the Graphics object used for drawing.
            </summary>
      <value>The width of this <see cref="T:Aspose.Imaging.Pen" />.</value>
      <exception cref="T:System.ArgumentException">The <see cref="P:Aspose.Imaging.Pen.Width" /> property is set on an immutable <see cref="T:Aspose.Imaging.Pen" />, such as those returned by the <see cref="!:Pens" /> class.</exception>
    </member>
    <member name="P:Aspose.Imaging.Pen.StartCap">
      <summary>
            Gets or sets the cap style used at the beginning of lines drawn with this <see cref="T:Aspose.Imaging.Pen" />.
            </summary>
      <value>One of the <see cref="T:Aspose.Imaging.LineCap" /> values that represents the cap style used at the beginning of lines drawn with this <see cref="T:Aspose.Imaging.Pen" />.</value>
      <exception cref="T:System.ArgumentException">The <see cref="P:Aspose.Imaging.Pen.StartCap" /> property is set on an immutable <see cref="T:Aspose.Imaging.Pen" />, such as those returned by the <see cref="!:Pens" /> class.</exception>
    </member>
    <member name="P:Aspose.Imaging.Pen.EndCap">
      <summary>
            Gets or sets the cap style used at the end of lines drawn with this <see cref="T:Aspose.Imaging.Pen" />.
            </summary>
      <value>One of the <see cref="T:Aspose.Imaging.LineCap" /> values that represents the cap style used at the end of lines drawn with this <see cref="T:Aspose.Imaging.Pen" />.</value>
      <exception cref="T:System.ArgumentException">The <see cref="P:Aspose.Imaging.Pen.EndCap" /> property is set on an immutable <see cref="T:Aspose.Imaging.Pen" />, such as those returned by the <see cref="!:Pens" /> class.</exception>
    </member>
    <member name="P:Aspose.Imaging.Pen.DashCap">
      <summary>
            Gets or sets the cap style used at the end of the dashes that make up dashed lines drawn with this <see cref="T:Aspose.Imaging.Pen" />.
            </summary>
      <value>One of the <see cref="P:Aspose.Imaging.Pen.DashCap" /> values that represents the cap style used at the beginning and end of the dashes that make up dashed lines drawn with this <see cref="T:Aspose.Imaging.Pen" />.</value>
      <exception cref="T:System.ArgumentException">The <see cref="P:Aspose.Imaging.Pen.DashCap" /> property is set on an immutable <see cref="T:Aspose.Imaging.Pen" />, such as those returned by the <see cref="!:Pens" /> class.</exception>
    </member>
    <member name="P:Aspose.Imaging.Pen.LineJoin">
      <summary>
            Gets or sets the join style for the ends of two consecutive lines drawn with this <see cref="T:Aspose.Imaging.Pen" />.
            </summary>
      <value>A <see cref="P:Aspose.Imaging.Pen.LineJoin" /> that represents the join style for the ends of two consecutive lines drawn with this <see cref="T:Aspose.Imaging.Pen" />.</value>
      <exception cref="T:System.ArgumentException">The <see cref="P:Aspose.Imaging.Pen.LineJoin" /> property is set on an immutable <see cref="T:Aspose.Imaging.Pen" />, such as those returned by the <see cref="!:Pens" /> class.</exception>
    </member>
    <member name="P:Aspose.Imaging.Pen.CustomStartCap">
      <summary>
            Gets or sets a custom cap to use at the beginning of lines drawn with this <see cref="T:Aspose.Imaging.Pen" />.
            </summary>
      <value>A <see cref="T:Aspose.Imaging.CustomLineCap" /> that represents the cap used at the beginning of lines drawn with this <see cref="T:Aspose.Imaging.Pen" />.</value>
      <exception cref="T:System.ArgumentException">The <see cref="P:Aspose.Imaging.Pen.CustomStartCap" /> property is set on an immutable <see cref="T:Aspose.Imaging.Pen" />, such as those returned by the <see cref="!:Pens" /> class.</exception>
    </member>
    <member name="P:Aspose.Imaging.Pen.CustomEndCap">
      <summary>
            Gets or sets a custom cap to use at the end of lines drawn with this <see cref="T:Aspose.Imaging.Pen" />.
            </summary>
      <value>A <see cref="T:Aspose.Imaging.CustomLineCap" /> that represents the cap used at the end of lines drawn with this <see cref="T:Aspose.Imaging.Pen" />.</value>
      <exception cref="T:System.ArgumentException">The <see cref="P:Aspose.Imaging.Pen.CustomEndCap" /> property is set on an immutable <see cref="T:Aspose.Imaging.Pen" />, such as those returned by the <see cref="!:Pens" /> class.</exception>
    </member>
    <member name="P:Aspose.Imaging.Pen.MiterLimit">
      <summary>
            Gets or sets the limit of the thickness of the join on a mitered corner.
            </summary>
      <value>The limit of the thickness of the join on a mitered corner.</value>
      <exception cref="T:System.ArgumentException">The <see cref="P:Aspose.Imaging.Pen.MiterLimit" /> property is set on an immutable <see cref="T:Aspose.Imaging.Pen" />, such as those returned by the <see cref="!:Pens" /> class.</exception>
    </member>
    <member name="P:Aspose.Imaging.Pen.Alignment">
      <summary>
            Gets or sets the alignment for this <see cref="T:Aspose.Imaging.Pen" />.
            </summary>
      <value>A <see cref="T:Aspose.Imaging.PenAlignment" /> that represents the alignment for this <see cref="T:Aspose.Imaging.Pen" />.</value>
      <exception cref="T:System.ArgumentException">The <see cref="P:Aspose.Imaging.Pen.Alignment" /> property is set on an immutable <see cref="T:Aspose.Imaging.Pen" />, such as those returned by the <see cref="!:Pens" /> class.</exception>
    </member>
    <member name="P:Aspose.Imaging.Pen.Transform">
      <summary>
            Gets or sets a copy of the geometric transformation for this <see cref="T:Aspose.Imaging.Pen" />.
            </summary>
      <value>A copy of the <see cref="T:Aspose.Imaging.Matrix" /> that represents the geometric transformation for this <see cref="T:Aspose.Imaging.Pen" />.</value>
      <exception cref="T:System.ArgumentException">The <see cref="P:Aspose.Imaging.Pen.Transform" /> property is set on an immutable <see cref="T:Aspose.Imaging.Pen" />, such as those returned by the <see cref="!:Pens" /> class.</exception>
    </member>
    <member name="P:Aspose.Imaging.Pen.PenType">
      <summary>
            Gets the style of lines drawn with this <see cref="T:Aspose.Imaging.Pen" />.
            </summary>
      <value>A <see cref="P:Aspose.Imaging.Pen.PenType" /> enumeration that specifies the style of lines drawn with this <see cref="T:Aspose.Imaging.Pen" />.</value>
    </member>
    <member name="P:Aspose.Imaging.Pen.Color">
      <summary>
            Gets or sets the color of this <see cref="T:Aspose.Imaging.Pen" />.
            </summary>
      <value>A <see cref="P:Aspose.Imaging.Pen.Color" /> structure that represents the color of this <see cref="T:Aspose.Imaging.Pen" />.</value>
      <exception cref="T:System.ArgumentException">The <see cref="P:Aspose.Imaging.Pen.Color" /> property is set on an immutable <see cref="T:Aspose.Imaging.Pen" />, such as those returned by the <see cref="!:Pens" /> class.</exception>
    </member>
    <member name="P:Aspose.Imaging.Pen.Brush">
      <summary>
            Gets or sets the <see cref="P:Aspose.Imaging.Pen.Brush" /> that determines attributes of this <see cref="T:Aspose.Imaging.Pen" />.
            </summary>
      <value>A <see cref="P:Aspose.Imaging.Pen.Brush" /> that determines attributes of this <see cref="T:Aspose.Imaging.Pen" />.</value>
      <exception cref="T:System.ArgumentException">The <see cref="P:Aspose.Imaging.Pen.Brush" /> property is set on an immutable <see cref="T:Aspose.Imaging.Pen" />, such as those returned by the <see cref="!:Pens" /> class.</exception>
    </member>
    <member name="P:Aspose.Imaging.Pen.DashStyle">
      <summary>
            Gets or sets the style used for dashed lines drawn with this <see cref="T:Aspose.Imaging.Pen" />.
            </summary>
      <value>A <see cref="P:Aspose.Imaging.Pen.DashStyle" /> that represents the style used for dashed lines drawn with this <see cref="T:Aspose.Imaging.Pen" />.</value>
      <exception cref="T:System.ArgumentException">The <see cref="P:Aspose.Imaging.Pen.DashStyle" /> property is set on an immutable <see cref="T:Aspose.Imaging.Pen" />, such as those returned by the <see cref="!:Pens" /> class.</exception>
    </member>
    <member name="P:Aspose.Imaging.Pen.DashOffset">
      <summary>
            Gets or sets the distance from the start of a line to the beginning of a dash pattern.
            </summary>
      <value>The distance from the start of a line to the beginning of a dash pattern.</value>
      <exception cref="T:System.ArgumentException">The <see cref="P:Aspose.Imaging.Pen.DashOffset" /> property is set on an immutable <see cref="T:Aspose.Imaging.Pen" />, such as those returned by the <see cref="!:Pens" /> class.</exception>
    </member>
    <member name="P:Aspose.Imaging.Pen.DashPattern">
      <summary>
            Gets or sets an array of custom dashes and spaces.
            </summary>
      <value>An array of real numbers that specifies the lengths of alternating dashes and spaces in dashed lines.</value>
      <exception cref="T:System.ArgumentException">The <see cref="P:Aspose.Imaging.Pen.DashPattern" /> property is set on an immutable <see cref="T:Aspose.Imaging.Pen" />, such as those returned by the <see cref="!:Pens" /> class.</exception>
    </member>
    <member name="P:Aspose.Imaging.Pen.CompoundArray">
      <summary>
            Gets or sets an array of values that specifies a compound pen. A compound pen draws a compound line made up of parallel lines and spaces.
            </summary>
      <value>An array of real numbers that specifies the compound array. The elements in the array must be in increasing order, not less than 0, and not greater than 1.</value>
      <exception cref="T:System.ArgumentException">The <see cref="P:Aspose.Imaging.Pen.CompoundArray" /> property is set on an immutable <see cref="T:Aspose.Imaging.Pen" />, such as those returned by the <see cref="!:Pens" /> class.</exception>
    </member>
    <member name="T:Aspose.Imaging.PenAlignment">
      <summary>
            Specifies the alignment of a <see cref="T:Aspose.Imaging.Pen" /> object in relation to the theoretical, zero-width line.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.PenAlignment.Center">
      <summary>
            Specifies that the <see cref="T:Aspose.Imaging.Pen" /> object is centered over the theoretical line.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.PenAlignment.Inset">
      <summary>
            Specifies that the <see cref="T:Aspose.Imaging.Pen" /> is positioned on the inside of the theoretical line.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.PenAlignment.Outset">
      <summary>
            Specifies the <see cref="T:Aspose.Imaging.Pen" /> is positioned on the outside of the theoretical line.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.PenAlignment.Left">
      <summary>
            Specifies the <see cref="T:Aspose.Imaging.Pen" /> is positioned to the left of the theoretical line.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.PenAlignment.Right">
      <summary>
            Specifies the <see cref="T:Aspose.Imaging.Pen" /> is positioned to the right of the theoretical line.
            </summary>
    </member>
    <member name="T:Aspose.Imaging.PenType">
      <summary>
            Specifies the type of fill a <see cref="T:Aspose.Imaging.Pen" /> object uses to fill lines.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.PenType.SolidColor">
      <summary>
            Specifies a solid fill.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.PenType.HatchFill">
      <summary>
            Specifies a hatch fill.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.PenType.TextureFill">
      <summary>
            Specifies a bitmap texture fill.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.PenType.PathGradient">
      <summary>
            Specifies a path gradient fill.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.PenType.LinearGradient">
      <summary>
            Specifies a linear gradient fill.
            </summary>
    </member>
    <member name="T:Aspose.Imaging.PixelDataFormat">
      <summary>
            The pixel data format.
            </summary>
    </member>
    <member name="M:Aspose.Imaging.PixelDataFormat.op_Inequality(Aspose.Imaging.PixelDataFormat,Aspose.Imaging.PixelDataFormat)">
      <summary>
            Returns result of non-equality for two <see cref="T:Aspose.Imaging.PixelDataFormat" /> classes.
            </summary>
      <param name="pixelFormat1">The first <see cref="T:Aspose.Imaging.PixelDataFormat" /> to compare.</param>
      <param name="pixelFormat2">The second <see cref="T:Aspose.Imaging.PixelDataFormat" /> to compare.</param>
      <returns>True if both <paramref name="pixelFormat1" /> and <paramref name="pixelFormat2" /> contain non-equal data or one of the parameters is null.</returns>
    </member>
    <member name="M:Aspose.Imaging.PixelDataFormat.op_Equality(Aspose.Imaging.PixelDataFormat,Aspose.Imaging.PixelDataFormat)">
      <summary>
            Returns result of equality for two <see cref="T:Aspose.Imaging.PixelDataFormat" /> classes.
            </summary>
      <param name="pixelFormat1">The first <see cref="T:Aspose.Imaging.PixelDataFormat" /> to compare.</param>
      <param name="pixelFormat2">The second <see cref="T:Aspose.Imaging.PixelDataFormat" /> to compare.</param>
      <returns>True if both <paramref name="pixelFormat1" /> and <paramref name="pixelFormat2" /> contain equal data or both parameters are null.</returns>
    </member>
    <member name="M:Aspose.Imaging.PixelDataFormat.Equals(System.Object)">
      <summary>
            Determines whether the specified <see cref="T:System.Object" /> is equal to this instance.
            </summary>
      <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
      <returns>
        <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
    </member>
    <member name="M:Aspose.Imaging.PixelDataFormat.GetHashCode">
      <summary>
            Returns a hash code for this instance.
            </summary>
      <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
    </member>
    <member name="M:Aspose.Imaging.PixelDataFormat.ToString">
      <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
      <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
    </member>
    <member name="P:Aspose.Imaging.PixelDataFormat.Rgb32Bpp">
      <summary>
            Gets the <see cref="T:Aspose.Imaging.PixelDataFormat" /> defined for 32 bits per pixel with 8 bits for each of the alpha, red, green and blue.
            </summary>
      <value>
            The <see cref="T:Aspose.Imaging.PixelDataFormat" /> defined for 32 bits per pixel with 8 bits for each of the alpha, red, green and blue.
            </value>
    </member>
    <member name="P:Aspose.Imaging.PixelDataFormat.CMYK">
      <summary>
            Gets the <see cref="T:Aspose.Imaging.PixelDataFormat" /> defined for 32 bits per pixel with 8 bits for each of the alpha, red, green and blue.
            </summary>
      <value>
            The <see cref="T:Aspose.Imaging.PixelDataFormat" /> defined for 32 bits per pixel with 8 bits for each of the alpha, red, green and blue.
            </value>
    </member>
    <member name="P:Aspose.Imaging.PixelDataFormat.Rgb24Bpp">
      <summary>
            Gets the <see cref="T:Aspose.Imaging.PixelDataFormat" /> defined for 24 bits per pixel with 8 bits for each of the alpha, red, green and blue, alpha is not defined.
            </summary>
      <value>
            The <see cref="T:Aspose.Imaging.PixelDataFormat" /> defined for 24 bits per pixel with 8 bits for each of the alpha, red, green and blue, alpha is not defined.
            </value>
    </member>
    <member name="P:Aspose.Imaging.PixelDataFormat.Rgb16Bpp555">
      <summary>
            Gets the <see cref="T:Aspose.Imaging.PixelDataFormat" /> defined for 16 bits per pixel with 5 bits for each of the red, green and blue, alpha is not defined.
            </summary>
      <value>
            The <see cref="T:Aspose.Imaging.PixelDataFormat" /> defined for 16 bits per pixel with 5 bits for each of the red, green and blue, alpha is not defined.
            </value>
    </member>
    <member name="P:Aspose.Imaging.PixelDataFormat.RgbIndexed8Bpp">
      <summary>
            Gets the <see cref="T:Aspose.Imaging.PixelDataFormat" /> defined for indexed 8 bit per color.
            The indexed pixel data storage is intended to allow data storage and retrieval everywhere the color palette is used.
            Use with caution, because may require conversion from one palette to another or from RGBA to indexed color model.
            </summary>
      <value>
            The <see cref="T:Aspose.Imaging.PixelDataFormat" /> defined for indexed 8 bit per color.
            </value>
    </member>
    <member name="P:Aspose.Imaging.PixelDataFormat.RgbIndexed4Bpp">
      <summary>
            Gets the <see cref="T:Aspose.Imaging.PixelDataFormat" /> defined for indexed 4 bit per color.
            The indexed pixel data storage is intended to allow data storage and retrieval everywhere the color palette is used.
            Use with caution, because may require conversion from one palette to another or from RGBA to indexed color model.
            </summary>
      <value>
            The <see cref="T:Aspose.Imaging.PixelDataFormat" /> defined for indexed 4 bit per color.
            </value>
    </member>
    <member name="P:Aspose.Imaging.PixelDataFormat.RgbIndexed2Bpp">
      <summary>
            Gets the <see cref="T:Aspose.Imaging.PixelDataFormat" /> defined for indexed 2 bit per color.
            The indexed pixel data storage is intended to allow data storage and retrieval everywhere the color palette is used.
            Use with caution, because may require conversion from one palette to another or from RGBA to indexed color model.
            </summary>
      <value>
            The <see cref="T:Aspose.Imaging.PixelDataFormat" /> defined for indexed 2 bit per color.
            </value>
    </member>
    <member name="P:Aspose.Imaging.PixelDataFormat.RgbIndexed1Bpp">
      <summary>
            Gets the <see cref="T:Aspose.Imaging.PixelDataFormat" /> defined for indexed 1 bit per color.
            The indexed pixel data storage is intended to allow data storage and retrieval everywhere the color palette is used.
            Use with caution, because may require conversion from one palette to another or from RGBA to indexed color model.
            </summary>
      <value>
            The <see cref="T:Aspose.Imaging.PixelDataFormat" /> defined for indexed 1 bit per color.
            </value>
    </member>
    <member name="P:Aspose.Imaging.PixelDataFormat.PixelFormat">
      <summary>
            Gets the pixel format.
            </summary>
      <value>
            The pixel format.
            </value>
    </member>
    <member name="P:Aspose.Imaging.PixelDataFormat.BitsPerPixel">
      <summary>
            Gets the bits per pixel.
            </summary>
      <value>
            The bits per pixel.
            </value>
    </member>
    <member name="P:Aspose.Imaging.PixelDataFormat.ChannelsCount">
      <summary>
            Gets the channels count.
            </summary>
      <value>
            The channels count.
            </value>
    </member>
    <member name="P:Aspose.Imaging.PixelDataFormat.ChannelBits">
      <summary>
            Gets the bits count for each channel.
            </summary>
      <value>
            The channel bits.
            </value>
    </member>
    <member name="P:Aspose.Imaging.PixelDataFormat.YCbCr">
      <summary>
            Gets the y cb cr.
            </summary>
    </member>
    <member name="P:Aspose.Imaging.PixelDataFormat.Grayscale">
      <summary>
            Gets the grayscale.
            </summary>
      <value>
            The grayscale.
            </value>
    </member>
    <member name="P:Aspose.Imaging.PixelDataFormat.Ycck">
      <summary>
            Gets the ycck.
            </summary>
      <value>
            The ycck.
            </value>
    </member>
    <member name="P:Aspose.Imaging.PixelDataFormat.Rgba32Bpp">
      <summary>
            Gets or sets the rgba.
            </summary>
    </member>
    <member name="P:Aspose.Imaging.PixelDataFormat.Rgb24BppPng">
      <summary>
            Gets or sets the rgba.
            </summary>
    </member>
    <member name="P:Aspose.Imaging.PixelDataFormat.GrayscaleAlpha">
      <summary>
            Gets the grayscale alpha.
            </summary>
    </member>
    <member name="T:Aspose.Imaging.PixelFormat">
      <summary>
            The pixel data format actual meaning.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.PixelFormat.Grayscale">
      <summary>
            The grayscale color space
            </summary>
    </member>
    <member name="F:Aspose.Imaging.PixelFormat.BGR">
      <summary>
            The BGR color space.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.PixelFormat.RGB">
      <summary>
            The RGB color space.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.PixelFormat.YCbCr">
      <summary>
            The YCbCr color space.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.PixelFormat.CMYK">
      <summary>
            The CMYK color space.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.PixelFormat.YCCK">
      <summary>
            The YCCK color space.
            </summary>
    </member>
    <member name="T:Aspose.Imaging.Point">
      <summary>
            Represents an ordered pair of integer x- and y-coordinates that defines a point in a two-dimensional plane.
            </summary>
    </member>
    <member name="M:Aspose.Imaging.Point.#ctor(System.Int32,System.Int32)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.Point" /> structure with the specified coordinates.
            </summary>
      <param name="x">The horizontal position of the point.</param>
      <param name="y">The vertical position of the point.</param>
    </member>
    <member name="M:Aspose.Imaging.Point.#ctor(Aspose.Imaging.Size)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.Point" /> structure from the <see cref="T:Aspose.Imaging.Size" /> structure.
            </summary>
      <param name="size">Contains the new point coordinates.</param>
    </member>
    <member name="M:Aspose.Imaging.Point.#ctor(System.Int32)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.Point" /> structure using coordinates specified by an integer value.
            </summary>
      <param name="dw">A 32-bit integer that specifies the coordinates for the new point.</param>
    </member>
    <member name="M:Aspose.Imaging.Point.Add(Aspose.Imaging.Point,Aspose.Imaging.Size)">
      <summary>
            Adds the specified <see cref="T:Aspose.Imaging.Size" /> to the specified <see cref="T:Aspose.Imaging.Point" />.
            </summary>
      <param name="point">The <see cref="T:Aspose.Imaging.Point" /> to add to.</param>
      <param name="size">The <see cref="T:Aspose.Imaging.Size" /> to add to the <paramref name="point" />.</param>
      <returns>The <see cref="T:Aspose.Imaging.Point" /> that is the result of the addition operation.</returns>
    </member>
    <member name="M:Aspose.Imaging.Point.Subtract(Aspose.Imaging.Point,Aspose.Imaging.Size)">
      <summary>
            Returns the result of subtracting specified <see cref="T:Aspose.Imaging.Size" /> from the specified <see cref="T:Aspose.Imaging.Point" />.
            </summary>
      <param name="point">The <see cref="T:Aspose.Imaging.Point" /> to be subtracted from.</param>
      <param name="size">The <see cref="T:Aspose.Imaging.Size" /> to subtract from the <paramref name="point" />.</param>
      <returns>The <see cref="T:Aspose.Imaging.Point" /> that is the result of the subtraction operation.</returns>
    </member>
    <member name="M:Aspose.Imaging.Point.Ceiling(Aspose.Imaging.PointF)">
      <summary>
            Converts the specified <see cref="T:Aspose.Imaging.PointF" /> to a <see cref="T:Aspose.Imaging.Point" /> by rounding the values of the <see cref="T:Aspose.Imaging.PointF" /> to the next higher integer values.
            </summary>
      <param name="point">The <see cref="T:Aspose.Imaging.PointF" /> to convert.</param>
      <returns>The <see cref="T:Aspose.Imaging.Point" /> this method converts to.</returns>
    </member>
    <member name="M:Aspose.Imaging.Point.Round(Aspose.Imaging.PointF)">
      <summary>
            Converts the specified <see cref="T:Aspose.Imaging.PointF" /> to a <see cref="T:Aspose.Imaging.Point" /> object by rounding the <see cref="T:Aspose.Imaging.Point" /> values to the nearest integer.
            </summary>
      <param name="point">The <see cref="T:Aspose.Imaging.PointF" /> to convert.</param>
      <returns>The <see cref="T:Aspose.Imaging.Point" /> this method converts to.</returns>
    </member>
    <member name="M:Aspose.Imaging.Point.Truncate(Aspose.Imaging.PointF)">
      <summary>
            Converts the specified <see cref="T:Aspose.Imaging.PointF" /> to a <see cref="T:Aspose.Imaging.Point" /> by truncating the values of the <see cref="T:Aspose.Imaging.Point" />.
            </summary>
      <param name="point">The <see cref="T:Aspose.Imaging.PointF" /> to convert.</param>
      <returns>The <see cref="T:Aspose.Imaging.Point" /> this method converts to.</returns>
    </member>
    <member name="M:Aspose.Imaging.Point.op_Addition(Aspose.Imaging.Point,Aspose.Imaging.Size)">
      <summary>
            Translates a <see cref="T:Aspose.Imaging.Point" /> by a given <see cref="T:Aspose.Imaging.Size" />.
            </summary>
      <param name="point">The <see cref="T:Aspose.Imaging.Point" /> to translate.</param>
      <param name="size">A <see cref="T:Aspose.Imaging.Size" /> that specifies the pair of numbers to add to the coordinates of <paramref name="point" />.</param>
      <returns>The translated <see cref="T:Aspose.Imaging.Point" />.</returns>
    </member>
    <member name="M:Aspose.Imaging.Point.op_Subtraction(Aspose.Imaging.Point,Aspose.Imaging.Size)">
      <summary>
            Translates a <see cref="T:Aspose.Imaging.Point" /> by the negative of a given <see cref="T:Aspose.Imaging.Size" />.
            </summary>
      <param name="point">The <see cref="T:Aspose.Imaging.Point" /> to translate.</param>
      <param name="size">A <see cref="T:Aspose.Imaging.Size" /> that specifies the pair of numbers to subtract from the coordinates of <paramref name="point" />.</param>
      <returns>A <see cref="T:Aspose.Imaging.Point" /> structure that is translated by the negative of a given <see cref="T:Aspose.Imaging.Size" /> structure.</returns>
    </member>
    <member name="M:Aspose.Imaging.Point.op_Equality(Aspose.Imaging.Point,Aspose.Imaging.Point)">
      <summary>
            Compares two <see cref="T:Aspose.Imaging.Point" /> objects. The result specifies whether the values of the <see cref="P:Aspose.Imaging.Point.X" /> and <see cref="P:Aspose.Imaging.Point.Y" /> properties of the two <see cref="T:Aspose.Imaging.Point" /> objects are equal.
            </summary>
      <param name="point1">A first <see cref="T:Aspose.Imaging.Point" /> to compare.</param>
      <param name="point2">A second <see cref="T:Aspose.Imaging.Point" /> to compare.</param>
      <returns>True if the <see cref="P:Aspose.Imaging.Point.X" /> and <see cref="P:Aspose.Imaging.Point.Y" /> values of <paramref name="point1" /> and <paramref name="point2" /> are equal; otherwise, false.</returns>
    </member>
    <member name="M:Aspose.Imaging.Point.op_Inequality(Aspose.Imaging.Point,Aspose.Imaging.Point)">
      <summary>
            Compares two <see cref="T:Aspose.Imaging.Point" /> objects. The result specifies whether the values of the <see cref="P:Aspose.Imaging.Point.X" /> or <see cref="P:Aspose.Imaging.Point.Y" /> properties of the two <see cref="T:Aspose.Imaging.Point" /> objects are unequal.
            </summary>
      <param name="point1">A first <see cref="T:Aspose.Imaging.Point" /> to compare.</param>
      <param name="point2">A second <see cref="T:Aspose.Imaging.Point" /> to compare.</param>
      <returns>True if the values of either the <see cref="P:Aspose.Imaging.Point.X" /> properties or the <see cref="P:Aspose.Imaging.Point.Y" /> properties of <paramref name="point1" /> and <paramref name="point2" /> differ; otherwise, false.</returns>
    </member>
    <member name="M:Aspose.Imaging.Point.op_Explicit(Aspose.Imaging.Point)~Aspose.Imaging.Size">
      <summary>
            Converts the specified <see cref="T:Aspose.Imaging.Point" /> structure to a <see cref="T:Aspose.Imaging.Size" /> structure.
            </summary>
      <param name="point">The <see cref="T:Aspose.Imaging.Point" /> to be converted.</param>
      <returns>The <see cref="T:Aspose.Imaging.Size" /> that results from the conversion.</returns>
    </member>
    <member name="M:Aspose.Imaging.Point.op_Implicit(Aspose.Imaging.Point)~Aspose.Imaging.PointF">
      <summary>
            Converts the specified <see cref="T:Aspose.Imaging.Point" /> structure to the <see cref="T:Aspose.Imaging.PointF" /> structure.
            </summary>
      <param name="point">The <see cref="T:Aspose.Imaging.Point" /> to be converted.</param>
      <returns>The <see cref="T:Aspose.Imaging.PointF" /> that results from the conversion.</returns>
    </member>
    <member name="M:Aspose.Imaging.Point.Offset(Aspose.Imaging.Point)">
      <summary>
            Translates this <see cref="T:Aspose.Imaging.Point" /> by the specified <see cref="T:Aspose.Imaging.Point" />.
            </summary>
      <param name="point">The <see cref="T:Aspose.Imaging.Point" /> used to offset this <see cref="T:Aspose.Imaging.Point" />.</param>
    </member>
    <member name="M:Aspose.Imaging.Point.Offset(System.Int32,System.Int32)">
      <summary>
            Translates this <see cref="T:Aspose.Imaging.Point" /> by the specified amount.
            </summary>
      <param name="dx">The amount to offset the x-coordinate.</param>
      <param name="dy">The amount to offset the y-coordinate.</param>
    </member>
    <member name="M:Aspose.Imaging.Point.Equals(System.Object)">
      <summary>
            Specifies whether this <see cref="T:Aspose.Imaging.Point" /> contains the same coordinates as the specified <see cref="T:System.Object" />.
            </summary>
      <param name="obj">The <see cref="T:System.Object" /> to test.</param>
      <returns>True if <paramref name="obj" /> is a <see cref="T:Aspose.Imaging.Point" /> and has the same coordinates as this <see cref="T:Aspose.Imaging.Point" />.</returns>
    </member>
    <member name="M:Aspose.Imaging.Point.GetHashCode">
      <summary>
            Returns a hash code for this <see cref="T:Aspose.Imaging.Point" />.
            </summary>
      <returns>A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.</returns>
    </member>
    <member name="M:Aspose.Imaging.Point.ToString">
      <summary>
            Converts this <see cref="T:Aspose.Imaging.Point" /> to a human-readable string.
            </summary>
      <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
    </member>
    <member name="P:Aspose.Imaging.Point.Empty">
      <summary>
            Gets a new instance of the <see cref="T:Aspose.Imaging.Point" /> structure that has <see cref="P:Aspose.Imaging.Point.X" /> and <see cref="P:Aspose.Imaging.Point.Y" /> values set to zero.
            </summary>
    </member>
    <member name="P:Aspose.Imaging.Point.IsEmpty">
      <summary>
            Gets a value indicating whether this <see cref="T:Aspose.Imaging.Point" /> is empty.
            </summary>
      <returns>True if both <see cref="P:Aspose.Imaging.Point.X" /> and <see cref="P:Aspose.Imaging.Point.Y" /> are 0; otherwise, false.</returns>
    </member>
    <member name="P:Aspose.Imaging.Point.X">
      <summary>
            Gets or sets the x-coordinate of this <see cref="T:Aspose.Imaging.Point" />.
            </summary>
    </member>
    <member name="P:Aspose.Imaging.Point.Y">
      <summary>
            Gets or sets the y-coordinate of this <see cref="T:Aspose.Imaging.Point" />.
            </summary>
    </member>
    <member name="T:Aspose.Imaging.PointF">
      <summary>
            Represents an ordered pair of floating-point x- and y-coordinates that defines a point in a two-dimensional plane.
            </summary>
    </member>
    <member name="M:Aspose.Imaging.PointF.#ctor(System.Single,System.Single)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.PointF" /> structure with the specified coordinates.
            </summary>
      <param name="x">The horizontal position of the point.</param>
      <param name="y">The vertical position of the point.</param>
    </member>
    <member name="M:Aspose.Imaging.PointF.op_Addition(Aspose.Imaging.PointF,Aspose.Imaging.Size)">
      <summary>
            Translates a <see cref="T:Aspose.Imaging.PointF" /> by a given <see cref="T:Aspose.Imaging.Size" />.
            </summary>
      <param name="point">The <see cref="T:Aspose.Imaging.PointF" /> to translate.</param>
      <param name="size">A <see cref="T:Aspose.Imaging.Size" /> that specifies the pair of numbers to add to the coordinates of <paramref name="point" />.</param>
      <returns>Returns the translated <see cref="T:Aspose.Imaging.PointF" />.</returns>
    </member>
    <member name="M:Aspose.Imaging.PointF.op_Subtraction(Aspose.Imaging.PointF,Aspose.Imaging.Size)">
      <summary>
            Translates a <see cref="T:Aspose.Imaging.PointF" /> by the negative of a given <see cref="T:Aspose.Imaging.Size" />.
            </summary>
      <param name="point">A <see cref="T:Aspose.Imaging.PointF" /> to translate.</param>
      <param name="size">A <see cref="T:Aspose.Imaging.Size" /> that specifies the numbers to subtract from the x- and y-coordinates of the <paramref name="point" />.</param>
      <returns>The translated <see cref="T:Aspose.Imaging.PointF" />.</returns>
    </member>
    <member name="M:Aspose.Imaging.PointF.op_Addition(Aspose.Imaging.PointF,Aspose.Imaging.SizeF)">
      <summary>
            Translates the <see cref="T:Aspose.Imaging.PointF" /> by the specified <see cref="T:Aspose.Imaging.SizeF" />.
            </summary>
      <param name="point">The <see cref="T:Aspose.Imaging.PointF" /> to translate.</param>
      <param name="size">The <see cref="T:Aspose.Imaging.SizeF" /> that specifies the numbers to add to the x- and y-coordinates of the <paramref name="point" />.</param>
      <returns>The translated <see cref="T:Aspose.Imaging.PointF" />.</returns>
    </member>
    <member name="M:Aspose.Imaging.PointF.op_Subtraction(Aspose.Imaging.PointF,Aspose.Imaging.SizeF)">
      <summary>
            Translates a <see cref="T:Aspose.Imaging.PointF" /> by the negative of a specified <see cref="T:Aspose.Imaging.SizeF" />.
            </summary>
      <param name="point">The <see cref="T:Aspose.Imaging.PointF" /> to translate.</param>
      <param name="size">The <see cref="T:Aspose.Imaging.SizeF" /> that specifies the numbers to subtract from the coordinates of <paramref name="point" />.</param>
      <returns>The translated <see cref="T:Aspose.Imaging.PointF" />.</returns>
    </member>
    <member name="M:Aspose.Imaging.PointF.op_Equality(Aspose.Imaging.PointF,Aspose.Imaging.PointF)">
      <summary>
            Compares two <see cref="T:Aspose.Imaging.PointF" /> structures. The result specifies whether the values of the <see cref="P:Aspose.Imaging.PointF.X" /> and <see cref="P:Aspose.Imaging.PointF.Y" /> properties of the two <see cref="T:Aspose.Imaging.PointF" /> structures are equal.
            </summary>
      <param name="point1">A first <see cref="T:Aspose.Imaging.PointF" /> to compare.</param>
      <param name="point2">A second <see cref="T:Aspose.Imaging.PointF" /> to compare.</param>
      <returns>True if the <see cref="P:Aspose.Imaging.PointF.X" /> and <see cref="P:Aspose.Imaging.PointF.Y" /> values of the first and second <see cref="T:Aspose.Imaging.PointF" /> structures are equal; otherwise, false.</returns>
    </member>
    <member name="M:Aspose.Imaging.PointF.op_Inequality(Aspose.Imaging.PointF,Aspose.Imaging.PointF)">
      <summary>
            Determines whether the coordinates of the specified points are not equal.
            </summary>
      <param name="point1">A first <see cref="T:Aspose.Imaging.PointF" /> to compare.</param>
      <param name="point2">A second <see cref="T:Aspose.Imaging.PointF" /> to compare.</param>
      <returns>True to indicate the <see cref="P:Aspose.Imaging.PointF.X" /> and <see cref="P:Aspose.Imaging.PointF.Y" /> values of <paramref name="point1" /> and <paramref name="point2" /> are not equal; otherwise, false.</returns>
    </member>
    <member name="M:Aspose.Imaging.PointF.Add(Aspose.Imaging.PointF,Aspose.Imaging.Size)">
      <summary>
            Translates a given <see cref="T:Aspose.Imaging.PointF" /> by the specified <see cref="T:Aspose.Imaging.Size" />.
            </summary>
      <param name="point">The <see cref="T:Aspose.Imaging.PointF" /> to translate.</param>
      <param name="size">The <see cref="T:Aspose.Imaging.Size" /> that specifies the numbers to add to the coordinates of <paramref name="point" />.</param>
      <returns>The translated <see cref="T:Aspose.Imaging.PointF" />.</returns>
    </member>
    <member name="M:Aspose.Imaging.PointF.Subtract(Aspose.Imaging.PointF,Aspose.Imaging.Size)">
      <summary>
            Translates a <see cref="T:Aspose.Imaging.PointF" /> by the negative of a specified size.
            </summary>
      <param name="point">The <see cref="T:Aspose.Imaging.PointF" /> to translate.</param>
      <param name="size">The <see cref="T:Aspose.Imaging.Size" /> that specifies the numbers to subtract from the coordinates of <paramref name="point" />.</param>
      <returns>The translated <see cref="T:Aspose.Imaging.PointF" />.</returns>
    </member>
    <member name="M:Aspose.Imaging.PointF.Add(Aspose.Imaging.PointF,Aspose.Imaging.SizeF)">
      <summary>
            Translates a given <see cref="T:Aspose.Imaging.PointF" /> by a specified <see cref="T:Aspose.Imaging.SizeF" />.
            </summary>
      <param name="point">The <see cref="T:Aspose.Imaging.PointF" /> to translate.</param>
      <param name="size">The <see cref="T:Aspose.Imaging.SizeF" /> that specifies the numbers to add to the coordinates of <paramref name="point" />.</param>
      <returns>The translated <see cref="T:Aspose.Imaging.PointF" />.</returns>
    </member>
    <member name="M:Aspose.Imaging.PointF.Subtract(Aspose.Imaging.PointF,Aspose.Imaging.SizeF)">
      <summary>
            Translates a <see cref="T:Aspose.Imaging.PointF" /> by the negative of a specified size.
            </summary>
      <param name="point">The <see cref="T:Aspose.Imaging.PointF" /> to translate.</param>
      <param name="size">The <see cref="T:Aspose.Imaging.SizeF" /> that specifies the numbers to subtract from the coordinates of <paramref name="point" />.</param>
      <returns>The translated <see cref="T:Aspose.Imaging.PointF" />.</returns>
    </member>
    <member name="M:Aspose.Imaging.PointF.Equals(System.Object)">
      <summary>
            Specifies whether this <see cref="T:Aspose.Imaging.PointF" /> contains the same coordinates as the specified <see cref="T:System.Object" />.
            </summary>
      <param name="obj">The <see cref="T:System.Object" /> to test.</param>
      <returns>This method returns true if <paramref name="obj" /> is a <see cref="T:Aspose.Imaging.PointF" /> and has the same coordinates as this <see cref="T:Aspose.Imaging.Point" />.</returns>
    </member>
    <member name="M:Aspose.Imaging.PointF.GetHashCode">
      <summary>
            Returns a hash code for this <see cref="T:Aspose.Imaging.PointF" /> structure.
            </summary>
      <returns>An integer value that specifies a hash value for this <see cref="T:Aspose.Imaging.PointF" /> structure.</returns>
    </member>
    <member name="M:Aspose.Imaging.PointF.ToString">
      <summary>
            Converts this <see cref="T:Aspose.Imaging.PointF" /> to a human readable string.
            </summary>
      <returns>A string that represents this <see cref="T:Aspose.Imaging.PointF" />.</returns>
    </member>
    <member name="P:Aspose.Imaging.PointF.Empty">
      <summary>
            Gets a new instance of the <see cref="T:Aspose.Imaging.PointF" /> structure that has <see cref="P:Aspose.Imaging.PointF.X" /> and <see cref="P:Aspose.Imaging.PointF.Y" /> values set to zero.
            </summary>
    </member>
    <member name="P:Aspose.Imaging.PointF.IsEmpty">
      <summary>
            Gets a value indicating whether this <see cref="T:Aspose.Imaging.PointF" /> is empty.
            </summary>
      <value>True if both <see cref="P:Aspose.Imaging.PointF.X" /> and <see cref="P:Aspose.Imaging.PointF.Y" /> are 0; otherwise, false.</value>
    </member>
    <member name="P:Aspose.Imaging.PointF.X">
      <summary>
            Gets or sets the x-coordinate of this <see cref="T:Aspose.Imaging.PointF" />.
            </summary>
    </member>
    <member name="P:Aspose.Imaging.PointF.Y">
      <summary>
            Gets or sets the y-coordinate of this <see cref="T:Aspose.Imaging.PointF" />.
            </summary>
    </member>
    <member name="T:Aspose.Imaging.RawDataSettings">
      <summary>
            The raw data settings
            </summary>
    </member>
    <member name="P:Aspose.Imaging.RawDataSettings.PixelDataFormat">
      <summary>
            Gets or sets the pixel data format
            </summary>
      <value>
            The pixel data format
            </value>
    </member>
    <member name="P:Aspose.Imaging.RawDataSettings.ColorPalette">
      <summary>
            Gets or sets the color palette
            </summary>
      <value>
            The color palette
            </value>
    </member>
    <member name="P:Aspose.Imaging.RawDataSettings.DitheringMethod">
      <summary>
            Gets or sets the dithering method to use for raw data conversion
            </summary>
      <value>
            The dithering method to use for raw data conversion
            </value>
    </member>
    <member name="P:Aspose.Imaging.RawDataSettings.IndexedColorConverter">
      <summary>
            Gets or sets the indexed color converter
            </summary>
      <value>
            The indexed color converter
            </value>
    </member>
    <member name="P:Aspose.Imaging.RawDataSettings.CustomColorConverter">
      <summary>
            Gets or sets the custom color converter
            </summary>
      <value>
            The custom color converter
            </value>
    </member>
    <member name="P:Aspose.Imaging.RawDataSettings.FallbackIndex">
      <summary>
            Gets or sets the fallback index to use when palette index is out of bounds
            </summary>
      <value>
            The fallback index to use when palette index is out of bounds
            </value>
    </member>
    <member name="P:Aspose.Imaging.RawDataSettings.LineSize">
      <summary>
            Gets or sets the pixels line size in bytes for raw data processing
            </summary>
      <value>
            The pixels line size in bytes for raw data processing
            </value>
    </member>
    <member name="T:Aspose.Imaging.Rectangle">
      <summary>
            Stores a set of four integers that represent the location and size of a rectangle.
            </summary>
    </member>
    <member name="M:Aspose.Imaging.Rectangle.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.Rectangle" /> structure with the specified location and size.
            </summary>
      <param name="x">The x-coordinate of the upper-left corner of the rectangle.</param>
      <param name="y">The y-coordinate of the upper-left corner of the rectangle.</param>
      <param name="width">The width of the rectangle.</param>
      <param name="height">The height of the rectangle.</param>
    </member>
    <member name="M:Aspose.Imaging.Rectangle.#ctor(Aspose.Imaging.Point,Aspose.Imaging.Size)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.Rectangle" /> structure with the specified location and size.
            </summary>
      <param name="location">A <see cref="T:Aspose.Imaging.Point" /> that represents the upper-left corner of the rectangular region.</param>
      <param name="size">A <see cref="T:Aspose.Imaging.Size" /> that represents the width and height of the rectangular region.</param>
    </member>
    <member name="M:Aspose.Imaging.Rectangle.FromPoints(Aspose.Imaging.Point,Aspose.Imaging.Point)">
      <summary>
            Creates a new <see cref="T:Aspose.Imaging.Rectangle" /> from two points specified. Two verticales of the created <see cref="T:Aspose.Imaging.Rectangle" /> will be equal to the passed <paramref name="point1" /> and <paramref name="point2" />. These would be typically the opposite vertices.
            </summary>
      <param name="point1">The first <see cref="T:Aspose.Imaging.Point" /> for the new rectangle.</param>
      <param name="point2">The second <see cref="T:Aspose.Imaging.Point" /> for the new rectangle.</param>
      <returns>A newly created <see cref="T:Aspose.Imaging.Rectangle" />.</returns>
    </member>
    <member name="M:Aspose.Imaging.Rectangle.Ceiling(Aspose.Imaging.RectangleF)">
      <summary>
            Converts the specified <see cref="T:Aspose.Imaging.RectangleF" /> structure to a <see cref="T:Aspose.Imaging.Rectangle" /> structure by rounding the <see cref="T:Aspose.Imaging.RectangleF" /> values to the next higher integer values.
            </summary>
      <param name="value">The <see cref="T:Aspose.Imaging.RectangleF" /> structure to be converted.</param>
      <returns>Returns a <see cref="T:Aspose.Imaging.Rectangle" />.</returns>
    </member>
    <member name="M:Aspose.Imaging.Rectangle.Truncate(Aspose.Imaging.RectangleF)">
      <summary>
            Converts the specified <see cref="T:Aspose.Imaging.RectangleF" /> to a <see cref="T:Aspose.Imaging.Rectangle" /> by truncating the <see cref="T:Aspose.Imaging.RectangleF" /> values.
            </summary>
      <param name="value">The <see cref="T:Aspose.Imaging.RectangleF" /> to be converted.</param>
      <returns>A new <see cref="T:Aspose.Imaging.Rectangle" />.</returns>
    </member>
    <member name="M:Aspose.Imaging.Rectangle.Round(Aspose.Imaging.RectangleF)">
      <summary>
            Converts the specified <see cref="T:Aspose.Imaging.RectangleF" /> to a <see cref="T:Aspose.Imaging.Rectangle" /> by rounding the <see cref="T:Aspose.Imaging.RectangleF" /> values to the nearest integer values.
            </summary>
      <param name="value">The <see cref="T:Aspose.Imaging.RectangleF" /> to be converted.</param>
      <returns>A new <see cref="T:Aspose.Imaging.Rectangle" />.</returns>
    </member>
    <member name="M:Aspose.Imaging.Rectangle.Inflate(Aspose.Imaging.Rectangle,System.Int32,System.Int32)">
      <summary>
            Creates and returns an inflated copy of the specified <see cref="T:Aspose.Imaging.Rectangle" /> structure. The copy is inflated by the specified amount. The original <see cref="T:Aspose.Imaging.Rectangle" /> structure remains unmodified.
            </summary>
      <param name="rect">The <see cref="T:Aspose.Imaging.Rectangle" /> with which to start. This rectangle is not modified.</param>
      <param name="x">The amount to inflate this <see cref="T:Aspose.Imaging.Rectangle" /> horizontally.</param>
      <param name="y">The amount to inflate this <see cref="T:Aspose.Imaging.Rectangle" /> vertically.</param>
      <returns>The inflated <see cref="T:Aspose.Imaging.Rectangle" />.</returns>
    </member>
    <member name="M:Aspose.Imaging.Rectangle.Intersect(Aspose.Imaging.Rectangle,Aspose.Imaging.Rectangle)">
      <summary>
            Returns a third <see cref="T:Aspose.Imaging.Rectangle" /> structure that represents the intersection of two other <see cref="T:Aspose.Imaging.Rectangle" /> structures. If there is no intersection, an empty <see cref="T:Aspose.Imaging.Rectangle" /> is returned.
            </summary>
      <param name="a">A first rectangle to intersect.</param>
      <param name="b">A second rectangle to intersect.</param>
      <returns>A <see cref="T:Aspose.Imaging.Rectangle" /> that represents the intersection of <paramref name="a" /> and <paramref name="b" />.</returns>
    </member>
    <member name="M:Aspose.Imaging.Rectangle.Union(Aspose.Imaging.Rectangle,Aspose.Imaging.Rectangle)">
      <summary>
            Gets a <see cref="T:Aspose.Imaging.Rectangle" /> structure that contains the union of two <see cref="T:Aspose.Imaging.Rectangle" /> structures.
            </summary>
      <param name="a">A first rectangle to union.</param>
      <param name="b">A second rectangle to union.</param>
      <returns>A <see cref="T:Aspose.Imaging.Rectangle" /> structure that bounds the union of the two <see cref="T:Aspose.Imaging.Rectangle" /> structures.</returns>
    </member>
    <member name="M:Aspose.Imaging.Rectangle.op_Equality(Aspose.Imaging.Rectangle,Aspose.Imaging.Rectangle)">
      <summary>
            Tests whether two <see cref="T:Aspose.Imaging.Rectangle" /> structures have equal location and size.
            </summary>
      <param name="left">The <see cref="T:Aspose.Imaging.Rectangle" /> structure that is to the left of the equality operator.</param>
      <param name="right">The <see cref="T:Aspose.Imaging.Rectangle" /> structure that is to the right of the equality operator.</param>
      <returns>This operator returns true if the two <see cref="T:Aspose.Imaging.Rectangle" /> structures have equal <see cref="P:Aspose.Imaging.Rectangle.X" />, <see cref="P:Aspose.Imaging.Rectangle.Y" />, <see cref="P:Aspose.Imaging.Rectangle.Width" />, and <see cref="P:Aspose.Imaging.Rectangle.Height" /> properties.</returns>
    </member>
    <member name="M:Aspose.Imaging.Rectangle.op_Inequality(Aspose.Imaging.Rectangle,Aspose.Imaging.Rectangle)">
      <summary>
            Tests whether two <see cref="T:Aspose.Imaging.Rectangle" /> structures differ in location or size.
            </summary>
      <param name="left">The <see cref="T:Aspose.Imaging.Rectangle" /> structure that is to the left of the inequality operator.</param>
      <param name="right">The <see cref="T:Aspose.Imaging.Rectangle" /> structure that is to the right of the inequality operator.</param>
      <returns>This operator returns true if any of the <see cref="P:Aspose.Imaging.Rectangle.X" />, <see cref="P:Aspose.Imaging.Rectangle.Y" />, <see cref="P:Aspose.Imaging.Rectangle.Width" /> or <see cref="P:Aspose.Imaging.Rectangle.Height" /> properties of the two <see cref="T:Aspose.Imaging.Rectangle" /> structures are unequal; otherwise false.</returns>
    </member>
    <member name="M:Aspose.Imaging.Rectangle.FromLeftTopRightBottom(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Creates a <see cref="T:Aspose.Imaging.Rectangle" /> structure with the specified edge locations.
            </summary>
      <param name="left">The x-coordinate of the upper-left corner of this <see cref="T:Aspose.Imaging.Rectangle" /> structure.</param>
      <param name="top">The y-coordinate of the upper-left corner of this <see cref="T:Aspose.Imaging.Rectangle" /> structure.</param>
      <param name="right">The x-coordinate of the lower-right corner of this <see cref="T:Aspose.Imaging.Rectangle" /> structure.</param>
      <param name="bottom">The y-coordinate of the lower-right corner of this <see cref="T:Aspose.Imaging.Rectangle" /> structure.</param>
      <returns>The new <see cref="T:Aspose.Imaging.Rectangle" /> that this method creates.</returns>
    </member>
    <member name="M:Aspose.Imaging.Rectangle.Contains(System.Int32,System.Int32)">
      <summary>
            Determines if the specified point is contained within this <see cref="T:Aspose.Imaging.Rectangle" /> structure.
            </summary>
      <param name="x">The x-coordinate of the point to test.</param>
      <param name="y">The y-coordinate of the point to test.</param>
      <returns>This method returns true if the point defined by <paramref name="x" /> and <paramref name="y" /> is contained within this <see cref="T:Aspose.Imaging.Rectangle" /> structure; otherwise false.</returns>
    </member>
    <member name="M:Aspose.Imaging.Rectangle.Contains(Aspose.Imaging.Point)">
      <summary>
            Determines if the specified point is contained within this <see cref="T:Aspose.Imaging.Rectangle" /> structure.
            </summary>
      <param name="point">The <see cref="T:Aspose.Imaging.Point" /> to test.</param>
      <returns>This method returns true if the point represented by <paramref name="point" /> is contained within this <see cref="T:Aspose.Imaging.Rectangle" /> structure; otherwise false.</returns>
    </member>
    <member name="M:Aspose.Imaging.Rectangle.Contains(Aspose.Imaging.Rectangle)">
      <summary>
            Determines if the rectangular region represented by <paramref name="rect" /> is entirely contained within this <see cref="T:Aspose.Imaging.Rectangle" /> structure.
            </summary>
      <param name="rect">The <see cref="T:Aspose.Imaging.Rectangle" /> to test.</param>
      <returns>This method returns true if the rectangular region represented by <paramref name="rect" /> is entirely contained within this <see cref="T:Aspose.Imaging.Rectangle" /> structure; otherwise false.</returns>
    </member>
    <member name="M:Aspose.Imaging.Rectangle.Inflate(System.Int32,System.Int32)">
      <summary>
            Inflates this <see cref="T:Aspose.Imaging.Rectangle" /> by the specified amount.
            </summary>
      <param name="width">The amount to inflate this <see cref="T:Aspose.Imaging.Rectangle" /> horizontally.</param>
      <param name="height">The amount to inflate this <see cref="T:Aspose.Imaging.Rectangle" /> vertically.</param>
    </member>
    <member name="M:Aspose.Imaging.Rectangle.Inflate(Aspose.Imaging.Size)">
      <summary>
            Inflates this <see cref="T:Aspose.Imaging.Rectangle" /> by the specified amount.
            </summary>
      <param name="size">The amount to inflate this rectangle.</param>
    </member>
    <member name="M:Aspose.Imaging.Rectangle.Intersect(Aspose.Imaging.Rectangle)">
      <summary>
            Replaces this <see cref="T:Aspose.Imaging.Rectangle" /> with the intersection of itself and the specified <see cref="T:Aspose.Imaging.Rectangle" />.
            </summary>
      <param name="rect">The <see cref="T:Aspose.Imaging.Rectangle" /> with which to intersect.</param>
    </member>
    <member name="M:Aspose.Imaging.Rectangle.IntersectsWith(Aspose.Imaging.Rectangle)">
      <summary>
            Determines if this rectangle intersects with <paramref name="rect" />.
            </summary>
      <param name="rect">The rectangle to test.</param>
      <returns>This method returns true if there is any intersection, otherwise false.</returns>
    </member>
    <member name="M:Aspose.Imaging.Rectangle.Offset(Aspose.Imaging.Point)">
      <summary>
            Adjusts the location of this rectangle by the specified amount.
            </summary>
      <param name="pos">Amount to offset the location.</param>
    </member>
    <member name="M:Aspose.Imaging.Rectangle.Offset(System.Int32,System.Int32)">
      <summary>
            Adjusts the location of this rectangle by the specified amount.
            </summary>
      <param name="x">The horizontal offset.</param>
      <param name="y">The vertical offset.</param>
    </member>
    <member name="M:Aspose.Imaging.Rectangle.Normalize">
      <summary>
            Normalizes the rectangle by making it's width and height positive, left less than right and top less than bottom.
            </summary>
    </member>
    <member name="M:Aspose.Imaging.Rectangle.Equals(System.Object)">
      <summary>
            Tests whether <paramref name="obj" /> is a <see cref="T:Aspose.Imaging.Rectangle" /> structure with the same location and size of this <see cref="T:Aspose.Imaging.Rectangle" /> structure.
            </summary>
      <param name="obj">The <see cref="T:System.Object" /> to test.</param>
      <returns>This method returns true if <paramref name="obj" /> is a <see cref="T:Aspose.Imaging.Rectangle" /> structure and its <see cref="P:Aspose.Imaging.Rectangle.X" />, <see cref="P:Aspose.Imaging.Rectangle.Y" />, <see cref="P:Aspose.Imaging.Rectangle.Width" />, and <see cref="P:Aspose.Imaging.Rectangle.Height" /> properties are equal to the corresponding properties of this <see cref="T:Aspose.Imaging.Rectangle" /> structure; otherwise, false.</returns>
    </member>
    <member name="M:Aspose.Imaging.Rectangle.GetHashCode">
      <summary>
            Returns the hash code for this <see cref="T:Aspose.Imaging.Rectangle" /> structure.
            </summary>
      <returns>An integer that represents the hash code for this rectangle.</returns>
    </member>
    <member name="M:Aspose.Imaging.Rectangle.ToString">
      <summary>
            Converts the attributes of this <see cref="T:Aspose.Imaging.Rectangle" /> to a human-readable string.
            </summary>
      <returns>A string that contains the position, width, and height of this <see cref="T:Aspose.Imaging.Rectangle" /> structure.</returns>
    </member>
    <member name="P:Aspose.Imaging.Rectangle.Empty">
      <summary>
            Gets a new instance of the <see cref="T:Aspose.Imaging.Rectangle" /> structure that has <see cref="P:Aspose.Imaging.Rectangle.X" />, <see cref="P:Aspose.Imaging.Rectangle.Y" />, <see cref="P:Aspose.Imaging.Rectangle.Width" /> and <see cref="P:Aspose.Imaging.Rectangle.Height" /> values set to zero.
            </summary>
    </member>
    <member name="P:Aspose.Imaging.Rectangle.Location">
      <summary>
            Gets or sets the coordinates of the upper-left corner of this <see cref="T:Aspose.Imaging.Rectangle" /> structure.
            </summary>
      <value>A <see cref="T:Aspose.Imaging.Point" /> that represents the upper-left corner of this <see cref="T:Aspose.Imaging.Rectangle" /> structure.</value>
    </member>
    <member name="P:Aspose.Imaging.Rectangle.Size">
      <summary>
            Gets or sets the size of this <see cref="T:Aspose.Imaging.Rectangle" />.
            </summary>
      <value>A <see cref="T:Aspose.Imaging.Size" /> that represents the width and height of this <see cref="T:Aspose.Imaging.Rectangle" /> structure.</value>
    </member>
    <member name="P:Aspose.Imaging.Rectangle.X">
      <summary>
            Gets or sets the x-coordinate of the upper-left corner of this <see cref="T:Aspose.Imaging.Rectangle" /> structure.
            </summary>
      <value>The x-coordinate of the upper-left corner of this <see cref="T:Aspose.Imaging.Rectangle" /> structure.</value>
    </member>
    <member name="P:Aspose.Imaging.Rectangle.Y">
      <summary>
            Gets or sets the y-coordinate of the upper-left corner of this <see cref="T:Aspose.Imaging.Rectangle" /> structure.
            </summary>
      <value>The y-coordinate of the upper-left corner of this <see cref="T:Aspose.Imaging.Rectangle" /> structure.</value>
    </member>
    <member name="P:Aspose.Imaging.Rectangle.Width">
      <summary>
            Gets or sets the width of this <see cref="T:Aspose.Imaging.Rectangle" /> structure.
            </summary>
      <returns>The width of this <see cref="T:Aspose.Imaging.Rectangle" /> structure.</returns>
    </member>
    <member name="P:Aspose.Imaging.Rectangle.Height">
      <summary>
            Gets or sets the height of this <see cref="T:Aspose.Imaging.Rectangle" /> structure.
            </summary>
      <returns>The height of this <see cref="T:Aspose.Imaging.Rectangle" /> structure.</returns>
    </member>
    <member name="P:Aspose.Imaging.Rectangle.Left">
      <summary>
            Gets or sets the x-coordinate of the left edge of this <see cref="T:Aspose.Imaging.Rectangle" /> structure.
            </summary>
      <value>The x-coordinate of the left edge of this <see cref="T:Aspose.Imaging.Rectangle" /> structure.</value>
    </member>
    <member name="P:Aspose.Imaging.Rectangle.Top">
      <summary>
            Gets or sets the y-coordinate of the top edge of this <see cref="T:Aspose.Imaging.Rectangle" /> structure.
            </summary>
      <value>
            The y-coordinate of the top edge of this <see cref="T:Aspose.Imaging.Rectangle" /> structure.
            </value>
    </member>
    <member name="P:Aspose.Imaging.Rectangle.Right">
      <summary>
            Gets or sets the x-coordinate that is the sum of <see cref="P:Aspose.Imaging.Rectangle.X" /> and <see cref="P:Aspose.Imaging.Rectangle.Width" /> property values of this <see cref="T:Aspose.Imaging.Rectangle" /> structure.
            </summary>
      <value>
            The x-coordinate that is the sum of <see cref="P:Aspose.Imaging.Rectangle.X" /> and <see cref="P:Aspose.Imaging.Rectangle.Width" /> of this <see cref="T:Aspose.Imaging.Rectangle" />.
            </value>
    </member>
    <member name="P:Aspose.Imaging.Rectangle.Bottom">
      <summary>
            Gets or sets the y-coordinate that is the sum of the <see cref="P:Aspose.Imaging.Rectangle.Y" /> and <see cref="P:Aspose.Imaging.Rectangle.Height" /> property values of this <see cref="T:Aspose.Imaging.Rectangle" /> structure.
            </summary>
      <value>
            The y-coordinate that is the sum of <see cref="P:Aspose.Imaging.Rectangle.Y" /> and <see cref="P:Aspose.Imaging.Rectangle.Height" /> of this <see cref="T:Aspose.Imaging.Rectangle" />.
            </value>
    </member>
    <member name="P:Aspose.Imaging.Rectangle.IsEmpty">
      <summary>
            Gets a value indicating whether all numeric properties of this <see cref="T:Aspose.Imaging.Rectangle" /> have values of zero.
            </summary>
      <value>This property returns true if the <see cref="P:Aspose.Imaging.Rectangle.Width" />, <see cref="P:Aspose.Imaging.Rectangle.Height" />, <see cref="P:Aspose.Imaging.Rectangle.X" />, and <see cref="P:Aspose.Imaging.Rectangle.Y" /> properties of this <see cref="T:Aspose.Imaging.Rectangle" /> all have values of zero; otherwise, false.</value>
    </member>
    <member name="T:Aspose.Imaging.RectangleF">
      <summary>
            Stores a set of four floating-point numbers that represent the location and size of a rectangle.
            </summary>
    </member>
    <member name="M:Aspose.Imaging.RectangleF.#ctor(System.Single,System.Single,System.Single,System.Single)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.RectangleF" /> structure with the specified location and size.
            </summary>
      <param name="x">The x-coordinate of the upper-left corner of the rectangle.</param>
      <param name="y">The y-coordinate of the upper-left corner of the rectangle.</param>
      <param name="width">The width of the rectangle.</param>
      <param name="height">The height of the rectangle.</param>
    </member>
    <member name="M:Aspose.Imaging.RectangleF.#ctor(Aspose.Imaging.PointF,Aspose.Imaging.SizeF)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.RectangleF" /> structure with the specified location and size.
            </summary>
      <param name="location">A <see cref="T:Aspose.Imaging.PointF" /> that represents the upper-left corner of the rectangular region.</param>
      <param name="size">A <see cref="T:Aspose.Imaging.SizeF" /> that represents the width and height of the rectangular region.</param>
    </member>
    <member name="M:Aspose.Imaging.RectangleF.FromPoints(Aspose.Imaging.PointF,Aspose.Imaging.PointF)">
      <summary>
            Creates a new <see cref="T:Aspose.Imaging.Rectangle" /> from two points specified. Two verticles of the created <see cref="T:Aspose.Imaging.Rectangle" /> will be equal to the passed <paramref name="point1" /> and <paramref name="point2" />. These would be typically the opposite vertices.
            </summary>
      <param name="point1">The first <see cref="T:Aspose.Imaging.Point" /> for the new rectangle.</param>
      <param name="point2">The second <see cref="T:Aspose.Imaging.Point" /> for the new rectangle.</param>
      <returns>A newly created <see cref="T:Aspose.Imaging.Rectangle" />.</returns>
    </member>
    <member name="M:Aspose.Imaging.RectangleF.Inflate(Aspose.Imaging.RectangleF,System.Single,System.Single)">
      <summary>
            Creates and returns an inflated copy of the specified <see cref="T:Aspose.Imaging.RectangleF" /> structure. The copy is inflated by the specified amount. The original rectangle remains unmodified.
            </summary>
      <param name="rect">The <see cref="T:Aspose.Imaging.RectangleF" /> to be copied. This rectangle is not modified.</param>
      <param name="x">The amount to inflate the copy of the rectangle horizontally.</param>
      <param name="y">The amount to inflate the copy of the rectangle vertically.</param>
      <returns>The inflated <see cref="T:Aspose.Imaging.RectangleF" />.</returns>
    </member>
    <member name="M:Aspose.Imaging.RectangleF.Intersect(Aspose.Imaging.RectangleF,Aspose.Imaging.RectangleF)">
      <summary>
            Returns a <see cref="T:Aspose.Imaging.RectangleF" /> structure that represents the intersection of two rectangles. If there is no intersection, and empty <see cref="T:Aspose.Imaging.RectangleF" /> is returned.
            </summary>
      <param name="a">A first rectangle to intersect.</param>
      <param name="b">A second rectangle to intersect.</param>
      <returns>A third <see cref="T:Aspose.Imaging.RectangleF" /> structure the size of which represents the overlapped area of the two specified rectangles.</returns>
    </member>
    <member name="M:Aspose.Imaging.RectangleF.Union(Aspose.Imaging.RectangleF,Aspose.Imaging.RectangleF)">
      <summary>
            Creates the smallest possible third rectangle that can contain both of two rectangles that form a union.
            </summary>
      <param name="a">A first rectangle to union.</param>
      <param name="b">A second rectangle to union.</param>
      <returns>A third <see cref="T:Aspose.Imaging.RectangleF" /> structure that contains both of the two rectangles that form the union.</returns>
    </member>
    <member name="M:Aspose.Imaging.RectangleF.op_Equality(Aspose.Imaging.RectangleF,Aspose.Imaging.RectangleF)">
      <summary>
            Tests whether two <see cref="T:Aspose.Imaging.RectangleF" /> structures have equal location and size.
            </summary>
      <param name="left">The <see cref="T:Aspose.Imaging.RectangleF" /> structure that is to the left of the equality operator.</param>
      <param name="right">The <see cref="T:Aspose.Imaging.RectangleF" /> structure that is to the right of the equality operator.</param>
      <returns>This operator returns true if the two specified <see cref="T:Aspose.Imaging.RectangleF" /> structures have equal <see cref="P:Aspose.Imaging.RectangleF.X" />, <see cref="P:Aspose.Imaging.RectangleF.Y" />, <see cref="P:Aspose.Imaging.RectangleF.Width" />, and <see cref="P:Aspose.Imaging.RectangleF.Height" /> properties.</returns>
    </member>
    <member name="M:Aspose.Imaging.RectangleF.op_Inequality(Aspose.Imaging.RectangleF,Aspose.Imaging.RectangleF)">
      <summary>
            Tests whether two <see cref="T:Aspose.Imaging.RectangleF" /> structures differ in location or size.
            </summary>
      <param name="left">The <see cref="T:Aspose.Imaging.RectangleF" /> structure that is to the left of the inequality operator.</param>
      <param name="right">The <see cref="T:Aspose.Imaging.RectangleF" /> structure that is to the right of the inequality operator.</param>
      <returns>This operator returns true if any of the <see cref="P:Aspose.Imaging.RectangleF.X" /> , <see cref="P:Aspose.Imaging.RectangleF.Y" />, <see cref="P:Aspose.Imaging.RectangleF.Width" />, or <see cref="P:Aspose.Imaging.RectangleF.Height" /> properties of the two <see cref="T:Aspose.Imaging.RectangleF" /> structures are unequal; otherwise false.</returns>
    </member>
    <member name="M:Aspose.Imaging.RectangleF.op_Implicit(Aspose.Imaging.Rectangle)~Aspose.Imaging.RectangleF">
      <summary>
            Converts the specified <see cref="T:Aspose.Imaging.Rectangle" /> structure to a <see cref="T:Aspose.Imaging.RectangleF" /> structure.
            </summary>
      <param name="rect">The <see cref="T:Aspose.Imaging.Rectangle" /> structure to convert.</param>
      <returns>The <see cref="T:Aspose.Imaging.RectangleF" /> structure that is converted from the specified <see cref="T:Aspose.Imaging.Rectangle" /> structure.</returns>
    </member>
    <member name="M:Aspose.Imaging.RectangleF.FromLeftTopRightBottom(System.Single,System.Single,System.Single,System.Single)">
      <summary>
            Creates a <see cref="T:Aspose.Imaging.RectangleF" /> structure with upper-left corner and lower-right corner at the specified locations.
            </summary>
      <param name="left">The x-coordinate of the upper-left corner of the rectangular region.</param>
      <param name="top">The y-coordinate of the upper-left corner of the rectangular region.</param>
      <param name="right">The x-coordinate of the lower-right corner of the rectangular region.</param>
      <param name="bottom">The y-coordinate of the lower-right corner of the rectangular region.</param>
      <returns>The new <see cref="T:Aspose.Imaging.RectangleF" /> that this method creates.</returns>
    </member>
    <member name="M:Aspose.Imaging.RectangleF.Normalize">
      <summary>
            Normalizes the rectangle by making it's width and height positive, left less than right and top less than bottom.
            </summary>
    </member>
    <member name="M:Aspose.Imaging.RectangleF.Contains(System.Single,System.Single)">
      <summary>
            Determines if the specified point is contained within this <see cref="T:Aspose.Imaging.RectangleF" /> structure.
            </summary>
      <param name="x">The x-coordinate of the point to test.</param>
      <param name="y">The y-coordinate of the point to test.</param>
      <returns>This method returns true if the point defined by <paramref name="x" /> and <paramref name="y" /> is contained within this <see cref="T:Aspose.Imaging.RectangleF" /> structure; otherwise false.</returns>
    </member>
    <member name="M:Aspose.Imaging.RectangleF.Contains(Aspose.Imaging.PointF)">
      <summary>
            Determines if the specified point is contained within this <see cref="T:Aspose.Imaging.RectangleF" /> structure.
            </summary>
      <param name="point">The <see cref="T:Aspose.Imaging.PointF" /> to test.</param>
      <returns>This method returns true if the point represented by the <paramref name="point" /> parameter is contained within this <see cref="T:Aspose.Imaging.RectangleF" /> structure; otherwise false.</returns>
    </member>
    <member name="M:Aspose.Imaging.RectangleF.Contains(Aspose.Imaging.RectangleF)">
      <summary>
            Determines if the rectangular region represented by <paramref name="rect" /> is entirely contained within this <see cref="T:Aspose.Imaging.RectangleF" /> structure.
            </summary>
      <param name="rect">The <see cref="T:Aspose.Imaging.RectangleF" /> to test.</param>
      <returns>This method returns true if the rectangular region represented by <paramref name="rect" /> is entirely contained within the rectangular region represented by this <see cref="T:Aspose.Imaging.RectangleF" />; otherwise false.</returns>
    </member>
    <member name="M:Aspose.Imaging.RectangleF.Inflate(System.Single,System.Single)">
      <summary>
            Inflates this <see cref="T:Aspose.Imaging.RectangleF" /> structure by the specified amount.
            </summary>
      <param name="x">The amount to inflate this <see cref="T:Aspose.Imaging.RectangleF" /> structure horizontally.</param>
      <param name="y">The amount to inflate this <see cref="T:Aspose.Imaging.RectangleF" /> structure vertically.</param>
    </member>
    <member name="M:Aspose.Imaging.RectangleF.Inflate(Aspose.Imaging.SizeF)">
      <summary>
            Inflates this <see cref="T:Aspose.Imaging.RectangleF" /> by the specified amount.
            </summary>
      <param name="size">The amount to inflate this rectangle.</param>
    </member>
    <member name="M:Aspose.Imaging.RectangleF.Intersect(Aspose.Imaging.RectangleF)">
      <summary>
            Replaces this <see cref="T:Aspose.Imaging.RectangleF" /> structure with the intersection of itself and the specified <see cref="T:Aspose.Imaging.RectangleF" /> structure.
            </summary>
      <param name="rect">The rectangle to intersect.</param>
    </member>
    <member name="M:Aspose.Imaging.RectangleF.IntersectsWith(Aspose.Imaging.RectangleF)">
      <summary>
            Determines if this rectangle intersects with <paramref name="rect" />.
            </summary>
      <param name="rect">The rectangle to test.</param>
      <returns>This method returns true if there is any intersection.</returns>
    </member>
    <member name="M:Aspose.Imaging.RectangleF.Offset(Aspose.Imaging.PointF)">
      <summary>
            Adjusts the location of this rectangle by the specified amount.
            </summary>
      <param name="pos">The amount to offset the location.</param>
    </member>
    <member name="M:Aspose.Imaging.RectangleF.Offset(System.Single,System.Single)">
      <summary>
            Adjusts the location of this rectangle by the specified amount.
            </summary>
      <param name="x">The amount to offset the location horizontally.</param>
      <param name="y">The amount to offset the location vertically.</param>
    </member>
    <member name="M:Aspose.Imaging.RectangleF.Equals(System.Object)">
      <summary>
            Tests whether <paramref name="obj" /> is a <see cref="T:Aspose.Imaging.RectangleF" /> with the same location and size of this <see cref="T:Aspose.Imaging.RectangleF" />.
            </summary>
      <param name="obj">The <see cref="T:System.Object" /> to test.</param>
      <returns>This method returns true if <paramref name="obj" /> is a <see cref="T:Aspose.Imaging.RectangleF" /> and its X, Y, Width, and Height properties are equal to the corresponding properties of this <see cref="T:Aspose.Imaging.RectangleF" />; otherwise, false.</returns>
    </member>
    <member name="M:Aspose.Imaging.RectangleF.GetHashCode">
      <summary>
            Gets the hash code for this <see cref="T:Aspose.Imaging.RectangleF" /> structure.
            </summary>
      <returns>The hash code for this <see cref="T:Aspose.Imaging.RectangleF" />.</returns>
    </member>
    <member name="M:Aspose.Imaging.RectangleF.ToString">
      <summary>
            Converts the attributes of this <see cref="T:Aspose.Imaging.RectangleF" /> to a human-readable string.
            </summary>
      <returns>A string that contains the position, width, and height of this <see cref="T:Aspose.Imaging.RectangleF" /> structure.</returns>
    </member>
    <member name="P:Aspose.Imaging.RectangleF.Empty">
      <summary>
            Gets a new instance of the <see cref="T:Aspose.Imaging.RectangleF" /> structure that has <see cref="P:Aspose.Imaging.RectangleF.X" />, <see cref="P:Aspose.Imaging.RectangleF.Y" />, <see cref="P:Aspose.Imaging.RectangleF.Width" /> and <see cref="P:Aspose.Imaging.RectangleF.Height" /> values set to zero.
            </summary>
    </member>
    <member name="P:Aspose.Imaging.RectangleF.Location">
      <summary>
            Gets or sets the coordinates of the upper-left corner of this <see cref="T:Aspose.Imaging.RectangleF" /> structure.
            </summary>
      <returns>A <see cref="T:Aspose.Imaging.PointF" /> that represents the upper-left corner of this <see cref="T:Aspose.Imaging.RectangleF" /> structure.</returns>
    </member>
    <member name="P:Aspose.Imaging.RectangleF.Size">
      <summary>
            Gets or sets the size of this <see cref="T:Aspose.Imaging.RectangleF" />.
            </summary>
      <returns>A <see cref="T:Aspose.Imaging.SizeF" /> that represents the width and height of this <see cref="T:Aspose.Imaging.RectangleF" /> structure.</returns>
    </member>
    <member name="P:Aspose.Imaging.RectangleF.X">
      <summary>
            Gets or sets the x-coordinate of the upper-left corner of this <see cref="T:Aspose.Imaging.RectangleF" /> structure.
            </summary>
      <returns>The x-coordinate of the upper-left corner of this <see cref="T:Aspose.Imaging.RectangleF" /> structure.</returns>
    </member>
    <member name="P:Aspose.Imaging.RectangleF.Y">
      <summary>
            Gets or sets the y-coordinate of the upper-left corner of this <see cref="T:Aspose.Imaging.RectangleF" /> structure.
            </summary>
      <returns>The y-coordinate of the upper-left corner of this <see cref="T:Aspose.Imaging.RectangleF" /> structure.</returns>
    </member>
    <member name="P:Aspose.Imaging.RectangleF.Width">
      <summary>
            Gets or sets the width of this <see cref="T:Aspose.Imaging.RectangleF" /> structure.
            </summary>
      <returns>The width of this <see cref="T:Aspose.Imaging.RectangleF" /> structure.</returns>
    </member>
    <member name="P:Aspose.Imaging.RectangleF.Height">
      <summary>
            Gets or sets the height of this <see cref="T:Aspose.Imaging.RectangleF" /> structure.
            </summary>
      <returns>The height of this <see cref="T:Aspose.Imaging.RectangleF" /> structure.</returns>
    </member>
    <member name="P:Aspose.Imaging.RectangleF.Left">
      <summary>
            Gets or sets the x-coordinate of the left edge of this <see cref="T:Aspose.Imaging.RectangleF" /> structure.
            </summary>
      <returns>The x-coordinate of the left edge of this <see cref="T:Aspose.Imaging.RectangleF" /> structure.</returns>
    </member>
    <member name="P:Aspose.Imaging.RectangleF.Top">
      <summary>
            Gets or sets the y-coordinate of the top edge of this <see cref="T:Aspose.Imaging.RectangleF" /> structure.
            </summary>
      <returns>The y-coordinate of the top edge of this <see cref="T:Aspose.Imaging.RectangleF" /> structure.</returns>
    </member>
    <member name="P:Aspose.Imaging.RectangleF.Right">
      <summary>
            Gets or sets the x-coordinate that is the sum of <see cref="P:Aspose.Imaging.RectangleF.X" /> and <see cref="P:Aspose.Imaging.RectangleF.Width" /> of this <see cref="T:Aspose.Imaging.RectangleF" /> structure.
            </summary>
      <returns>The x-coordinate that is the sum of <see cref="P:Aspose.Imaging.RectangleF.X" /> and <see cref="P:Aspose.Imaging.RectangleF.Width" /> of this <see cref="T:Aspose.Imaging.RectangleF" /> structure.</returns>
    </member>
    <member name="P:Aspose.Imaging.RectangleF.Bottom">
      <summary>
            Gets or sets the y-coordinate that is the sum of <see cref="P:Aspose.Imaging.RectangleF.Y" /> and <see cref="P:Aspose.Imaging.RectangleF.Height" /> of this <see cref="T:Aspose.Imaging.RectangleF" /> structure.
            </summary>
      <returns>The y-coordinate that is the sum of <see cref="P:Aspose.Imaging.RectangleF.Y" /> and <see cref="P:Aspose.Imaging.RectangleF.Height" /> of this <see cref="T:Aspose.Imaging.RectangleF" /> structure.</returns>
    </member>
    <member name="P:Aspose.Imaging.RectangleF.IsEmpty">
      <summary>
            Gets a value indicating whether the <see cref="P:Aspose.Imaging.RectangleF.Width" /> or <see cref="P:Aspose.Imaging.RectangleF.Height" /> property of this <see cref="T:Aspose.Imaging.RectangleF" /> has a value of zero.
            </summary>
      <returns>This property returns true if the <see cref="P:Aspose.Imaging.RectangleF.Width" /> or <see cref="P:Aspose.Imaging.RectangleF.Height" /> property of this <see cref="T:Aspose.Imaging.RectangleF" /> has a value of zero; otherwise, false.</returns>
    </member>
    <member name="T:Aspose.Imaging.Region">
      <summary>
            Describes the interior of a graphics shape composed of rectangles and paths. This class cannot be inherited.
            </summary>
    </member>
    <member name="M:Aspose.Imaging.Region.#ctor">
      <summary>
            Initializes a new <see cref="T:Aspose.Imaging.Region" />.
            </summary>
    </member>
    <member name="M:Aspose.Imaging.Region.#ctor(Aspose.Imaging.RectangleF)">
      <summary>
            Initializes a new <see cref="T:Aspose.Imaging.Region" /> from the specified <see cref="T:Aspose.Imaging.RectangleF" /> structure.
            </summary>
      <param name="rect">A <see cref="T:Aspose.Imaging.RectangleF" /> structure that defines the interior of the new <see cref="T:Aspose.Imaging.Region" />.</param>
    </member>
    <member name="M:Aspose.Imaging.Region.#ctor(Aspose.Imaging.Rectangle)">
      <summary>
            Initializes a new <see cref="T:Aspose.Imaging.Region" /> from the specified <see cref="T:Aspose.Imaging.Rectangle" /> structure.
            </summary>
      <param name="rect">A <see cref="T:Aspose.Imaging.Rectangle" /> structure that defines the interior of the new <see cref="T:Aspose.Imaging.Region" />.</param>
    </member>
    <member name="M:Aspose.Imaging.Region.#ctor(Aspose.Imaging.GraphicsPath)">
      <summary>
            Initializes a new <see cref="T:Aspose.Imaging.Region" /> with the specified <see cref="T:Aspose.Imaging.GraphicsPath" />.
            </summary>
      <param name="path">A <see cref="T:Aspose.Imaging.GraphicsPath" /> that defines the new <see cref="T:Aspose.Imaging.Region" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> is null.</exception>
    </member>
    <member name="M:Aspose.Imaging.Region.DeepClone">
      <summary>
            Creates an exact deep copy of this <see cref="T:Aspose.Imaging.Region" />.
            </summary>
      <returns>The <see cref="T:Aspose.Imaging.Region" /> that this method creates.</returns>
    </member>
    <member name="M:Aspose.Imaging.Region.MakeInfinite">
      <summary>
            Initializes this <see cref="T:Aspose.Imaging.Region" /> object to an infinite interior.
            </summary>
    </member>
    <member name="M:Aspose.Imaging.Region.MakeEmpty">
      <summary>
            Initializes this <see cref="T:Aspose.Imaging.Region" /> to an empty interior.
            </summary>
    </member>
    <member name="M:Aspose.Imaging.Region.Intersect(Aspose.Imaging.RectangleF)">
      <summary>
            Updates this <see cref="T:Aspose.Imaging.Region" /> to the intersection of itself with the specified <see cref="T:Aspose.Imaging.RectangleF" /> structure.
            </summary>
      <param name="rect">The <see cref="T:Aspose.Imaging.RectangleF" /> structure to intersect with this <see cref="T:Aspose.Imaging.Region" />.</param>
    </member>
    <member name="M:Aspose.Imaging.Region.Intersect(Aspose.Imaging.Rectangle)">
      <summary>
            Updates this <see cref="T:Aspose.Imaging.Region" /> to the intersection of itself with the specified <see cref="T:Aspose.Imaging.Rectangle" /> structure.
            </summary>
      <param name="rect">The <see cref="T:Aspose.Imaging.Rectangle" /> structure to intersect with this <see cref="T:Aspose.Imaging.Region" />.</param>
    </member>
    <member name="M:Aspose.Imaging.Region.Intersect(Aspose.Imaging.GraphicsPath)">
      <summary>
            Updates this <see cref="T:Aspose.Imaging.Region" /> to the intersection of itself with the specified <see cref="T:Aspose.Imaging.GraphicsPath" />.
            </summary>
      <param name="path">The <see cref="T:Aspose.Imaging.GraphicsPath" /> to intersect with this <see cref="T:Aspose.Imaging.Region" />.</param>
    </member>
    <member name="M:Aspose.Imaging.Region.Intersect(Aspose.Imaging.Region)">
      <summary>
            Updates this <see cref="T:Aspose.Imaging.Region" /> to the intersection of itself with the specified <see cref="T:Aspose.Imaging.Region" />.
            </summary>
      <param name="region">The <see cref="T:Aspose.Imaging.Region" /> to intersect with this <see cref="T:Aspose.Imaging.Region" />.</param>
    </member>
    <member name="M:Aspose.Imaging.Region.Union(Aspose.Imaging.RectangleF)">
      <summary>
            Updates this <see cref="T:Aspose.Imaging.Region" /> to the union of itself and the specified <see cref="T:Aspose.Imaging.RectangleF" /> structure.
            </summary>
      <param name="rect">The <see cref="T:Aspose.Imaging.RectangleF" /> structure to unite with this <see cref="T:Aspose.Imaging.Region" />.</param>
    </member>
    <member name="M:Aspose.Imaging.Region.Union(Aspose.Imaging.Rectangle)">
      <summary>
            Updates this <see cref="T:Aspose.Imaging.Region" /> to the union of itself and the specified <see cref="T:Aspose.Imaging.Rectangle" /> structure.
            </summary>
      <param name="rect">The <see cref="T:Aspose.Imaging.Rectangle" /> structure to unite with this <see cref="T:Aspose.Imaging.Region" />.</param>
    </member>
    <member name="M:Aspose.Imaging.Region.Union(Aspose.Imaging.GraphicsPath)">
      <summary>
            Updates this <see cref="T:Aspose.Imaging.Region" /> to the union of itself and the specified <see cref="T:Aspose.Imaging.GraphicsPath" />.
            </summary>
      <param name="path">The <see cref="T:Aspose.Imaging.GraphicsPath" /> to unite with this <see cref="T:Aspose.Imaging.Region" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> is null.</exception>
    </member>
    <member name="M:Aspose.Imaging.Region.Union(Aspose.Imaging.Region)">
      <summary>
            Updates this <see cref="T:Aspose.Imaging.Region" /> to the union of itself and the specified <see cref="T:Aspose.Imaging.Region" />.
            </summary>
      <param name="region">The <see cref="T:Aspose.Imaging.Region" /> to unite with this <see cref="T:Aspose.Imaging.Region" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="region" /> is null.</exception>
    </member>
    <member name="M:Aspose.Imaging.Region.Xor(Aspose.Imaging.RectangleF)">
      <summary>
            Updates this <see cref="T:Aspose.Imaging.Region" /> to the union minus the intersection of itself with the specified <see cref="T:Aspose.Imaging.RectangleF" /> structure.
            </summary>
      <param name="rect">The <see cref="T:Aspose.Imaging.RectangleF" /> structure to xor with this <see cref="T:Aspose.Imaging.Region" />.</param>
    </member>
    <member name="M:Aspose.Imaging.Region.Xor(Aspose.Imaging.Rectangle)">
      <summary>
            Updates this <see cref="T:Aspose.Imaging.Region" /> to the union minus the intersection of itself with the specified <see cref="T:Aspose.Imaging.Rectangle" /> structure.
            </summary>
      <param name="rect">The <see cref="T:Aspose.Imaging.Rectangle" /> structure to xor with this <see cref="T:Aspose.Imaging.Region" />.</param>
    </member>
    <member name="M:Aspose.Imaging.Region.Xor(Aspose.Imaging.GraphicsPath)">
      <summary>
            Updates this <see cref="T:Aspose.Imaging.Region" /> to the union minus the intersection of itself with the specified <see cref="T:Aspose.Imaging.GraphicsPath" />.
            </summary>
      <param name="path">The <see cref="T:Aspose.Imaging.GraphicsPath" /> to xor with this <see cref="T:Aspose.Imaging.Region" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> is null.
            </exception>
    </member>
    <member name="M:Aspose.Imaging.Region.Xor(Aspose.Imaging.Region)">
      <summary>
            Updates this <see cref="T:Aspose.Imaging.Region" /> to the union minus the intersection of itself with the specified <see cref="T:Aspose.Imaging.Region" />.
            </summary>
      <param name="region">The <see cref="T:Aspose.Imaging.Region" /> to xor with this <see cref="T:Aspose.Imaging.Region" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="region" /> is null.
            </exception>
    </member>
    <member name="M:Aspose.Imaging.Region.Exclude(Aspose.Imaging.RectangleF)">
      <summary>
            Updates this <see cref="T:Aspose.Imaging.Region" /> to contain only the portion of its interior that does not intersect with the specified <see cref="T:Aspose.Imaging.RectangleF" /> structure.
            </summary>
      <param name="rect">The <see cref="T:Aspose.Imaging.RectangleF" /> structure to exclude from this <see cref="T:Aspose.Imaging.Region" />.</param>
    </member>
    <member name="M:Aspose.Imaging.Region.Exclude(Aspose.Imaging.Rectangle)">
      <summary>
            Updates this <see cref="T:Aspose.Imaging.Region" /> to contain only the portion of its interior that does not intersect with the specified <see cref="T:Aspose.Imaging.Rectangle" /> structure.
            </summary>
      <param name="rect">The <see cref="T:Aspose.Imaging.Rectangle" /> structure to exclude from this <see cref="T:Aspose.Imaging.Region" />.</param>
    </member>
    <member name="M:Aspose.Imaging.Region.Exclude(Aspose.Imaging.GraphicsPath)">
      <summary>
            Updates this <see cref="T:Aspose.Imaging.Region" /> to contain only the portion of its interior that does not intersect with the specified <see cref="T:Aspose.Imaging.GraphicsPath" />.
            </summary>
      <param name="path">The <see cref="T:Aspose.Imaging.GraphicsPath" /> to exclude from this <see cref="T:Aspose.Imaging.Region" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> is null.
            </exception>
    </member>
    <member name="M:Aspose.Imaging.Region.Exclude(Aspose.Imaging.Region)">
      <summary>
            Updates this <see cref="T:Aspose.Imaging.Region" /> to contain only the portion of its interior that does not intersect with the specified <see cref="T:Aspose.Imaging.Region" />.
            </summary>
      <param name="region">The <see cref="T:Aspose.Imaging.Region" /> to exclude from this <see cref="T:Aspose.Imaging.Region" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="region" /> is null.
            </exception>
    </member>
    <member name="M:Aspose.Imaging.Region.Complement(Aspose.Imaging.RectangleF)">
      <summary>
            Updates this <see cref="T:Aspose.Imaging.Region" /> to contain the portion of the specified <see cref="T:Aspose.Imaging.RectangleF" /> structure that does not intersect with this <see cref="T:Aspose.Imaging.Region" />.
            </summary>
      <param name="rect">The <see cref="T:Aspose.Imaging.RectangleF" /> structure to complement this <see cref="T:Aspose.Imaging.Region" />.</param>
    </member>
    <member name="M:Aspose.Imaging.Region.Complement(Aspose.Imaging.Rectangle)">
      <summary>
            Updates this <see cref="T:Aspose.Imaging.Region" /> to contain the portion of the specified <see cref="T:Aspose.Imaging.Rectangle" /> structure that does not intersect with this <see cref="T:Aspose.Imaging.Region" />.
            </summary>
      <param name="rect">The <see cref="T:Aspose.Imaging.Rectangle" /> structure to complement this <see cref="T:Aspose.Imaging.Region" />.</param>
    </member>
    <member name="M:Aspose.Imaging.Region.Complement(Aspose.Imaging.GraphicsPath)">
      <summary>
            Updates this <see cref="T:Aspose.Imaging.Region" /> to contain the portion of the specified <see cref="T:Aspose.Imaging.GraphicsPath" /> that does not intersect with this <see cref="T:Aspose.Imaging.Region" />.
            </summary>
      <param name="path">The <see cref="T:Aspose.Imaging.GraphicsPath" /> to complement this <see cref="T:Aspose.Imaging.Region" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="path" /> isnull.
            </exception>
    </member>
    <member name="M:Aspose.Imaging.Region.Complement(Aspose.Imaging.Region)">
      <summary>
            Updates this <see cref="T:Aspose.Imaging.Region" /> to contain the portion of the specified <see cref="T:Aspose.Imaging.Region" /> that does not intersect with this <see cref="T:Aspose.Imaging.Region" />.
            </summary>
      <param name="region">The <see cref="T:Aspose.Imaging.Region" /> object to complement this <see cref="T:Aspose.Imaging.Region" /> object.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="region" /> isnull.
            </exception>
    </member>
    <member name="M:Aspose.Imaging.Region.Translate(System.Single,System.Single)">
      <summary>
            Offsets the coordinates of this <see cref="T:Aspose.Imaging.Region" /> by the specified amount.
            </summary>
      <param name="dx">The amount to offset this <see cref="T:Aspose.Imaging.Region" /> horizontally.</param>
      <param name="dy">The amount to offset this <see cref="T:Aspose.Imaging.Region" /> vertically.</param>
    </member>
    <member name="M:Aspose.Imaging.Region.Translate(System.Int32,System.Int32)">
      <summary>
            Offsets the coordinates of this <see cref="T:Aspose.Imaging.Region" /> by the specified amount.
            </summary>
      <param name="dx">The amount to offset this <see cref="T:Aspose.Imaging.Region" /> horizontally.</param>
      <param name="dy">The amount to offset this <see cref="T:Aspose.Imaging.Region" /> vertically.</param>
    </member>
    <member name="M:Aspose.Imaging.Region.Transform(Aspose.Imaging.Matrix)">
      <summary>
            Transforms this <see cref="T:Aspose.Imaging.Region" /> by the specified <see cref="T:Aspose.Imaging.Matrix" />.
            </summary>
      <param name="matrix">The <see cref="T:Aspose.Imaging.Matrix" /> by which to transform this <see cref="T:Aspose.Imaging.Region" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="matrix" /> is null.</exception>
    </member>
    <member name="M:Aspose.Imaging.Region.IsEmpty(Aspose.Imaging.Graphics)">
      <summary>
            Tests whether this <see cref="T:Aspose.Imaging.Region" /> has an empty interior on the specified drawing surface.
            </summary>
      <param name="g">A <see cref="T:Aspose.Imaging.Graphics" /> that represents a drawing surface.</param>
      <returns>
            true if the interior of this <see cref="T:Aspose.Imaging.Region" /> is empty when the transformation associated with <paramref name="g" /> is applied; otherwise, false.
            </returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="g" /> is null.
            </exception>
    </member>
    <member name="M:Aspose.Imaging.Region.IsInfinite(Aspose.Imaging.Graphics)">
      <summary>
            Tests whether this <see cref="T:Aspose.Imaging.Region" /> has an infinite interior on the specified drawing surface.
            </summary>
      <param name="g">A <see cref="T:Aspose.Imaging.Graphics" /> that represents a drawing surface.</param>
      <returns>
            true if the interior of this <see cref="T:Aspose.Imaging.Region" /> is infinite when the transformation associated with <paramref name="g" /> is applied; otherwise, false.
            </returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="g" /> is null.
            </exception>
    </member>
    <member name="M:Aspose.Imaging.Region.Equals(Aspose.Imaging.Region,Aspose.Imaging.Graphics)">
      <summary>
            Tests whether the specified <see cref="T:Aspose.Imaging.Region" /> is identical to this <see cref="T:Aspose.Imaging.Region" /> on the specified drawing surface.
            </summary>
      <param name="region">The <see cref="T:Aspose.Imaging.Region" /> to test.</param>
      <param name="g">A <see cref="T:Aspose.Imaging.Graphics" /> that represents a drawing surface.</param>
      <returns>
            True if the interior of region is identical to the interior of this region when the transformation associated with the <paramref name="g" /> parameter is applied; otherwise, false.
            </returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="g " />or<paramref name=" region" /> is null.</exception>
    </member>
    <member name="M:Aspose.Imaging.Region.IsVisible(System.Single,System.Single)">
      <summary>
            Tests whether the specified point is contained within this <see cref="T:Aspose.Imaging.Region" />.
            </summary>
      <param name="x">The x-coordinate of the point to test.</param>
      <param name="y">The y-coordinate of the point to test.</param>
      <returns>
            True when the specified point is contained within this <see cref="T:Aspose.Imaging.Region" />; otherwise, false.
            </returns>
    </member>
    <member name="M:Aspose.Imaging.Region.IsVisible(Aspose.Imaging.PointF)">
      <summary>
            Tests whether the specified <see cref="T:Aspose.Imaging.PointF" /> structure is contained within this <see cref="T:Aspose.Imaging.Region" />.
            </summary>
      <param name="point">The <see cref="T:Aspose.Imaging.PointF" /> structure to test.</param>
      <returns>
            true when <paramref name="point" /> is contained within this <see cref="T:Aspose.Imaging.Region" />; otherwise, false.
            </returns>
    </member>
    <member name="M:Aspose.Imaging.Region.IsVisible(System.Single,System.Single,Aspose.Imaging.Graphics)">
      <summary>
            Tests whether the specified point is contained within this <see cref="T:Aspose.Imaging.Region" /> when drawn using the specified <see cref="T:Aspose.Imaging.Graphics" />.
            </summary>
      <param name="x">The x-coordinate of the point to test.</param>
      <param name="y">The y-coordinate of the point to test.</param>
      <param name="g">A <see cref="T:Aspose.Imaging.Graphics" /> that represents a graphics context.</param>
      <returns>
            True when the specified point is contained within this <see cref="T:Aspose.Imaging.Region" />; otherwise, false.
            </returns>
    </member>
    <member name="M:Aspose.Imaging.Region.IsVisible(Aspose.Imaging.PointF,Aspose.Imaging.Graphics)">
      <summary>
            Tests whether the specified <see cref="T:Aspose.Imaging.PointF" /> structure is contained within this <see cref="T:Aspose.Imaging.Region" /> when drawn using the specified <see cref="T:Aspose.Imaging.Graphics" />.
            </summary>
      <param name="point">The <see cref="T:Aspose.Imaging.PointF" /> structure to test.</param>
      <param name="g">A <see cref="T:Aspose.Imaging.Graphics" /> that represents a graphics context.</param>
      <returns>
            true when <paramref name="point" /> is contained within this <see cref="T:Aspose.Imaging.Region" />; otherwise, false.
            </returns>
    </member>
    <member name="M:Aspose.Imaging.Region.IsVisible(System.Single,System.Single,System.Single,System.Single)">
      <summary>
            Tests whether any portion of the specified rectangle is contained within this <see cref="T:Aspose.Imaging.Region" />.
            </summary>
      <param name="x">The x-coordinate of the upper-left corner of the rectangle to test.</param>
      <param name="y">The y-coordinate of the upper-left corner of the rectangle to test.</param>
      <param name="width">The width of the rectangle to test.</param>
      <param name="height">The height of the rectangle to test.</param>
      <returns>
            true when any portion of the specified rectangle is contained within this <see cref="T:Aspose.Imaging.Region" /> object; otherwise, false.
            </returns>
    </member>
    <member name="M:Aspose.Imaging.Region.IsVisible(Aspose.Imaging.RectangleF)">
      <summary>
            Tests whether any portion of the specified <see cref="T:Aspose.Imaging.RectangleF" /> structure is contained within this <see cref="T:Aspose.Imaging.Region" />.
            </summary>
      <param name="rect">The <see cref="T:Aspose.Imaging.RectangleF" /> structure to test.</param>
      <returns>
            true when any portion of <paramref name="rect" /> is contained within this <see cref="T:Aspose.Imaging.Region" />; otherwise, false.
            </returns>
    </member>
    <member name="M:Aspose.Imaging.Region.IsVisible(System.Single,System.Single,System.Single,System.Single,Aspose.Imaging.Graphics)">
      <summary>
            Tests whether any portion of the specified rectangle is contained within this <see cref="T:Aspose.Imaging.Region" /> when drawn using the specified <see cref="T:Aspose.Imaging.Graphics" />.
            </summary>
      <param name="x">The x-coordinate of the upper-left corner of the rectangle to test.</param>
      <param name="y">The y-coordinate of the upper-left corner of the rectangle to test.</param>
      <param name="width">The width of the rectangle to test.</param>
      <param name="height">The height of the rectangle to test.</param>
      <param name="g">A <see cref="T:Aspose.Imaging.Graphics" /> that represents a graphics context.</param>
      <returns>
            true when any portion of the specified rectangle is contained within this <see cref="T:Aspose.Imaging.Region" />; otherwise, false.
            </returns>
    </member>
    <member name="M:Aspose.Imaging.Region.IsVisible(Aspose.Imaging.RectangleF,Aspose.Imaging.Graphics)">
      <summary>
            Tests whether any portion of the specified <see cref="T:Aspose.Imaging.RectangleF" /> structure is contained within this <see cref="T:Aspose.Imaging.Region" /> when drawn using the specified <see cref="T:Aspose.Imaging.Graphics" />.
            </summary>
      <param name="rect">The <see cref="T:Aspose.Imaging.RectangleF" /> structure to test.</param>
      <param name="g">A <see cref="T:Aspose.Imaging.Graphics" /> that represents a graphics context.</param>
      <returns>
            true when <paramref name="rect" /> is contained within this <see cref="T:Aspose.Imaging.Region" />; otherwise, false.
            </returns>
    </member>
    <member name="M:Aspose.Imaging.Region.IsVisible(System.Int32,System.Int32,Aspose.Imaging.Graphics)">
      <summary>
            Tests whether the specified point is contained within this <see cref="T:Aspose.Imaging.Region" /> object when drawn using the specified <see cref="T:Aspose.Imaging.Graphics" /> object.
            </summary>
      <param name="x">The x-coordinate of the point to test.</param>
      <param name="y">The y-coordinate of the point to test.</param>
      <param name="g">A <see cref="T:Aspose.Imaging.Graphics" /> that represents a graphics context.</param>
      <returns>
            true when the specified point is contained within this <see cref="T:Aspose.Imaging.Region" />; otherwise, false.
            </returns>
    </member>
    <member name="M:Aspose.Imaging.Region.IsVisible(Aspose.Imaging.Point)">
      <summary>
            Tests whether the specified <see cref="T:Aspose.Imaging.Point" /> structure is contained within this <see cref="T:Aspose.Imaging.Region" />.
            </summary>
      <param name="point">The <see cref="T:Aspose.Imaging.Point" /> structure to test.</param>
      <returns>
            true when <paramref name="point" /> is contained within this <see cref="T:Aspose.Imaging.Region" />; otherwise, false.
            </returns>
    </member>
    <member name="M:Aspose.Imaging.Region.IsVisible(Aspose.Imaging.Point,Aspose.Imaging.Graphics)">
      <summary>
            Tests whether the specified <see cref="T:Aspose.Imaging.Point" /> structure is contained within this <see cref="T:Aspose.Imaging.Region" /> when drawn using the specified <see cref="T:Aspose.Imaging.Graphics" />.
            </summary>
      <param name="point">The <see cref="T:Aspose.Imaging.Point" /> structure to test.</param>
      <param name="g">A <see cref="T:Aspose.Imaging.Graphics" /> that represents a graphics context.</param>
      <returns>
            true when <paramref name="point" /> is contained within this <see cref="T:Aspose.Imaging.Region" />; otherwise, false.
            </returns>
    </member>
    <member name="M:Aspose.Imaging.Region.IsVisible(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Tests whether any portion of the specified rectangle is contained within this <see cref="T:Aspose.Imaging.Region" />.
            </summary>
      <param name="x">The x-coordinate of the upper-left corner of the rectangle to test.</param>
      <param name="y">The y-coordinate of the upper-left corner of the rectangle to test.</param>
      <param name="width">The width of the rectangle to test.</param>
      <param name="height">The height of the rectangle to test.</param>
      <returns>
            true when any portion of the specified rectangle is contained within this <see cref="T:Aspose.Imaging.Region" />; otherwise, false.
            </returns>
    </member>
    <member name="M:Aspose.Imaging.Region.IsVisible(Aspose.Imaging.Rectangle)">
      <summary>
            Tests whether any portion of the specified <see cref="T:Aspose.Imaging.Rectangle" /> structure is contained within this <see cref="T:Aspose.Imaging.Region" />.
            </summary>
      <param name="rect">The <see cref="T:Aspose.Imaging.Rectangle" /> structure to test.</param>
      <returns>
            This method returns true when any portion of <paramref name="rect" /> is contained within this <see cref="T:Aspose.Imaging.Region" />; otherwise, false.
            </returns>
    </member>
    <member name="M:Aspose.Imaging.Region.IsVisible(System.Int32,System.Int32,System.Int32,System.Int32,Aspose.Imaging.Graphics)">
      <summary>
            Tests whether any portion of the specified rectangle is contained within this <see cref="T:Aspose.Imaging.Region" /> when drawn using the specified <see cref="T:Aspose.Imaging.Graphics" />.
            </summary>
      <param name="x">The x-coordinate of the upper-left corner of the rectangle to test.</param>
      <param name="y">The y-coordinate of the upper-left corner of the rectangle to test.</param>
      <param name="width">The width of the rectangle to test.</param>
      <param name="height">The height of the rectangle to test.</param>
      <param name="g">A <see cref="T:Aspose.Imaging.Graphics" /> that represents a graphics context.</param>
      <returns>
            true when any portion of the specified rectangle is contained within this <see cref="T:Aspose.Imaging.Region" />; otherwise, false.
            </returns>
    </member>
    <member name="M:Aspose.Imaging.Region.IsVisible(Aspose.Imaging.Rectangle,Aspose.Imaging.Graphics)">
      <summary>
            Tests whether any portion of the specified <see cref="T:Aspose.Imaging.Rectangle" /> structure is contained within this <see cref="T:Aspose.Imaging.Region" /> when drawn using the specified <see cref="T:Aspose.Imaging.Graphics" />.
            </summary>
      <param name="rect">The <see cref="T:Aspose.Imaging.Rectangle" /> structure to test.</param>
      <param name="g">A <see cref="T:Aspose.Imaging.Graphics" /> that represents a graphics context.</param>
      <returns>
            true when any portion of the <paramref name="rect" /> is contained within this <see cref="T:Aspose.Imaging.Region" />; otherwise, false.
            </returns>
    </member>
    <member name="T:Aspose.Imaging.ResizeType">
      <summary>
            Specifies the resize type.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.ResizeType.None">
      <summary>
            The pixels are not preserved during resize operation.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.ResizeType.LeftTopToLeftTop">
      <summary>
            Left top point of the new image will coincide with the left top point of the original image. Crop will occur if required.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.ResizeType.RightTopToRightTop">
      <summary>
            Right top point of the new image will coincide with the right top point of the original image. Crop will occur if required.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.ResizeType.RightBottomToRightBottom">
      <summary>
            Right bottom point of the new image will coincide with the right bottom point of the original image. Crop will occur if required.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.ResizeType.LeftBottomToLeftBottom">
      <summary>
            Left bottom point of the new image will coincide with the left bottom point of the original image. Crop will occur if required.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.ResizeType.CenterToCenter">
      <summary>
            Center of the new image will coincide with the center of the original image. Crop will occur if required.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.ResizeType.LanczosResample">
      <summary>
            Resample using lanczos algorithm with a=3.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.ResizeType.NearestNeighbourResample">
      <summary>
            Resample using nearest neighbour algorithm.
            </summary>
    </member>
    <member name="T:Aspose.Imaging.ResolutionSetting">
      <summary>
            The resolution setting for image save options.
            </summary>
    </member>
    <member name="M:Aspose.Imaging.ResolutionSetting.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.ResolutionSetting" /> class.
            </summary>
    </member>
    <member name="M:Aspose.Imaging.ResolutionSetting.#ctor(System.Double,System.Double)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.ResolutionSetting" /> class.
            </summary>
      <param name="horizontalResolution">
            The horizontal resolution.
            </param>
      <param name="verticalResolution">
            The vertical resolution.
            </param>
    </member>
    <member name="P:Aspose.Imaging.ResolutionSetting.HorizontalResolution">
      <summary>
            Gets or sets the horizontal resolution.
            </summary>
    </member>
    <member name="P:Aspose.Imaging.ResolutionSetting.VerticalResolution">
      <summary>
            Gets or sets the vertical resolution.
            </summary>
    </member>
    <member name="T:Aspose.Imaging.SeekOrigin">
      <summary>
            Provides the fields that represent reference points in <see cref="T:Aspose.Imaging.StreamContainer" /> for seeking.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.SeekOrigin.Begin">
      <summary>
            Specifies the beginning of a stream.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.SeekOrigin.Current">
      <summary>
            Specifies the current position within a stream.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.SeekOrigin.End">
      <summary>
             Specifies the end of a stream.
            </summary>
    </member>
    <member name="T:Aspose.Imaging.Shape">
      <summary>
            The shape. A continuous set of points connected using a specific rule.
            </summary>
    </member>
    <member name="P:Aspose.Imaging.Shape.Center">
      <summary>
            Gets the shape's center.
            </summary>
      <value>The shape's center.</value>
    </member>
    <member name="P:Aspose.Imaging.Shape.Segments">
      <summary>
            Gets the shape segments.
            </summary>
      <value>The shape segments.</value>
    </member>
    <member name="P:Aspose.Imaging.Shape.HasSegments">
      <summary>
            Gets a value indicating whether shape has segments.
            </summary>
      <value>
        <c>True</c> if shape has segments; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="T:Aspose.Imaging.ShapeSegment">
      <summary>
            Represents a shape segment. A segment is a line or curve connecting two points.
            </summary>
    </member>
    <member name="P:Aspose.Imaging.ShapeSegment.StartPoint">
      <summary>
            Gets the starting point.
            </summary>
      <value>The starting point.</value>
    </member>
    <member name="P:Aspose.Imaging.ShapeSegment.EndPoint">
      <summary>
            Gets the ending point.
            </summary>
      <value>The ending point.</value>
    </member>
    <member name="T:Aspose.Imaging.ShapeSegments.BezierSegment">
      <summary>
            The bezier segment going from one point to the next point and using two control points.
            </summary>
    </member>
    <member name="T:Aspose.Imaging.ShapeSegments.LineSegment">
      <summary>
            Represents a segment leading derectly from a specific point to the next point.
            </summary>
    </member>
    <member name="M:Aspose.Imaging.ShapeSegments.LineSegment.#ctor(Aspose.Imaging.PointF,Aspose.Imaging.PointF)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.ShapeSegments.LineSegment" /> class.
            </summary>
      <param name="startPoint">The start point.</param>
      <param name="endPoint">The end point.</param>
    </member>
    <member name="P:Aspose.Imaging.ShapeSegments.LineSegment.StartPoint">
      <summary>
            Gets the starting point.
            </summary>
      <value>The starting point.</value>
    </member>
    <member name="P:Aspose.Imaging.ShapeSegments.LineSegment.EndPoint">
      <summary>
            Gets the ending point.
            </summary>
      <value>The ending point.</value>
    </member>
    <member name="M:Aspose.Imaging.ShapeSegments.BezierSegment.#ctor(Aspose.Imaging.PointF,Aspose.Imaging.PointF,Aspose.Imaging.PointF,Aspose.Imaging.PointF)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.ShapeSegments.BezierSegment" /> class.
            </summary>
      <param name="startPoint">The start point.</param>
      <param name="firstControlPoint">The first control point.</param>
      <param name="secondControlPoint">The second control point.</param>
      <param name="endPoint">The end point.</param>
    </member>
    <member name="P:Aspose.Imaging.ShapeSegments.BezierSegment.FirstControlPoint">
      <summary>
            Gets the first control point of a bezier spline.
            </summary>
      <value>The first control point.</value>
    </member>
    <member name="P:Aspose.Imaging.ShapeSegments.BezierSegment.SecondControlPoint">
      <summary>
            Gets the second control point of a bezier spline.
            </summary>
      <value>The second control point.</value>
    </member>
    <member name="T:Aspose.Imaging.ShapeSegments.NamespaceDoc">
      <summary>
            The namespace contains different shape segments which combine shapes.
            </summary>
    </member>
    <member name="T:Aspose.Imaging.Shapes.ArcShape">
      <summary>
            Represents an arc shape.
            </summary>
      <example>This example creates a new Image and draws a variety of shapes using Figures and GraphicsPath on the Image surface<code>[C#]

//Creates an instance of BmpOptions and set its various properties            
Aspose.Imaging.ImageOptions.BmpOptions bmpOptions = new Aspose.Imaging.ImageOptions.BmpOptions();
bmpOptions.BitsPerPixel = 24;

// create a new source based on memory stream.
bmpOptions.Source = new Aspose.Imaging.Sources.StreamSource(new System.IO.MemoryStream(), true);

//Create an instance of Image 
using (Aspose.Imaging.Image image = Aspose.Imaging.Image.Create(bmpOptions, 500, 500))
{
    //Create and initialize an instance of Graphics class
    Aspose.Imaging.Graphics graphics = new Aspose.Imaging.Graphics(image);

    //Clear Graphics surface
    graphics.Clear(Color.Wheat);

    //Create an instance of GraphicsPath class
    Aspose.Imaging.GraphicsPath graphicspath = new Aspose.Imaging.GraphicsPath();

    //Create an instance of Figure class
    Aspose.Imaging.Figure figure1 = new Aspose.Imaging.Figure();

    //Add Shape to Figure object
    figure1.AddShape(new Aspose.Imaging.Shapes.EllipseShape(new RectangleF(50, 50, 300, 300)));
    figure1.AddShape(new Aspose.Imaging.Shapes.PieShape(new Rectangle(new Point(110, 110), new Size(200, 200)), 0, 90));

    //Create an instance of Figure class
    Aspose.Imaging.Figure figure2 = new Aspose.Imaging.Figure();

    //Add Shape to Figure object
    figure2.AddShape(new Aspose.Imaging.Shapes.ArcShape(new RectangleF(10, 10, 300, 300), 0, 45));
    figure2.AddShape(new Aspose.Imaging.Shapes.PolygonShape(new[] { new PointF(150, 10), new PointF(150, 200), new PointF(250, 300), new PointF(350, 400) }, true));
    figure2.AddShape(new Aspose.Imaging.Shapes.RectangleShape(new Rectangle(new Point(250, 250), new Size(200, 200))));

    //Add Figure object to GraphicsPath
    graphicspath.AddFigures(new[] { figure1, figure2 });

    //Draw path with Pen object of color Black
    graphics.DrawPath(new Pen(Aspose.Imaging.Color.Black, 2), graphicspath);

    // save all changes.
    image.Save();
}</code><code>[Visual Basic]

'Creates an instance of BmpOptions and set its various properties            
Dim bmpOptions As Aspose.Imaging.ImageOptions.BmpOptions = New Aspose.Imaging.ImageOptions.BmpOptions()
bmpOptions.BitsPerPixel = 24

' create a new source based on memory stream.
bmpOptions.Source = New Aspose.Imaging.Sources.StreamSource(New System.IO.MemoryStream(), True)

'Create an instance of Image 
Using image As Aspose.Imaging.Image = Aspose.Imaging.Image.Create(bmpOptions, 500, 500)
'Create and initialize an instance of Graphics class
Dim graphics As Aspose.Imaging.Graphics = New Aspose.Imaging.Graphics(image)

'Clear Graphics surface
    graphics.Clear(Color.Wheat)

'Create an instance of GraphicsPath class
Dim graphicspath As Aspose.Imaging.GraphicsPath = New Aspose.Imaging.GraphicsPath()

'Create an instance of Figure class
Dim figure1 As Aspose.Imaging.Figure = New Aspose.Imaging.Figure()

'Add Shape to Figure object
    figure1.AddShape(New Aspose.Imaging.Shapes.EllipseShape(New RectangleF(50, 50, 300, 300)))
    figure1.AddShape(New Aspose.Imaging.Shapes.PieShape(New Rectangle(New Point(110, 110), New Size(200, 200)), 0, 90))

'Create an instance of Figure class
Dim figure2 As Aspose.Imaging.Figure = New Aspose.Imaging.Figure()

'Add Shape to Figure object
    figure2.AddShape(New Aspose.Imaging.Shapes.ArcShape(New RectangleF(10, 10, 300, 300), 0, 45))
    figure2.AddShape(New Aspose.Imaging.Shapes.PolygonShape(New() { New PointF(150, 10), New PointF(150, 200), New PointF(250, 300), New PointF(350, 400) }, True))
    figure2.AddShape(New Aspose.Imaging.Shapes.RectangleShape(New Rectangle(New Point(250, 250), New Size(200, 200))))

'Add Figure object to GraphicsPath
    graphicspath.AddFigures(New() { figure1, figure2 })

'Draw path with Pen object of color Black
    graphics.DrawPath(New Pen(Aspose.Imaging.Color.Black, 2), graphicspath)

' save all changes.
    image.Save()
End Using</code></example>
    </member>
    <member name="T:Aspose.Imaging.Shapes.PieShape">
      <summary>
            Represents a pie shape.
            </summary>
      <example>This example creates a new Image and draws a variety of shapes using Figures and GraphicsPath on the Image surface<code>[C#]

//Creates an instance of BmpOptions and set its various properties            
Aspose.Imaging.ImageOptions.BmpOptions bmpOptions = new Aspose.Imaging.ImageOptions.BmpOptions();
bmpOptions.BitsPerPixel = 24;

// create a new source based on memory stream.
bmpOptions.Source = new Aspose.Imaging.Sources.StreamSource(new System.IO.MemoryStream(), true);

//Create an instance of Image 
using (Aspose.Imaging.Image image = Aspose.Imaging.Image.Create(bmpOptions, 500, 500))
{
    //Create and initialize an instance of Graphics class
    Aspose.Imaging.Graphics graphics = new Aspose.Imaging.Graphics(image);

    //Clear Graphics surface
    graphics.Clear(Color.Wheat);

    //Create an instance of GraphicsPath class
    Aspose.Imaging.GraphicsPath graphicspath = new Aspose.Imaging.GraphicsPath();

    //Create an instance of Figure class
    Aspose.Imaging.Figure figure1 = new Aspose.Imaging.Figure();

    //Add Shape to Figure object
    figure1.AddShape(new Aspose.Imaging.Shapes.EllipseShape(new RectangleF(50, 50, 300, 300)));
    figure1.AddShape(new Aspose.Imaging.Shapes.PieShape(new Rectangle(new Point(110, 110), new Size(200, 200)), 0, 90));

    //Create an instance of Figure class
    Aspose.Imaging.Figure figure2 = new Aspose.Imaging.Figure();

    //Add Shape to Figure object
    figure2.AddShape(new Aspose.Imaging.Shapes.ArcShape(new RectangleF(10, 10, 300, 300), 0, 45));
    figure2.AddShape(new Aspose.Imaging.Shapes.PolygonShape(new[] { new PointF(150, 10), new PointF(150, 200), new PointF(250, 300), new PointF(350, 400) }, true));
    figure2.AddShape(new Aspose.Imaging.Shapes.RectangleShape(new Rectangle(new Point(250, 250), new Size(200, 200))));

    //Add Figure object to GraphicsPath
    graphicspath.AddFigures(new[] { figure1, figure2 });

    //Draw path with Pen object of color Black
    graphics.DrawPath(new Pen(Aspose.Imaging.Color.Black, 2), graphicspath);

    // save all changes.
    image.Save();
}</code><code>[Visual Basic]

'Creates an instance of BmpOptions and set its various properties            
Dim bmpOptions As Aspose.Imaging.ImageOptions.BmpOptions = New Aspose.Imaging.ImageOptions.BmpOptions()
bmpOptions.BitsPerPixel = 24

' create a new source based on memory stream.
bmpOptions.Source = New Aspose.Imaging.Sources.StreamSource(New System.IO.MemoryStream(), True)

'Create an instance of Image 
Using image As Aspose.Imaging.Image = Aspose.Imaging.Image.Create(bmpOptions, 500, 500)
'Create and initialize an instance of Graphics class
Dim graphics As Aspose.Imaging.Graphics = New Aspose.Imaging.Graphics(image)

'Clear Graphics surface
    graphics.Clear(Color.Wheat)

'Create an instance of GraphicsPath class
Dim graphicspath As Aspose.Imaging.GraphicsPath = New Aspose.Imaging.GraphicsPath()

'Create an instance of Figure class
Dim figure1 As Aspose.Imaging.Figure = New Aspose.Imaging.Figure()

'Add Shape to Figure object
    figure1.AddShape(New Aspose.Imaging.Shapes.EllipseShape(New RectangleF(50, 50, 300, 300)))
    figure1.AddShape(New Aspose.Imaging.Shapes.PieShape(New Rectangle(New Point(110, 110), New Size(200, 200)), 0, 90))

'Create an instance of Figure class
Dim figure2 As Aspose.Imaging.Figure = New Aspose.Imaging.Figure()

'Add Shape to Figure object
    figure2.AddShape(New Aspose.Imaging.Shapes.ArcShape(New RectangleF(10, 10, 300, 300), 0, 45))
    figure2.AddShape(New Aspose.Imaging.Shapes.PolygonShape(New() { New PointF(150, 10), New PointF(150, 200), New PointF(250, 300), New PointF(350, 400) }, True))
    figure2.AddShape(New Aspose.Imaging.Shapes.RectangleShape(New Rectangle(New Point(250, 250), New Size(200, 200))))

'Add Figure object to GraphicsPath
    graphicspath.AddFigures(New() { figure1, figure2 })

'Draw path with Pen object of color Black
    graphics.DrawPath(New Pen(Aspose.Imaging.Color.Black, 2), graphicspath)

' save all changes.
    image.Save()
End Using</code></example>
    </member>
    <member name="T:Aspose.Imaging.Shapes.EllipseShape">
      <summary>
            Represents an ellipse shape.
            </summary>
      <example>This example creates a new Image and draws a variety of shapes using Figures and GraphicsPath on the Image surface<code>[C#]

//Creates an instance of BmpOptions and set its various properties            
Aspose.Imaging.ImageOptions.BmpOptions bmpOptions = new Aspose.Imaging.ImageOptions.BmpOptions();
bmpOptions.BitsPerPixel = 24;

// create a new source based on memory stream.
bmpOptions.Source = new Aspose.Imaging.Sources.StreamSource(new System.IO.MemoryStream(), true);

//Create an instance of Image 
using (Aspose.Imaging.Image image = Aspose.Imaging.Image.Create(bmpOptions, 500, 500))
{
    //Create and initialize an instance of Graphics class
    Aspose.Imaging.Graphics graphics = new Aspose.Imaging.Graphics(image);

    //Clear Graphics surface
    graphics.Clear(Color.Wheat);

    //Create an instance of GraphicsPath class
    Aspose.Imaging.GraphicsPath graphicspath = new Aspose.Imaging.GraphicsPath();

    //Create an instance of Figure class
    Aspose.Imaging.Figure figure1 = new Aspose.Imaging.Figure();

    //Add Shape to Figure object
    figure1.AddShape(new Aspose.Imaging.Shapes.EllipseShape(new RectangleF(50, 50, 300, 300)));
    figure1.AddShape(new Aspose.Imaging.Shapes.PieShape(new Rectangle(new Point(110, 110), new Size(200, 200)), 0, 90));

    //Create an instance of Figure class
    Aspose.Imaging.Figure figure2 = new Aspose.Imaging.Figure();

    //Add Shape to Figure object
    figure2.AddShape(new Aspose.Imaging.Shapes.ArcShape(new RectangleF(10, 10, 300, 300), 0, 45));
    figure2.AddShape(new Aspose.Imaging.Shapes.PolygonShape(new[] { new PointF(150, 10), new PointF(150, 200), new PointF(250, 300), new PointF(350, 400) }, true));
    figure2.AddShape(new Aspose.Imaging.Shapes.RectangleShape(new Rectangle(new Point(250, 250), new Size(200, 200))));

    //Add Figure object to GraphicsPath
    graphicspath.AddFigures(new[] { figure1, figure2 });

    //Draw path with Pen object of color Black
    graphics.DrawPath(new Pen(Aspose.Imaging.Color.Black, 2), graphicspath);

    // save all changes.
    image.Save();
}</code><code>[Visual Basic]

'Creates an instance of BmpOptions and set its various properties            
Dim bmpOptions As Aspose.Imaging.ImageOptions.BmpOptions = New Aspose.Imaging.ImageOptions.BmpOptions()
bmpOptions.BitsPerPixel = 24

' create a new source based on memory stream.
bmpOptions.Source = New Aspose.Imaging.Sources.StreamSource(New System.IO.MemoryStream(), True)

'Create an instance of Image 
Using image As Aspose.Imaging.Image = Aspose.Imaging.Image.Create(bmpOptions, 500, 500)
'Create and initialize an instance of Graphics class
Dim graphics As Aspose.Imaging.Graphics = New Aspose.Imaging.Graphics(image)

'Clear Graphics surface
    graphics.Clear(Color.Wheat)

'Create an instance of GraphicsPath class
Dim graphicspath As Aspose.Imaging.GraphicsPath = New Aspose.Imaging.GraphicsPath()

'Create an instance of Figure class
Dim figure1 As Aspose.Imaging.Figure = New Aspose.Imaging.Figure()

'Add Shape to Figure object
    figure1.AddShape(New Aspose.Imaging.Shapes.EllipseShape(New RectangleF(50, 50, 300, 300)))
    figure1.AddShape(New Aspose.Imaging.Shapes.PieShape(New Rectangle(New Point(110, 110), New Size(200, 200)), 0, 90))

'Create an instance of Figure class
Dim figure2 As Aspose.Imaging.Figure = New Aspose.Imaging.Figure()

'Add Shape to Figure object
    figure2.AddShape(New Aspose.Imaging.Shapes.ArcShape(New RectangleF(10, 10, 300, 300), 0, 45))
    figure2.AddShape(New Aspose.Imaging.Shapes.PolygonShape(New() { New PointF(150, 10), New PointF(150, 200), New PointF(250, 300), New PointF(350, 400) }, True))
    figure2.AddShape(New Aspose.Imaging.Shapes.RectangleShape(New Rectangle(New Point(250, 250), New Size(200, 200))))

'Add Figure object to GraphicsPath
    graphicspath.AddFigures(New() { figure1, figure2 })

'Draw path with Pen object of color Black
    graphics.DrawPath(New Pen(Aspose.Imaging.Color.Black, 2), graphicspath)

' save all changes.
    image.Save()
End Using</code></example>
    </member>
    <member name="T:Aspose.Imaging.Shapes.RectangleShape">
      <summary>
            Represents a rectangular shape.
            </summary>
      <example>This example creates a new Image and draws a variety of shapes using Figures and GraphicsPath on the Image surface<code>[C#]

//Creates an instance of BmpOptions and set its various properties            
Aspose.Imaging.ImageOptions.BmpOptions bmpOptions = new Aspose.Imaging.ImageOptions.BmpOptions();
bmpOptions.BitsPerPixel = 24;

// create a new source based on memory stream.
bmpOptions.Source = new Aspose.Imaging.Sources.StreamSource(new System.IO.MemoryStream(), true);

//Create an instance of Image 
using (Aspose.Imaging.Image image = Aspose.Imaging.Image.Create(bmpOptions, 500, 500))
{
    //Create and initialize an instance of Graphics class
    Aspose.Imaging.Graphics graphics = new Aspose.Imaging.Graphics(image);

    //Clear Graphics surface
    graphics.Clear(Color.Wheat);

    //Create an instance of GraphicsPath class
    Aspose.Imaging.GraphicsPath graphicspath = new Aspose.Imaging.GraphicsPath();

    //Create an instance of Figure class
    Aspose.Imaging.Figure figure1 = new Aspose.Imaging.Figure();

    //Add Shape to Figure object
    figure1.AddShape(new Aspose.Imaging.Shapes.EllipseShape(new RectangleF(50, 50, 300, 300)));
    figure1.AddShape(new Aspose.Imaging.Shapes.PieShape(new Rectangle(new Point(110, 110), new Size(200, 200)), 0, 90));

    //Create an instance of Figure class
    Aspose.Imaging.Figure figure2 = new Aspose.Imaging.Figure();

    //Add Shape to Figure object
    figure2.AddShape(new Aspose.Imaging.Shapes.ArcShape(new RectangleF(10, 10, 300, 300), 0, 45));
    figure2.AddShape(new Aspose.Imaging.Shapes.PolygonShape(new[] { new PointF(150, 10), new PointF(150, 200), new PointF(250, 300), new PointF(350, 400) }, true));
    figure2.AddShape(new Aspose.Imaging.Shapes.RectangleShape(new Rectangle(new Point(250, 250), new Size(200, 200))));

    //Add Figure object to GraphicsPath
    graphicspath.AddFigures(new[] { figure1, figure2 });

    //Draw path with Pen object of color Black
    graphics.DrawPath(new Pen(Aspose.Imaging.Color.Black, 2), graphicspath);

    // save all changes.
    image.Save();
}</code><code>[Visual Basic]

'Creates an instance of BmpOptions and set its various properties            
Dim bmpOptions As Aspose.Imaging.ImageOptions.BmpOptions = New Aspose.Imaging.ImageOptions.BmpOptions()
bmpOptions.BitsPerPixel = 24

' create a new source based on memory stream.
bmpOptions.Source = New Aspose.Imaging.Sources.StreamSource(New System.IO.MemoryStream(), True)

'Create an instance of Image 
Using image As Aspose.Imaging.Image = Aspose.Imaging.Image.Create(bmpOptions, 500, 500)
'Create and initialize an instance of Graphics class
Dim graphics As Aspose.Imaging.Graphics = New Aspose.Imaging.Graphics(image)

'Clear Graphics surface
    graphics.Clear(Color.Wheat)

'Create an instance of GraphicsPath class
Dim graphicspath As Aspose.Imaging.GraphicsPath = New Aspose.Imaging.GraphicsPath()

'Create an instance of Figure class
Dim figure1 As Aspose.Imaging.Figure = New Aspose.Imaging.Figure()

'Add Shape to Figure object
    figure1.AddShape(New Aspose.Imaging.Shapes.EllipseShape(New RectangleF(50, 50, 300, 300)))
    figure1.AddShape(New Aspose.Imaging.Shapes.PieShape(New Rectangle(New Point(110, 110), New Size(200, 200)), 0, 90))

'Create an instance of Figure class
Dim figure2 As Aspose.Imaging.Figure = New Aspose.Imaging.Figure()

'Add Shape to Figure object
    figure2.AddShape(New Aspose.Imaging.Shapes.ArcShape(New RectangleF(10, 10, 300, 300), 0, 45))
    figure2.AddShape(New Aspose.Imaging.Shapes.PolygonShape(New() { New PointF(150, 10), New PointF(150, 200), New PointF(250, 300), New PointF(350, 400) }, True))
    figure2.AddShape(New Aspose.Imaging.Shapes.RectangleShape(New Rectangle(New Point(250, 250), New Size(200, 200))))

'Add Figure object to GraphicsPath
    graphicspath.AddFigures(New() { figure1, figure2 })

'Draw path with Pen object of color Black
    graphics.DrawPath(New Pen(Aspose.Imaging.Color.Black, 2), graphicspath)

' save all changes.
    image.Save()
End Using</code></example>
    </member>
    <member name="T:Aspose.Imaging.Shapes.RectangleProjectedShape">
      <summary>
            Represents a shape which is projected over rectangle turned to a particular orientation.
            Specified by four points which can be rotated in space maintaining the same edges length and 90 degrees between adjacent edges.
            </summary>
    </member>
    <member name="M:Aspose.Imaging.Shapes.RectangleProjectedShape.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.Shapes.RectangleProjectedShape" /> class.
            </summary>
    </member>
    <member name="M:Aspose.Imaging.Shapes.RectangleProjectedShape.#ctor(Aspose.Imaging.RectangleF)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.Shapes.RectangleProjectedShape" /> class.
            </summary>
      <param name="rectangle">The rectangle to initialize from.</param>
    </member>
    <member name="M:Aspose.Imaging.Shapes.RectangleProjectedShape.GetBounds(Aspose.Imaging.Matrix)">
      <summary>
            Gets the object's bounds.
            </summary>
      <param name="matrix">The matrix to apply before bounds will be calculated.</param>
      <returns>The estimated object's bounds.</returns>
    </member>
    <member name="M:Aspose.Imaging.Shapes.RectangleProjectedShape.GetBounds(Aspose.Imaging.Matrix,Aspose.Imaging.Pen)">
      <summary>
            Gets the object's bounds.
            </summary>
      <param name="matrix">The matrix to apply before bounds will be calculated.</param>
      <param name="pen">The pen to use for object. This can influence the object's bounds size.</param>
      <returns>The estimated object's bounds.</returns>
    </member>
    <member name="M:Aspose.Imaging.Shapes.RectangleProjectedShape.Transform(Aspose.Imaging.Matrix)">
      <summary>
            Applies the specified transformation to the shape.
            </summary>
      <param name="transform">The transformation to apply.</param>
    </member>
    <member name="P:Aspose.Imaging.Shapes.RectangleProjectedShape.LeftTop">
      <summary>
            Gets the left top rectangle point.
            </summary>
      <value>The left top rectangle point.</value>
    </member>
    <member name="P:Aspose.Imaging.Shapes.RectangleProjectedShape.RightTop">
      <summary>
            Gets the right top rectangle point.
            </summary>
      <value>The right top rectangle point.</value>
    </member>
    <member name="P:Aspose.Imaging.Shapes.RectangleProjectedShape.LeftBottom">
      <summary>
            Gets the left bottom rectangle point.
            </summary>
      <value>The left bottom rectangle point.</value>
    </member>
    <member name="P:Aspose.Imaging.Shapes.RectangleProjectedShape.RightBottom">
      <summary>
            Gets the right bottom rectangle point.
            </summary>
      <value>The right bottom rectangle point.</value>
    </member>
    <member name="P:Aspose.Imaging.Shapes.RectangleProjectedShape.Center">
      <summary>
            Gets the shape's center.
            </summary>
      <value>The shape's center.</value>
    </member>
    <member name="P:Aspose.Imaging.Shapes.RectangleProjectedShape.Bounds">
      <summary>
            Gets the object's bounds.
            </summary>
      <value>The object's bounds.</value>
    </member>
    <member name="P:Aspose.Imaging.Shapes.RectangleProjectedShape.RectangleWidth">
      <summary>
            Gets the rectangle width.
            </summary>
      <value>The rectangle width.</value>
    </member>
    <member name="P:Aspose.Imaging.Shapes.RectangleProjectedShape.RectangleHeight">
      <summary>
            Gets the rectangle height.
            </summary>
      <value>The rectangle height.</value>
    </member>
    <member name="P:Aspose.Imaging.Shapes.RectangleProjectedShape.HasSegments">
      <summary>
            Gets a value indicating whether shape has segments.
            </summary>
      <value>
        <c>True</c> if shape has segments; otherwise, <c>false</c>.</value>
    </member>
    <member name="M:Aspose.Imaging.Shapes.RectangleShape.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.Shapes.RectangleShape" /> class.
            </summary>
    </member>
    <member name="M:Aspose.Imaging.Shapes.RectangleShape.#ctor(Aspose.Imaging.RectangleF)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.Shapes.RectangleShape" /> class.
            </summary>
      <param name="rectangle">The rectangle.</param>
    </member>
    <member name="P:Aspose.Imaging.Shapes.RectangleShape.Segments">
      <summary>
            Gets the shape segments.
            </summary>
      <value>The shape segments.</value>
    </member>
    <member name="M:Aspose.Imaging.Shapes.EllipseShape.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.Shapes.EllipseShape" /> class.
            </summary>
    </member>
    <member name="M:Aspose.Imaging.Shapes.EllipseShape.#ctor(Aspose.Imaging.RectangleF)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.Shapes.EllipseShape" /> class.
            </summary>
      <param name="rectangle">The rectangle.</param>
    </member>
    <member name="P:Aspose.Imaging.Shapes.EllipseShape.Segments">
      <summary>
            Gets the shape segments.
            </summary>
      <value>The shape segments.</value>
    </member>
    <member name="M:Aspose.Imaging.Shapes.PieShape.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.Shapes.PieShape" /> class.
            </summary>
    </member>
    <member name="M:Aspose.Imaging.Shapes.PieShape.#ctor(Aspose.Imaging.RectangleF,System.Single,System.Single)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.Shapes.PieShape" /> class.
            </summary>
      <param name="rectangle">The rectangle.</param>
      <param name="startAngle">The start angle.</param>
      <param name="sweepAngle">The sweep angle.</param>
    </member>
    <member name="P:Aspose.Imaging.Shapes.PieShape.StartAngle">
      <summary>
            Gets or sets the start angle.
            </summary>
      <value>The start angle.</value>
    </member>
    <member name="P:Aspose.Imaging.Shapes.PieShape.SweepAngle">
      <summary>
            Gets or sets the sweep angle.
            </summary>
      <value>The sweep angle.</value>
    </member>
    <member name="P:Aspose.Imaging.Shapes.PieShape.Segments">
      <summary>
            Gets the shape segments.
            </summary>
      <value>The shape segments.</value>
    </member>
    <member name="M:Aspose.Imaging.Shapes.ArcShape.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.Shapes.ArcShape" /> class.
            </summary>
    </member>
    <member name="M:Aspose.Imaging.Shapes.ArcShape.#ctor(Aspose.Imaging.RectangleF,System.Single,System.Single)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.Shapes.ArcShape" /> class.
            </summary>
      <param name="rectangle">The rectangle.</param>
      <param name="startAngle">The start angle.</param>
      <param name="sweepAngle">The sweep angle.</param>
    </member>
    <member name="M:Aspose.Imaging.Shapes.ArcShape.#ctor(Aspose.Imaging.RectangleF,System.Single,System.Single,System.Boolean)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.Shapes.ArcShape" /> class.
            </summary>
      <param name="rectangle">The rectangle.</param>
      <param name="startAngle">The start angle.</param>
      <param name="sweepAngle">The sweep angle.</param>
      <param name="isClosed">If set to <c>true</c> the arc is closed. The closed arc is actually degenereates to an ellipse.</param>
    </member>
    <member name="M:Aspose.Imaging.Shapes.ArcShape.Reverse">
      <summary>
            Reverses the order of points for this shape.
            </summary>
    </member>
    <member name="M:Aspose.Imaging.Shapes.ArcShape.GetBounds(Aspose.Imaging.Matrix)">
      <summary>
            Gets the object's bounds.
            </summary>
      <param name="matrix">The matrix to apply before bounds will be calculated.</param>
      <returns>The estimated object's bounds.</returns>
    </member>
    <member name="M:Aspose.Imaging.Shapes.ArcShape.GetBounds(Aspose.Imaging.Matrix,Aspose.Imaging.Pen)">
      <summary>
            Gets the object's bounds.
            </summary>
      <param name="matrix">The matrix to apply before bounds will be calculated.</param>
      <param name="pen">The pen to use for object. This can influence the object's bounds size.</param>
      <returns>The estimated object's bounds.</returns>
    </member>
    <member name="P:Aspose.Imaging.Shapes.ArcShape.Segments">
      <summary>
            Gets the shape segments.
            </summary>
      <value>The shape segments.</value>
    </member>
    <member name="P:Aspose.Imaging.Shapes.ArcShape.StartPoint">
      <summary>
            Gets the starting shape point.
            </summary>
      <value>The starting shape point.</value>
    </member>
    <member name="P:Aspose.Imaging.Shapes.ArcShape.EndPoint">
      <summary>
            Gets the ending shape point.
            </summary>
      <value>The ending shape point.</value>
    </member>
    <member name="P:Aspose.Imaging.Shapes.ArcShape.IsClosed">
      <summary>
            Gets or sets a value indicating whether ordered shape is closed. When processing closed ordered shape the starting and ending points have no meaning.
            </summary>
      <value>
        <c>True</c> if this ordered shape is closed; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="T:Aspose.Imaging.Shapes.BezierShape">
      <summary>
            Represents a bezier spline.
            </summary>
    </member>
    <member name="T:Aspose.Imaging.Shapes.PolygonShape">
      <summary>
            Represents a polygon shape.
            </summary>
      <example>This example creates a new Image and draws a variety of shapes using Figures and GraphicsPath on the Image surface<code>[C#]

//Creates an instance of BmpOptions and set its various properties            
Aspose.Imaging.ImageOptions.BmpOptions bmpOptions = new Aspose.Imaging.ImageOptions.BmpOptions();
bmpOptions.BitsPerPixel = 24;

// create a new source based on memory stream.
bmpOptions.Source = new Aspose.Imaging.Sources.StreamSource(new System.IO.MemoryStream(), true);

//Create an instance of Image 
using (Aspose.Imaging.Image image = Aspose.Imaging.Image.Create(bmpOptions, 500, 500))
{
    //Create and initialize an instance of Graphics class
    Aspose.Imaging.Graphics graphics = new Aspose.Imaging.Graphics(image);

    //Clear Graphics surface
    graphics.Clear(Color.Wheat);

    //Create an instance of GraphicsPath class
    Aspose.Imaging.GraphicsPath graphicspath = new Aspose.Imaging.GraphicsPath();

    //Create an instance of Figure class
    Aspose.Imaging.Figure figure1 = new Aspose.Imaging.Figure();

    //Add Shape to Figure object
    figure1.AddShape(new Aspose.Imaging.Shapes.EllipseShape(new RectangleF(50, 50, 300, 300)));
    figure1.AddShape(new Aspose.Imaging.Shapes.PieShape(new Rectangle(new Point(110, 110), new Size(200, 200)), 0, 90));

    //Create an instance of Figure class
    Aspose.Imaging.Figure figure2 = new Aspose.Imaging.Figure();

    //Add Shape to Figure object
    figure2.AddShape(new Aspose.Imaging.Shapes.ArcShape(new RectangleF(10, 10, 300, 300), 0, 45));
    figure2.AddShape(new Aspose.Imaging.Shapes.PolygonShape(new[] { new PointF(150, 10), new PointF(150, 200), new PointF(250, 300), new PointF(350, 400) }, true));
    figure2.AddShape(new Aspose.Imaging.Shapes.RectangleShape(new Rectangle(new Point(250, 250), new Size(200, 200))));

    //Add Figure object to GraphicsPath
    graphicspath.AddFigures(new[] { figure1, figure2 });

    //Draw path with Pen object of color Black
    graphics.DrawPath(new Pen(Aspose.Imaging.Color.Black, 2), graphicspath);

    // save all changes.
    image.Save();
}</code><code>[Visual Basic]

'Creates an instance of BmpOptions and set its various properties            
Dim bmpOptions As Aspose.Imaging.ImageOptions.BmpOptions = New Aspose.Imaging.ImageOptions.BmpOptions()
bmpOptions.BitsPerPixel = 24

' create a new source based on memory stream.
bmpOptions.Source = New Aspose.Imaging.Sources.StreamSource(New System.IO.MemoryStream(), True)

'Create an instance of Image 
Using image As Aspose.Imaging.Image = Aspose.Imaging.Image.Create(bmpOptions, 500, 500)
'Create and initialize an instance of Graphics class
Dim graphics As Aspose.Imaging.Graphics = New Aspose.Imaging.Graphics(image)

'Clear Graphics surface
    graphics.Clear(Color.Wheat)

'Create an instance of GraphicsPath class
Dim graphicspath As Aspose.Imaging.GraphicsPath = New Aspose.Imaging.GraphicsPath()

'Create an instance of Figure class
Dim figure1 As Aspose.Imaging.Figure = New Aspose.Imaging.Figure()

'Add Shape to Figure object
    figure1.AddShape(New Aspose.Imaging.Shapes.EllipseShape(New RectangleF(50, 50, 300, 300)))
    figure1.AddShape(New Aspose.Imaging.Shapes.PieShape(New Rectangle(New Point(110, 110), New Size(200, 200)), 0, 90))

'Create an instance of Figure class
Dim figure2 As Aspose.Imaging.Figure = New Aspose.Imaging.Figure()

'Add Shape to Figure object
    figure2.AddShape(New Aspose.Imaging.Shapes.ArcShape(New RectangleF(10, 10, 300, 300), 0, 45))
    figure2.AddShape(New Aspose.Imaging.Shapes.PolygonShape(New() { New PointF(150, 10), New PointF(150, 200), New PointF(250, 300), New PointF(350, 400) }, True))
    figure2.AddShape(New Aspose.Imaging.Shapes.RectangleShape(New Rectangle(New Point(250, 250), New Size(200, 200))))

'Add Figure object to GraphicsPath
    graphicspath.AddFigures(New() { figure1, figure2 })

'Draw path with Pen object of color Black
    graphics.DrawPath(New Pen(Aspose.Imaging.Color.Black, 2), graphicspath)

' save all changes.
    image.Save()
End Using</code></example>
    </member>
    <member name="M:Aspose.Imaging.Shapes.PolygonShape.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.Shapes.PolygonShape" /> class.
            </summary>
    </member>
    <member name="M:Aspose.Imaging.Shapes.PolygonShape.#ctor(Aspose.Imaging.PointF[])">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.Shapes.PolygonShape" /> class.
            </summary>
      <param name="points">The points array.</param>
    </member>
    <member name="M:Aspose.Imaging.Shapes.PolygonShape.#ctor(Aspose.Imaging.PointF[],System.Boolean)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.Shapes.PolygonShape" /> class.
            </summary>
      <param name="points">The points array.</param>
      <param name="isClosed">If set to <c>true</c> the polygon is closed.</param>
    </member>
    <member name="M:Aspose.Imaging.Shapes.PolygonShape.Reverse">
      <summary>
            Reverses the order of points for this shape.
            </summary>
    </member>
    <member name="M:Aspose.Imaging.Shapes.PolygonShape.GetBounds(Aspose.Imaging.Matrix)">
      <summary>
            Gets the object's bounds.
            </summary>
      <param name="matrix">The matrix to apply before bounds will be calculated.</param>
      <returns>The estimated object's bounds.</returns>
    </member>
    <member name="M:Aspose.Imaging.Shapes.PolygonShape.GetBounds(Aspose.Imaging.Matrix,Aspose.Imaging.Pen)">
      <summary>
            Gets the object's bounds.
            </summary>
      <param name="matrix">The matrix to apply before bounds will be calculated.</param>
      <param name="pen">The pen to use for object. This can influence the object's bounds size.</param>
      <returns>The estimated object's bounds.</returns>
    </member>
    <member name="M:Aspose.Imaging.Shapes.PolygonShape.Transform(Aspose.Imaging.Matrix)">
      <summary>
            Applies the specified transformation to the shape.
            </summary>
      <param name="transform">The transformation to apply.</param>
    </member>
    <member name="P:Aspose.Imaging.Shapes.PolygonShape.Points">
      <summary>
            Gets or sets the curve points.
            </summary>
      <value>The curve points.</value>
    </member>
    <member name="P:Aspose.Imaging.Shapes.PolygonShape.IsClosed">
      <summary>
            Gets or sets a value indicating whether shape is closed.
            </summary>
      <value>
        <c>true</c> if shape is closed; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:Aspose.Imaging.Shapes.PolygonShape.Bounds">
      <summary>
            Gets the object's bounds.
            </summary>
      <value>The object's bounds.</value>
    </member>
    <member name="P:Aspose.Imaging.Shapes.PolygonShape.Center">
      <summary>
            Gets the shape's center.
            </summary>
      <value>The shape's center.</value>
    </member>
    <member name="P:Aspose.Imaging.Shapes.PolygonShape.Segments">
      <summary>
            Gets the shape segments.
            </summary>
      <value>The shape segments.</value>
    </member>
    <member name="P:Aspose.Imaging.Shapes.PolygonShape.HasSegments">
      <summary>
            Gets a value indicating whether shape has segments.
            </summary>
      <value>
        <c>True</c> if shape has segments; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:Aspose.Imaging.Shapes.PolygonShape.StartPoint">
      <summary>
            Gets the starting shape point.
            </summary>
      <value>The starting shape point.</value>
    </member>
    <member name="P:Aspose.Imaging.Shapes.PolygonShape.EndPoint">
      <summary>
            Gets the ending shape point.
            </summary>
      <value>The ending shape point.</value>
    </member>
    <member name="M:Aspose.Imaging.Shapes.BezierShape.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.Shapes.BezierShape" /> class.
            </summary>
    </member>
    <member name="M:Aspose.Imaging.Shapes.BezierShape.#ctor(Aspose.Imaging.PointF[])">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.Shapes.BezierShape" /> class.
            </summary>
      <param name="points">The points array.</param>
    </member>
    <member name="M:Aspose.Imaging.Shapes.BezierShape.#ctor(Aspose.Imaging.PointF[],System.Boolean)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.Shapes.BezierShape" /> class.
            </summary>
      <param name="points">The points array.</param>
      <param name="isClosed">If set to <c>true</c> the bezier spline is closed.</param>
    </member>
    <member name="M:Aspose.Imaging.Shapes.BezierShape.GetBounds(Aspose.Imaging.Matrix)">
      <summary>
            Gets the object's bounds.
            </summary>
      <param name="matrix">The matrix to apply before bounds will be calculated.</param>
      <returns>The estimated object's bounds.</returns>
    </member>
    <member name="M:Aspose.Imaging.Shapes.BezierShape.GetBounds(Aspose.Imaging.Matrix,Aspose.Imaging.Pen)">
      <summary>
            Gets the object's bounds.
            </summary>
      <param name="matrix">The matrix to apply before bounds will be calculated.</param>
      <param name="pen">The pen to use for object. This can influence the object's bounds size.</param>
      <returns>The estimated object's bounds.</returns>
    </member>
    <member name="P:Aspose.Imaging.Shapes.BezierShape.Bounds">
      <summary>
            Gets the object's bounds.
            </summary>
      <value>The object's bounds.</value>
    </member>
    <member name="P:Aspose.Imaging.Shapes.BezierShape.Center">
      <summary>
            Gets the shape's center.
            </summary>
      <value>The shape's center.</value>
    </member>
    <member name="P:Aspose.Imaging.Shapes.BezierShape.Segments">
      <summary>
            Gets the shape segments.
            </summary>
      <value>The shape segments.</value>
    </member>
    <member name="P:Aspose.Imaging.Shapes.BezierShape.HasSegments">
      <summary>
            Gets a value indicating whether shape has segments.
            </summary>
      <value>
        <c>True</c> if shape has segments; otherwise, <c>false</c>.</value>
    </member>
    <member name="P:Aspose.Imaging.Shapes.BezierShape.EndPoint">
      <summary>
            Gets the ending shape point.
            </summary>
      <value>The ending shape point.</value>
    </member>
    <member name="T:Aspose.Imaging.Shapes.CurveShape">
      <summary>
            Represents a curved spline shape.
            </summary>
    </member>
    <member name="M:Aspose.Imaging.Shapes.CurveShape.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.Shapes.CurveShape" /> class.
            </summary>
    </member>
    <member name="M:Aspose.Imaging.Shapes.CurveShape.#ctor(Aspose.Imaging.PointF[])">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.Shapes.CurveShape" /> class. The default tension of 0.5 is used.
            </summary>
      <param name="points">The points array.</param>
    </member>
    <member name="M:Aspose.Imaging.Shapes.CurveShape.#ctor(Aspose.Imaging.PointF[],System.Boolean)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.Shapes.CurveShape" /> class. The default tension of 0.5 is used.
            </summary>
      <param name="points">The points array.</param>
            /// <param name="isClosed">if set to <c>true</c> the curve is closed.</param></member>
    <member name="M:Aspose.Imaging.Shapes.CurveShape.#ctor(Aspose.Imaging.PointF[],System.Single)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.Shapes.CurveShape" /> class.
            </summary>
      <param name="points">The points array.</param>
      <param name="tension">The curve tension.</param>
    </member>
    <member name="M:Aspose.Imaging.Shapes.CurveShape.#ctor(Aspose.Imaging.PointF[],System.Single,System.Boolean)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.Shapes.CurveShape" /> class.
            </summary>
      <param name="points">The points array.</param>
      <param name="tension">The curve tension.</param>
      <param name="isClosed">if set to <c>true</c> the curve is closed.</param>
    </member>
    <member name="M:Aspose.Imaging.Shapes.CurveShape.GetBounds(Aspose.Imaging.Matrix)">
      <summary>
            Gets the object's bounds.
            </summary>
      <param name="matrix">The matrix to apply before bounds will be calculated.</param>
      <returns>The estimated object's bounds.</returns>
    </member>
    <member name="M:Aspose.Imaging.Shapes.CurveShape.GetBounds(Aspose.Imaging.Matrix,Aspose.Imaging.Pen)">
      <summary>
            Gets the object's bounds.
            </summary>
      <param name="matrix">The matrix to apply before bounds will be calculated.</param>
      <param name="pen">The pen to use for object. This can influence the object's bounds size.</param>
      <returns>The estimated object's bounds.</returns>
    </member>
    <member name="P:Aspose.Imaging.Shapes.CurveShape.Tension">
      <summary>
            Gets or sets the curve tension.
            </summary>
      <value>The curve tension.</value>
    </member>
    <member name="P:Aspose.Imaging.Shapes.CurveShape.Bounds">
      <summary>
            Gets the object's bounds.
            </summary>
      <value>The object's bounds.</value>
    </member>
    <member name="P:Aspose.Imaging.Shapes.CurveShape.Center">
      <summary>
            Gets the shape's center.
            </summary>
      <value>The shape's center.</value>
    </member>
    <member name="P:Aspose.Imaging.Shapes.CurveShape.Segments">
      <summary>
            Gets the shape segments.
            </summary>
      <value>The shape segments.</value>
    </member>
    <member name="T:Aspose.Imaging.Shapes.NamespaceDoc">
      <summary>
            The namespace contains different shapes combined from shape segments.
            </summary>
    </member>
    <member name="T:Aspose.Imaging.Shapes.TextShape">
      <summary>
            Represents a text shape.
            </summary>
    </member>
    <member name="M:Aspose.Imaging.Shapes.TextShape.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.Shapes.TextShape" /> class.
            </summary>
    </member>
    <member name="M:Aspose.Imaging.Shapes.TextShape.#ctor(System.String,Aspose.Imaging.RectangleF,Aspose.Imaging.Font,Aspose.Imaging.StringFormat)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.Shapes.TextShape" /> class.
            </summary>
      <param name="text">The text to draw.</param>
      <param name="rectangle">The text rectangle.</param>
      <param name="font">The font to use.</param>
      <param name="stringFormat">The string format.</param>
    </member>
    <member name="M:Aspose.Imaging.Shapes.TextShape.GetBounds(Aspose.Imaging.Matrix)">
      <summary>
            Gets the object's bounds.
            </summary>
      <param name="matrix">The matrix to apply before bounds will be calculated.</param>
      <returns>The estimated object's bounds.</returns>
    </member>
    <member name="M:Aspose.Imaging.Shapes.TextShape.GetBounds(Aspose.Imaging.Matrix,Aspose.Imaging.Pen)">
      <summary>
            Gets the object's bounds.
            </summary>
      <param name="matrix">The matrix to apply before bounds will be calculated.</param>
      <param name="pen">The pen to use for object. This can influence the object's bounds size.</param>
      <returns>The estimated object's bounds.</returns>
    </member>
    <member name="M:Aspose.Imaging.Shapes.TextShape.Transform(Aspose.Imaging.Matrix)">
      <summary>
            Applies the specified transformation to the shape.
            </summary>
      <param name="transform">The transformation to apply.</param>
    </member>
    <member name="P:Aspose.Imaging.Shapes.TextShape.Text">
      <summary>
            Gets or sets the drawn text.
            </summary>
      <value>The drawn text.</value>
    </member>
    <member name="P:Aspose.Imaging.Shapes.TextShape.Font">
      <summary>
            Gets or sets the font used to draw the text.
            </summary>
      <value>The font used to draw the text.</value>
    </member>
    <member name="P:Aspose.Imaging.Shapes.TextShape.TextFormat">
      <summary>
            Gets or sets the text format.
            </summary>
      <value>The text format.</value>
    </member>
    <member name="P:Aspose.Imaging.Shapes.TextShape.Center">
      <summary>
            Gets the shape's center.
            </summary>
      <value>The shape's center.</value>
    </member>
    <member name="P:Aspose.Imaging.Shapes.TextShape.Bounds">
      <summary>
            Gets the object's bounds.
            </summary>
      <value>The object's bounds.</value>
    </member>
    <member name="P:Aspose.Imaging.Shapes.TextShape.Segments">
      <summary>
            Gets the shape segments.
            </summary>
      <value>The shape segments.</value>
    </member>
    <member name="P:Aspose.Imaging.Shapes.TextShape.HasSegments">
      <summary>
            Gets a value indicating whether shape has segments.
            </summary>
      <value>
        <c>True</c> if shape has segments; otherwise, <c>false</c>.</value>
    </member>
    <member name="T:Aspose.Imaging.Size">
      <summary>
            Represents size.
            </summary>
    </member>
    <member name="M:Aspose.Imaging.Size.#ctor(Aspose.Imaging.Point)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.Size" /> structure from the specified <see cref="T:Aspose.Imaging.Point" />.
            </summary>
      <param name="point">The <see cref="T:Aspose.Imaging.Point" /> from which to initialize this <see cref="T:Aspose.Imaging.Size" />.</param>
    </member>
    <member name="M:Aspose.Imaging.Size.#ctor(System.Int32,System.Int32)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.Size" /> structure from the specified dimensions.
            </summary>
      <param name="width">The width component of the new <see cref="T:Aspose.Imaging.Size" />.</param>
      <param name="height">The height component of the new <see cref="T:Aspose.Imaging.Size" />.</param>
    </member>
    <member name="M:Aspose.Imaging.Size.op_Implicit(Aspose.Imaging.Size)~Aspose.Imaging.SizeF">
      <summary>
            Converts the specified <see cref="T:Aspose.Imaging.Size" /> to a <see cref="T:Aspose.Imaging.SizeF" />.
            </summary>
      <param name="size">The <see cref="T:Aspose.Imaging.Size" /> to convert.</param>
      <returns>The <see cref="T:Aspose.Imaging.SizeF" /> structure to which this operator converts.</returns>
    </member>
    <member name="M:Aspose.Imaging.Size.op_Addition(Aspose.Imaging.Size,Aspose.Imaging.Size)">
      <summary>
            Adds the width and height of one <see cref="T:Aspose.Imaging.Size" /> structure to the width and height of another <see cref="T:Aspose.Imaging.Size" /> structure.
            </summary>
      <param name="size1">The first <see cref="T:Aspose.Imaging.Size" /> to add.</param>
      <param name="size2">The second <see cref="T:Aspose.Imaging.Size" /> to add.</param>
      <returns>A <see cref="T:Aspose.Imaging.Size" /> structure that is the result of the addition operation.</returns>
    </member>
    <member name="M:Aspose.Imaging.Size.op_Subtraction(Aspose.Imaging.Size,Aspose.Imaging.Size)">
      <summary>
            Subtracts the width and height of one <see cref="T:Aspose.Imaging.Size" /> structure from the width and height of another <see cref="T:Aspose.Imaging.Size" /> structure.
            </summary>
      <param name="size1">The <see cref="T:Aspose.Imaging.Size" /> structure on the left side of the subtraction operator.</param>
      <param name="size2">The <see cref="T:Aspose.Imaging.Size" /> structure on the right side of the subtraction operator.</param>
      <returns>A <see cref="T:Aspose.Imaging.Size" /> structure that is the result of the subtraction operation.</returns>
    </member>
    <member name="M:Aspose.Imaging.Size.op_Equality(Aspose.Imaging.Size,Aspose.Imaging.Size)">
      <summary>
            Tests whether two <see cref="T:Aspose.Imaging.Size" /> structures are equal.
            </summary>
      <param name="size1">The <see cref="T:Aspose.Imaging.Size" /> structure on the left side of the equality operator.</param>
      <param name="size2">The <see cref="T:Aspose.Imaging.Size" /> structure on the right of the equality operator.</param>
      <returns>True if <paramref name="size1" /> and <paramref name="size2" /> have equal width and height; otherwise, false.</returns>
    </member>
    <member name="M:Aspose.Imaging.Size.op_Inequality(Aspose.Imaging.Size,Aspose.Imaging.Size)">
      <summary>
            Tests whether two <see cref="T:Aspose.Imaging.Size" /> structures are different.
            </summary>
      <param name="size1">The <see cref="T:Aspose.Imaging.Size" /> structure on the left of the inequality operator.</param>
      <param name="size2">The <see cref="T:Aspose.Imaging.Size" /> structure on the right of the inequality operator.</param>
      <returns>True if <paramref name="size1" /> and <paramref name="size2" /> differ either in width or height; false if <paramref name="size1" /> and <paramref name="size2" /> are equal.</returns>
    </member>
    <member name="M:Aspose.Imaging.Size.op_Explicit(Aspose.Imaging.Size)~Aspose.Imaging.Point">
      <summary>
            Converts the specified <see cref="T:Aspose.Imaging.Size" /> to a <see cref="T:Aspose.Imaging.Point" />.
            </summary>
      <param name="size">The <see cref="T:Aspose.Imaging.Size" /> to convert.</param>
      <returns>The <see cref="T:Aspose.Imaging.Point" /> structure to which this operator converts.</returns>
    </member>
    <member name="M:Aspose.Imaging.Size.Add(Aspose.Imaging.Size,Aspose.Imaging.Size)">
      <summary>
            Adds the width and height of one <see cref="T:Aspose.Imaging.Size" /> structure to the width and height of another <see cref="T:Aspose.Imaging.Size" /> structure.
            </summary>
      <param name="size1">The first <see cref="T:Aspose.Imaging.Size" /> to add.</param>
      <param name="size2">The second <see cref="T:Aspose.Imaging.Size" /> to add.</param>
      <returns>A <see cref="T:Aspose.Imaging.Size" /> structure that is the result of the addition operation.</returns>
    </member>
    <member name="M:Aspose.Imaging.Size.Ceiling(Aspose.Imaging.SizeF)">
      <summary>
            Converts the specified <see cref="T:Aspose.Imaging.SizeF" /> structure to a <see cref="T:Aspose.Imaging.Size" /> structure by rounding the values of the <see cref="T:Aspose.Imaging.Size" /> structure to the next higher integer values.
            </summary>
      <param name="size">The <see cref="T:Aspose.Imaging.SizeF" /> structure to convert.</param>
      <returns>The <see cref="T:Aspose.Imaging.Size" /> structure this method converts to.</returns>
    </member>
    <member name="M:Aspose.Imaging.Size.Subtract(Aspose.Imaging.Size,Aspose.Imaging.Size)">
      <summary>
            Subtracts the width and height of one <see cref="T:Aspose.Imaging.Size" /> structure from the width and height of another <see cref="T:Aspose.Imaging.Size" /> structure.
            </summary>
      <param name="size1">The <see cref="T:Aspose.Imaging.Size" /> structure on the left side of the subtraction operator.</param>
      <param name="size2">The <see cref="T:Aspose.Imaging.Size" /> structure on the right side of the subtraction operator.</param>
      <returns>The <see cref="T:Aspose.Imaging.Size" /> that is a result of the subtraction operation.</returns>
    </member>
    <member name="M:Aspose.Imaging.Size.Truncate(Aspose.Imaging.SizeF)">
      <summary>
            Converts the specified <see cref="T:Aspose.Imaging.SizeF" /> structure to a <see cref="T:Aspose.Imaging.Size" /> structure by truncating the values of the <see cref="T:Aspose.Imaging.SizeF" /> structure to the next lower integer values.
            </summary>
      <param name="size">The <see cref="T:Aspose.Imaging.SizeF" /> structure to convert.</param>
      <returns>The <see cref="T:Aspose.Imaging.Size" /> structure this method converts to.</returns>
    </member>
    <member name="M:Aspose.Imaging.Size.Round(Aspose.Imaging.SizeF)">
      <summary>
            Converts the specified <see cref="T:Aspose.Imaging.SizeF" /> structure to a <see cref="T:Aspose.Imaging.Size" /> structure by rounding the values of the <see cref="T:Aspose.Imaging.SizeF" /> structure to the nearest integer values.
            </summary>
      <param name="size">The <see cref="T:Aspose.Imaging.SizeF" /> structure to convert.</param>
      <returns>The <see cref="T:Aspose.Imaging.Size" /> structure this method converts to.</returns>
    </member>
    <member name="M:Aspose.Imaging.Size.Equals(System.Object)">
      <summary>
            Tests to see whether the specified object is a <see cref="T:Aspose.Imaging.Size" /> with the same dimensions as this <see cref="T:Aspose.Imaging.Size" />.
            </summary>
      <param name="obj">The <see cref="T:System.Object" /> to test.</param>
      <returns>True if <paramref name="obj" /> is a <see cref="T:Aspose.Imaging.Size" /> and has the same width and height as this <see cref="T:Aspose.Imaging.Size" />; otherwise, false.</returns>
    </member>
    <member name="M:Aspose.Imaging.Size.GetHashCode">
      <summary>
            Returns a hash code for this <see cref="T:Aspose.Imaging.Size" /> structure.
            </summary>
      <returns>An integer value that specifies a hash value for this <see cref="T:Aspose.Imaging.Size" /> structure.</returns>
    </member>
    <member name="M:Aspose.Imaging.Size.ToString">
      <summary>
            Creates a human-readable string that represents this <see cref="T:Aspose.Imaging.Size" />.
            </summary>
      <returns>A string that represents this <see cref="T:Aspose.Imaging.Size" />.</returns>
    </member>
    <member name="P:Aspose.Imaging.Size.Empty">
      <summary>
            Gets a new instance of the <see cref="T:Aspose.Imaging.Size" /> structure that has <see cref="P:Aspose.Imaging.Size.Width" /> and <see cref="P:Aspose.Imaging.Size.Height" /> values set to zero.
            </summary>
    </member>
    <member name="P:Aspose.Imaging.Size.IsEmpty">
      <summary>
            Gets a value indicating whether this <see cref="T:Aspose.Imaging.Size" /> has width and height of 0.
            </summary>
    </member>
    <member name="P:Aspose.Imaging.Size.Width">
      <summary>
            Gets or sets the horizontal component of this <see cref="T:Aspose.Imaging.Size" />.
            </summary>
    </member>
    <member name="P:Aspose.Imaging.Size.Height">
      <summary>
            Gets or sets the vertical component of this <see cref="T:Aspose.Imaging.Size" />.
            </summary>
    </member>
    <member name="T:Aspose.Imaging.SizeF">
      <summary>
            Stores an ordered pair of floating-point numbers, typically the width and height of a rectangle.
            </summary>
    </member>
    <member name="M:Aspose.Imaging.SizeF.#ctor(Aspose.Imaging.SizeF)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.SizeF" /> structure from the specified <see cref="T:Aspose.Imaging.SizeF" />.
            </summary>
      <param name="size">The <see cref="T:Aspose.Imaging.SizeF" /> from which to create the new <see cref="T:Aspose.Imaging.SizeF" />.</param>
    </member>
    <member name="M:Aspose.Imaging.SizeF.#ctor(Aspose.Imaging.PointF)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.SizeF" /> structure from the specified <see cref="T:Aspose.Imaging.PointF" />.
            </summary>
      <param name="point">The <see cref="T:Aspose.Imaging.PointF" /> from which to initialize this <see cref="T:Aspose.Imaging.SizeF" />.</param>
    </member>
    <member name="M:Aspose.Imaging.SizeF.#ctor(System.Single,System.Single)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.SizeF" /> structure from the specified dimensions.
            </summary>
      <param name="width">The width component of the new <see cref="T:Aspose.Imaging.SizeF" />.</param>
      <param name="height">The height component of the new <see cref="T:Aspose.Imaging.SizeF" />.</param>
    </member>
    <member name="M:Aspose.Imaging.SizeF.op_Addition(Aspose.Imaging.SizeF,Aspose.Imaging.SizeF)">
      <summary>
            Adds the width and height of one <see cref="T:Aspose.Imaging.SizeF" /> structure to the width and height of another <see cref="T:Aspose.Imaging.SizeF" /> structure.
            </summary>
      <param name="size1">The first <see cref="T:Aspose.Imaging.SizeF" /> to add.</param>
      <param name="size2">The second <see cref="T:Aspose.Imaging.SizeF" /> to add.</param>
      <returns>A <see cref="T:Aspose.Imaging.SizeF" /> structure that is the result of the addition operation.</returns>
    </member>
    <member name="M:Aspose.Imaging.SizeF.op_Subtraction(Aspose.Imaging.SizeF,Aspose.Imaging.SizeF)">
      <summary>
            Subtracts the width and height of one <see cref="T:Aspose.Imaging.SizeF" /> structure from the width and height of another <see cref="T:Aspose.Imaging.SizeF" /> structure.
            </summary>
      <param name="size1">The <see cref="T:Aspose.Imaging.SizeF" /> on the left side of the subtraction operator.</param>
      <param name="size2">The <see cref="T:Aspose.Imaging.SizeF" /> on the right side of the subtraction operator.</param>
      <returns>A <see cref="T:Aspose.Imaging.SizeF" /> that is the result of the subtraction operation.</returns>
    </member>
    <member name="M:Aspose.Imaging.SizeF.op_Equality(Aspose.Imaging.SizeF,Aspose.Imaging.SizeF)">
      <summary>
            Tests whether two <see cref="T:Aspose.Imaging.SizeF" /> structures are equal.
            </summary>
      <param name="size1">The <see cref="T:Aspose.Imaging.SizeF" /> structure on the left side of the equality operator.</param>
      <param name="size2">The <see cref="T:Aspose.Imaging.SizeF" /> structure on the right of the equality operator.</param>
      <returns>This operator returns true if <paramref name="size1" /> and <paramref name="size2" /> have equal width and height; otherwise, false.</returns>
    </member>
    <member name="M:Aspose.Imaging.SizeF.op_Inequality(Aspose.Imaging.SizeF,Aspose.Imaging.SizeF)">
      <summary>
            Tests whether two <see cref="T:Aspose.Imaging.SizeF" /> structures are different.
            </summary>
      <param name="size1">The <see cref="T:Aspose.Imaging.SizeF" /> structure on the left of the inequality operator.</param>
      <param name="size2">The <see cref="T:Aspose.Imaging.SizeF" /> structure on the right of the inequality operator.</param>
      <returns>This operator returns true if <paramref name="size1" /> and <paramref name="size2" /> differ either in width or height; false if <paramref name="size1" /> and <paramref name="size2" /> are equal.</returns>
    </member>
    <member name="M:Aspose.Imaging.SizeF.op_Explicit(Aspose.Imaging.SizeF)~Aspose.Imaging.PointF">
      <summary>
            Converts the specified <see cref="T:Aspose.Imaging.SizeF" /> to a <see cref="T:Aspose.Imaging.PointF" />.
            </summary>
      <param name="size">The <see cref="T:Aspose.Imaging.SizeF" /> structure to be converted</param>
      <returns>The <see cref="T:Aspose.Imaging.PointF" /> structure to which this operator converts.</returns>
    </member>
    <member name="M:Aspose.Imaging.SizeF.Add(Aspose.Imaging.SizeF,Aspose.Imaging.SizeF)">
      <summary>
            Adds the width and height of one <see cref="T:Aspose.Imaging.SizeF" /> structure to the width and height of another <see cref="T:Aspose.Imaging.SizeF" /> structure.
            </summary>
      <param name="size1">The first <see cref="T:Aspose.Imaging.SizeF" /> to add.</param>
      <param name="size2">The second <see cref="T:Aspose.Imaging.SizeF" /> to add.</param>
      <returns>A <see cref="T:Aspose.Imaging.SizeF" /> structure that is the result of the addition operation.</returns>
    </member>
    <member name="M:Aspose.Imaging.SizeF.Subtract(Aspose.Imaging.SizeF,Aspose.Imaging.SizeF)">
      <summary>
            Subtracts the width and height of one <see cref="T:Aspose.Imaging.SizeF" /> structure from the width and height of another <see cref="T:Aspose.Imaging.SizeF" /> structure.
            </summary>
      <param name="size1">The <see cref="T:Aspose.Imaging.SizeF" /> structure on the left side of the subtraction operator.</param>
      <param name="size2">The <see cref="T:Aspose.Imaging.SizeF" /> structure on the right side of the subtraction operator.</param>
      <returns>The <see cref="T:Aspose.Imaging.SizeF" /> that is a result of the subtraction operation.</returns>
    </member>
    <member name="M:Aspose.Imaging.SizeF.ToPointF">
      <summary>
            Converts a <see cref="T:Aspose.Imaging.SizeF" /> to a <see cref="T:Aspose.Imaging.PointF" />.
            </summary>
      <returns>Returns a <see cref="T:Aspose.Imaging.PointF" /> structure.</returns>
    </member>
    <member name="M:Aspose.Imaging.SizeF.ToSize">
      <summary>
            Converts a <see cref="T:Aspose.Imaging.SizeF" /> to a <see cref="T:Aspose.Imaging.Size" /> structure with truncated size values.
            </summary>
      <returns>Returns a <see cref="T:Aspose.Imaging.Size" /> structure.</returns>
    </member>
    <member name="M:Aspose.Imaging.SizeF.Equals(System.Object)">
      <summary>
            Tests to see whether the specified object is a <see cref="T:Aspose.Imaging.SizeF" /> with the same dimensions as this <see cref="T:Aspose.Imaging.SizeF" />.
            </summary>
      <param name="obj">The <see cref="T:System.Object" /> to test.</param>
      <returns>This method returns true if <paramref name="obj" /> is a <see cref="T:Aspose.Imaging.SizeF" /> and has the same width and height as this <see cref="T:Aspose.Imaging.SizeF" />; otherwise, false.</returns>
    </member>
    <member name="M:Aspose.Imaging.SizeF.GetHashCode">
      <summary>
            Returns a hash code for this <see cref="T:Aspose.Imaging.Size" /> structure.
            </summary>
      <returns>An integer value that specifies a hash value for this <see cref="T:Aspose.Imaging.Size" /> structure.</returns>
    </member>
    <member name="M:Aspose.Imaging.SizeF.ToString">
      <summary>
            Creates a human-readable string that represents this <see cref="T:Aspose.Imaging.SizeF" />.
            </summary>
      <returns>A string that represents this <see cref="T:Aspose.Imaging.SizeF" />.</returns>
    </member>
    <member name="P:Aspose.Imaging.SizeF.Empty">
      <summary>
            Gets a new instance of the <see cref="T:Aspose.Imaging.SizeF" /> structure that has <see cref="P:Aspose.Imaging.SizeF.Width" /> and <see cref="P:Aspose.Imaging.SizeF.Height" /> values set to zero.
            </summary>
    </member>
    <member name="P:Aspose.Imaging.SizeF.IsEmpty">
      <summary>
            Gets a value indicating whether this <see cref="T:Aspose.Imaging.SizeF" /> has zero width and height.
            </summary>
      <returns>This property returns true when this <see cref="T:Aspose.Imaging.SizeF" /> has both a width and height of zero; otherwise, false.</returns>
    </member>
    <member name="P:Aspose.Imaging.SizeF.Width">
      <summary>
            Gets or sets the horizontal component of this <see cref="T:Aspose.Imaging.SizeF" />.
            </summary>
      <returns>The horizontal component of this <see cref="T:Aspose.Imaging.SizeF" />, typically measured in pixels.</returns>
    </member>
    <member name="P:Aspose.Imaging.SizeF.Height">
      <summary>
            Gets or sets the vertical component of this <see cref="T:Aspose.Imaging.SizeF" />.
            </summary>
      <returns>The vertical component of this <see cref="T:Aspose.Imaging.SizeF" />, typically measured in pixels.</returns>
    </member>
    <member name="T:Aspose.Imaging.SmoothingMode">
      <summary>
            Specifies whether smoothing (antialiasing) is applied to lines and curves and the edges of filled areas.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.SmoothingMode.Invalid">
      <summary>
            Specifies an invalid mode.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.SmoothingMode.Default">
      <summary>
            Specifies no antialiasing.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.SmoothingMode.HighSpeed">
      <summary>
            Specifies no antialiasing.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.SmoothingMode.HighQuality">
      <summary>
            Specifies antialiased rendering.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.SmoothingMode.None">
      <summary>
            Specifies no antialiasing.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.SmoothingMode.AntiAlias">
      <summary>
            Specifies antialiased rendering.
            </summary>
    </member>
    <member name="T:Aspose.Imaging.Source">
      <summary>
            The source is used to contain all relevant information for an object pipe.
            </summary>
    </member>
    <member name="M:Aspose.Imaging.Source.GetStreamContainer">
      <summary>
            Gets the stream container.
            </summary>
      <returns>the stream container.</returns>
      <remarks>Use with caution. You will need to dispose the stream container after retrieval.</remarks>
    </member>
    <member name="T:Aspose.Imaging.Sources.FileCreateSource">
      <summary>
            Represents a file source for creation.
            </summary>
      <example>This example demonstrates the use of Font and SolidBrush class to draw strings on Image surface. The example creates a new Image and draw shapes using Figures and GraphicsPath<code>[C#]

//Creates an instance of BmpOptions and set its various properties
Aspose.Imaging.ImageOptions.BmpOptions bmpOptions = new Aspose.Imaging.ImageOptions.BmpOptions();
bmpOptions.BitsPerPixel = 24;

// create a new source based on memory stream.
bmpOptions.Source = new Aspose.Imaging.Sources.StreamSource(new System.IO.MemoryStream(), true);

//Creates an instance of Image
using (Aspose.Imaging.Image image = Aspose.Imaging.Image.Create(bmpOptions, 500, 500))
{
    //Creates and initialize an instance of Graphics class
    Aspose.Imaging.Graphics graphics = new Aspose.Imaging.Graphics(image);

    //Clears Graphics surface
    graphics.Clear(Color.Wheat);

    //Creates an instance of Font
    Aspose.Imaging.Font font = new Aspose.Imaging.Font("Times New Roman", 16);

    //Create an instance of SolidBrush having Red Color
    Aspose.Imaging.Brushes.SolidBrush brush = new Aspose.Imaging.Brushes.SolidBrush(Color.Red);

    //Draw a String
    graphics.DrawString("Created by Aspose.Imaging for .Net", font, brush, new PointF(100, 100));

    // save all changes
    image.Save();
}</code><code>[Visual Basic]

'Creates an instance of BmpOptions and set its various properties
Dim bmpOptions As Aspose.Imaging.ImageOptions.BmpOptions = New Aspose.Imaging.ImageOptions.BmpOptions()
bmpOptions.BitsPerPixel = 24

' create a new source based on memory stream.
bmpOptions.Source = New Aspose.Imaging.Sources.StreamSource(New System.IO.MemoryStream(), True)

'Creates an instance of Image
Using image As Aspose.Imaging.Image = Aspose.Imaging.Image.Create(bmpOptions, 500, 500)
'Creates and initialize an instance of Graphics class
Dim graphics As Aspose.Imaging.Graphics = New Aspose.Imaging.Graphics(image)

'Clears Graphics surface
    graphics.Clear(Color.Wheat)

'Creates an instance of Font
Dim font As Aspose.Imaging.Font = New Aspose.Imaging.Font("Times New Roman", 16)

'Create an instance of SolidBrush having Red Color
Dim brush As Aspose.Imaging.Brushes.SolidBrush = New Aspose.Imaging.Brushes.SolidBrush(Color.Red)

'Draw a String
    graphics.DrawString("Created by Aspose.Imaging for .Net", font, brush, New PointF(100, 100))

' save all changes
    image.Save()
End Using</code></example>
    </member>
    <member name="T:Aspose.Imaging.Sources.FileSource">
      <summary>
            Represents a file source which is capable of files manipulation.
            </summary>
    </member>
    <member name="P:Aspose.Imaging.Sources.FileSource.IsTemporal">
      <summary>
            Gets a value indicating whether file will be temporal.
            </summary>
      <value>
        <c>true</c> if file will be temporal; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="M:Aspose.Imaging.Sources.FileCreateSource.#ctor(System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.Sources.FileCreateSource" /> class.
            </summary>
      <param name="filePath">The file path to create.</param>
      <example>This example creates a new Image file in memory as specified by Source property of the BmpOptions instance.<code>[C#]

//Creates an instance of BmpOptions and set its various properties
Aspose.Imaging.ImageOptions.BmpOptions bmpOptions = new Aspose.Imaging.ImageOptions.BmpOptions();
bmpOptions.BitsPerPixel = 24;
using (MemoryStream ms = new MemoryStream())
{
    //Create an instance of StreamSource and assign it as Source for the instance of BmpOptions
    bmpOptions.Source = new Aspose.Imaging.Sources.StreamSource(ms, false);

    //Creates an instance of Image 
    using (Aspose.Imaging.Image image = Aspose.Imaging.Image.Create(bmpOptions, 500, 500))
    {
        //do some image processing

        // save all changes
        image.Save();
    }
}</code><code>[Visual Basic]

'Creates an instance of BmpOptions and set its various properties
Dim bmpOptions As Aspose.Imaging.ImageOptions.BmpOptions = New Aspose.Imaging.ImageOptions.BmpOptions()
bmpOptions.BitsPerPixel = 24
Using ms As MemoryStream = New MemoryStream()
'Create an instance of StreamSource and assign it as Source for the instance of BmpOptions
    bmpOptions.Source = New Aspose.Imaging.Sources.StreamSource(ms, False)

'Creates an instance of Image 
    Using image As Aspose.Imaging.Image = Aspose.Imaging.Image.Create(bmpOptions, 500, 500)
'do some image processing

' save all changes
        image.Save()
    End Using
End Using</code></example>
    </member>
    <member name="M:Aspose.Imaging.Sources.FileCreateSource.#ctor(System.String,System.Boolean)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.Sources.FileCreateSource" /> class.
            </summary>
      <param name="filePath">The file path to create.</param>
      <param name="isTemporal">If set to <c>true</c> the created file will be temporal.</param>
      <example>This example creates a new Image file in memory as specified by Source property of the BmpOptions instance.<code>[C#]

//Creates an instance of BmpOptions and set its various properties
Aspose.Imaging.ImageOptions.BmpOptions bmpOptions = new Aspose.Imaging.ImageOptions.BmpOptions();
bmpOptions.BitsPerPixel = 24;
using (MemoryStream ms = new MemoryStream())
{
    //Create an instance of StreamSource and assign it as Source for the instance of BmpOptions
    bmpOptions.Source = new Aspose.Imaging.Sources.StreamSource(ms, false);

    //Creates an instance of Image 
    using (Aspose.Imaging.Image image = Aspose.Imaging.Image.Create(bmpOptions, 500, 500))
    {
        //do some image processing

        // save all changes
        image.Save();
    }
}</code><code>[Visual Basic]

'Creates an instance of BmpOptions and set its various properties
Dim bmpOptions As Aspose.Imaging.ImageOptions.BmpOptions = New Aspose.Imaging.ImageOptions.BmpOptions()
bmpOptions.BitsPerPixel = 24
Using ms As MemoryStream = New MemoryStream()
'Create an instance of StreamSource and assign it as Source for the instance of BmpOptions
    bmpOptions.Source = New Aspose.Imaging.Sources.StreamSource(ms, False)

'Creates an instance of Image 
    Using image As Aspose.Imaging.Image = Aspose.Imaging.Image.Create(bmpOptions, 500, 500)
'do some image processing

' save all changes
        image.Save()
    End Using
End Using</code></example>
    </member>
    <member name="M:Aspose.Imaging.Sources.FileCreateSource.GetStreamContainer">
      <summary>
            Gets the stream container.
            </summary>
      <returns>the stream container.</returns>
      <remarks>Use with caution. You will need to dispose the stream container after retrieval.</remarks>
    </member>
    <member name="P:Aspose.Imaging.Sources.FileCreateSource.FilePath">
      <summary>
            Gets the file path to create.
            </summary>
      <value>The file path to create.</value>
    </member>
    <member name="P:Aspose.Imaging.Sources.FileCreateSource.IsTemporal">
      <summary>
            Gets a value indicating whether file will be temporal.
            </summary>
      <value>
        <c>true</c> if file will be temporal; otherwise, <c>false</c>.</value>
    </member>
    <member name="T:Aspose.Imaging.Sources.FileOpenSource">
      <summary>
            Represents a file source for opening.
            </summary>
    </member>
    <member name="M:Aspose.Imaging.Sources.FileOpenSource.#ctor(System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.Sources.FileOpenSource" /> class.
            </summary>
      <param name="filePath">The file path to open.</param>
    </member>
    <member name="M:Aspose.Imaging.Sources.FileOpenSource.GetStreamContainer">
      <summary>
            Gets the stream container.
            </summary>
      <returns>the stream container.</returns>
      <remarks>Use with caution. You will need to dispose the stream container after retrieval.</remarks>
    </member>
    <member name="P:Aspose.Imaging.Sources.FileOpenSource.FilePath">
      <summary>
            Gets the file path to open.
            </summary>
      <value>The file path to open.</value>
    </member>
    <member name="P:Aspose.Imaging.Sources.FileOpenSource.IsTemporal">
      <summary>
            Gets a value indicating whether file will be temporal.
            </summary>
      <value>
        <c>true</c> if file will be temporal; otherwise, <c>false</c>.</value>
    </member>
    <member name="T:Aspose.Imaging.Sources.NamespaceDoc">
      <summary>
            Namespace contains different stream sources which are suitable for input or output data flow.
            </summary>
    </member>
    <member name="T:Aspose.Imaging.Sources.StreamSource">
      <summary>
            Represents a stream source.
            </summary>
      <example>This example uses Graphics class to create primitive shapes on the Image surface. To demonstrate the operation, the example creates a new Image in PNG format and draw primitive shapes on Image surface using Draw methods exposed by Graphics class<code>[C#]

//Create an instance of memory stream
using (MemoryStream ms = new MemoryStream())
{
    //Create an instance of PngOptions and set its various properties
    Aspose.Imaging.ImageOptions.PngOptions pngOptions = new Aspose.Imaging.ImageOptions.PngOptions();

    //Set the Source for PngOptions
    pngOptions.Source = new Aspose.Imaging.Sources.StreamSource(ms);

    //Create an instance of Image 
    using (Aspose.Imaging.Image image = Aspose.Imaging.Image.Create(pngOptions, 500, 500))
    {
        //Create and initialize an instance of Graphics class
        Aspose.Imaging.Graphics graphics = new Aspose.Imaging.Graphics(image);

        //Clear Graphics surface
        graphics.Clear(Color.Wheat);

        //Draw an Arc by specifying the Pen object having Black color, 
        //a Rectangle surrounding the Arc, Start Angle and Sweep Angle
        graphics.DrawArc(new Pen(Color.Black, 2), new Rectangle(200, 200, 100, 200), 0, 300);

        //Draw a Bezier by specifying the Pen object having Blue color and co-ordinate Points.
        graphics.DrawBezier(new Pen(Color.Blue, 2), new Point(250, 100), new Point(300, 30), new Point(450, 100), new Point(235, 25));

        //Draw a Curve by specifying the Pen object having Green color and an array of Points
        graphics.DrawCurve(new Pen(Color.Green, 2), new[] { new Point(100, 200), new Point(100, 350), new Point(200, 450) });

        //Draw an Ellipse using the Pen object and a surrounding Rectangle
        graphics.DrawEllipse(new Pen(Color.Yellow, 2), new Rectangle(300, 300, 100, 100));

        //Draw a Line 
        graphics.DrawLine(new Pen(Color.Violet, 2), new Point(100, 100), new Point(200, 200));

        //Draw a Pie segment
        graphics.DrawPie(new Pen(Color.Silver, 2), new Rectangle(new Point(200, 20), new Size(200, 200)), 0, 45);

        //Draw a Polygon by specifying the Pen object having Red color and an array of Points
        graphics.DrawPolygon(new Pen(Color.Red, 2), new[] { new Point(20, 100), new Point(20, 200), new Point(220, 20) });

        //Draw a Rectangle
        graphics.DrawRectangle(new Pen(Color.Orange, 2), new Rectangle(new Point(250, 250), new Size(100, 100)));

        //Create a SolidBrush object and set its various properties
        Aspose.Imaging.Brushes.SolidBrush brush = new Aspose.Imaging.Brushes.SolidBrush();
        brush.Color = Color.Purple;
        brush.Opacity = 100;

        //Draw a String using the SolidBrush object and Font, at specific Point
        graphics.DrawString("This image is created by Aspose.Imaging API", new Font("Times New Roman", 16), brush, new PointF(50, 400));

        // save all changes.
        image.Save();
    }
}</code><code>[Visual Basic]

'Create an instance of memory stream
Using ms As MemoryStream = New MemoryStream()
'Create an instance of PngOptions and set its various properties
Dim pngOptions As Aspose.Imaging.ImageOptions.PngOptions = New Aspose.Imaging.ImageOptions.PngOptions()

'Set the Source for PngOptions
    pngOptions.Source = New Aspose.Imaging.Sources.StreamSource(ms)

'Create an instance of Image 
    Using image As Aspose.Imaging.Image = Aspose.Imaging.Image.Create(pngOptions, 500, 500)
'Create and initialize an instance of Graphics class
Dim graphics As Aspose.Imaging.Graphics = New Aspose.Imaging.Graphics(image)

'Clear Graphics surface
        graphics.Clear(Color.Wheat)

'Draw an Arc by specifying the Pen object having Black color, 
'a Rectangle surrounding the Arc, Start Angle and Sweep Angle
        graphics.DrawArc(New Pen(Color.Black, 2), New Rectangle(200, 200, 100, 200), 0, 300)

'Draw a Bezier by specifying the Pen object having Blue color and co-ordinate Points.
        graphics.DrawBezier(New Pen(Color.Blue, 2), New Point(250, 100), New Point(300, 30), New Point(450, 100), New Point(235, 25))

'Draw a Curve by specifying the Pen object having Green color and an array of Points
        graphics.DrawCurve(New Pen(Color.Green, 2), New() { New Point(100, 200), New Point(100, 350), New Point(200, 450) })

'Draw an Ellipse using the Pen object and a surrounding Rectangle
        graphics.DrawEllipse(New Pen(Color.Yellow, 2), New Rectangle(300, 300, 100, 100))

'Draw a Line 
        graphics.DrawLine(New Pen(Color.Violet, 2), New Point(100, 100), New Point(200, 200))

'Draw a Pie segment
        graphics.DrawPie(New Pen(Color.Silver, 2), New Rectangle(New Point(200, 20), New Size(200, 200)), 0, 45)

'Draw a Polygon by specifying the Pen object having Red color and an array of Points
        graphics.DrawPolygon(New Pen(Color.Red, 2), New() { New Point(20, 100), New Point(20, 200), New Point(220, 20) })

'Draw a Rectangle
        graphics.DrawRectangle(New Pen(Color.Orange, 2), New Rectangle(New Point(250, 250), New Size(100, 100)))

'Create a SolidBrush object and set its various properties
Dim brush As Aspose.Imaging.Brushes.SolidBrush = New Aspose.Imaging.Brushes.SolidBrush()
        brush.Color = Color.Purple
        brush.Opacity = 100

'Draw a String using the SolidBrush object and Font, at specific Point
        graphics.DrawString("This image is created by Aspose.Imaging API", New Font("Times New Roman", 16), brush, New PointF(50, 400))

' save all changes.
        image.Save()
    End Using
End Using</code></example>
    </member>
    <member name="M:Aspose.Imaging.Sources.StreamSource.#ctor(System.IO.Stream)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.Sources.StreamSource" /> class.
            </summary>
      <param name="stream">The stream to open.</param>
      <example>This example shows how to Loads Pixel information in an Array of Type Color, manipulates the array and set it back to the image. To perform these operations, this example creates a new Image file (in GIF format) uisng MemoryStream object.<code>[C#]

//Create an instance of MemoryStream
using (System.IO.MemoryStream stream = new System.IO.MemoryStream())
{
    //Create an instance of GifOptions and set its various properties including the Source property
    Aspose.Imaging.ImageOptions.GifOptions gifOptions = new Aspose.Imaging.ImageOptions.GifOptions();
    gifOptions.Source = new Aspose.Imaging.Sources.StreamSource(stream);

    //Create an instance of Image
    using (Aspose.Imaging.RasterImage image = (Aspose.Imaging.RasterImage)Aspose.Imaging.Image.Create(gifOptions, 500, 500))
    {
        //Get the pixels of image by specifying the area as image boundary
        Aspose.Imaging.Color[] pixels = image.LoadPixels(image.Bounds);

        //Loop over the Array and sets color of alrenative indexed pixel
        for (int index = 0; index &lt; pixels.Length; index++)
        {
            if (index % 2 == 0)
            {
                //Set the indexed pixel color to yellow
                pixels[index] = Aspose.Imaging.Color.Yellow;
            }
            else
            {
                //Set the indexed pixel color to blue
                pixels[index] = Aspose.Imaging.Color.Blue;
            }
        }

        //Apply the pixel changes to the image
        image.SavePixels(image.Bounds, pixels);

        // save all changes.
        image.Save();
    }
}</code><code>[Visual Basic]

'Create an instance of MemoryStream
Using stream As System.IO.MemoryStream = New System.IO.MemoryStream()
'Create an instance of GifOptions and set its various properties including the Source property
Dim gifOptions As Aspose.Imaging.ImageOptions.GifOptions = New Aspose.Imaging.ImageOptions.GifOptions()
    gifOptions.Source = New Aspose.Imaging.Sources.StreamSource(stream)

'Create an instance of Image
    Using image As Aspose.Imaging.RasterImage = CType(Aspose.Imaging.Image.Create(gifOptions, 500, 500), Aspose.Imaging.RasterImage)
'Get the pixels of image by specifying the area as image boundary
Dim pixels As Aspose.Imaging.Color() = image.LoadPixels(image.Bounds)

'Loop over the Array and sets color of alrenative indexed pixel
Dim index As Integer = 0
        Do While index &lt; pixels.Length
            If index Mod 2 = 0 Then
'Set the indexed pixel color to yellow
                pixels(index) = Aspose.Imaging.Color.Yellow
            Else
'Set the indexed pixel color to blue
                pixels(index) = Aspose.Imaging.Color.Blue
            End If
            index += 1
        Loop

'Apply the pixel changes to the image
        image.SavePixels(image.Bounds, pixels)

' save all changes.
        image.Save()
    End Using
End Using</code></example>
    </member>
    <member name="M:Aspose.Imaging.Sources.StreamSource.#ctor(System.IO.Stream,System.Boolean)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.Sources.StreamSource" /> class.
            </summary>
      <param name="stream">The stream to open.</param>
      <param name="disposeStream">if set to <c>true</c> the stream will be disposed.</param>
      <example>This example demonstrates the use of System.IO.Stream to Create a new Image file (a JPEG type)<code>[C#]

//Define the source property for the instance of JpegOptions
//Second boolean parameter determines if the Stream is disposed once get out of scope
jpegOptions.Source = new Aspose.Imaging.Sources.StreamSource(new MemoryStream(), true);

//Creates an instance of Image and call Create method with JpegOptions as parameter to initialize the Image object   
using (Aspose.Imaging.Image image = Aspose.Imaging.Image.Create(jpegOptions, 500, 500))
{
    //do some image processing
}</code><code>[Visual Basic]

'Define the source property for the instance of JpegOptions
'Second boolean parameter determines if the Stream is disposed once get out of scope
jpegOptions.Source = New Aspose.Imaging.Sources.StreamSource(New MemoryStream(), True)

'Creates an instance of Image and call Create method with JpegOptions as parameter to initialize the Image object   
Using image As Aspose.Imaging.Image = Aspose.Imaging.Image.Create(jpegOptions, 500, 500)
'do some image processing
End Using</code></example>
    </member>
    <member name="M:Aspose.Imaging.Sources.StreamSource.GetStreamContainer">
      <summary>
            Gets the stream container.
            </summary>
      <returns>the stream container.</returns>
      <remarks>Use with caution. You will need to dispose the stream container after retrieval.</remarks>
    </member>
    <member name="P:Aspose.Imaging.Sources.StreamSource.Stream">
      <summary>
            Gets the stream.
            </summary>
      <value>The stream.</value>
    </member>
    <member name="P:Aspose.Imaging.Sources.StreamSource.DisposeStream">
      <summary>
            Gets a value indicating whether stream should be disposed whenever container gets disposed.
            </summary>
      <value>
        <c>true</c> if stream should be disposed; otherwise, <c>false</c>.</value>
    </member>
    <member name="T:Aspose.Imaging.StringAlignment">
      <summary>
            Specifies the alignment of a text string relative to its layout rectangle.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.StringAlignment.Near">
      <summary>
            Specifies the text be aligned near the layout. In a left-to-right layout, the near position is left. In a right-to-left layout, the near position is right.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.StringAlignment.Center">
      <summary>
            Specifies that text is aligned in the center of the layout rectangle.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.StringAlignment.Far">
      <summary>
            Specifies that text is aligned far from the origin position of the layout rectangle. In a left-to-right layout, the far position is right. In a right-to-left layout, the far position is left.
            </summary>
    </member>
    <member name="T:Aspose.Imaging.StringDigitSubstitute">
      <summary>
            The enumeration specifies how to substitute digits in a string according to a user's locale or language.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.StringDigitSubstitute.User">
      <summary>
            Specifies a user-defined substitution scheme.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.StringDigitSubstitute.None">
      <summary>
            Specifies to disable substitutions.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.StringDigitSubstitute.National">
      <summary>
            Specifies substitution digits that correspond with the official national language of the user's locale.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.StringDigitSubstitute.Traditional">
      <summary>
            Specifies substitution digits that correspond with the user's native script or language, which may be different from the official national language of the user's locale.
            </summary>
    </member>
    <member name="T:Aspose.Imaging.StringFormat">
      <summary>
            Encapsulates text layout information (such as alignment, orientation and tab stops) display manipulations (such as ellipsis insertion and national digit substitution) and OpenType features. This class cannot be inherited.
            </summary>
    </member>
    <member name="M:Aspose.Imaging.StringFormat.#ctor">
      <summary>
            Initializes a new <see cref="T:Aspose.Imaging.StringFormat" /> object.
            </summary>
    </member>
    <member name="M:Aspose.Imaging.StringFormat.#ctor(Aspose.Imaging.StringFormatFlags)">
      <summary>
            Initializes a new <see cref="T:Aspose.Imaging.StringFormat" /> object with the specified <see cref="T:Aspose.Imaging.StringFormatFlags" /> enumeration and language.
            </summary>
      <param name="options">The <see cref="T:Aspose.Imaging.StringFormatFlags" /> enumeration for the new <see cref="T:Aspose.Imaging.StringFormat" /> object.</param>
    </member>
    <member name="M:Aspose.Imaging.StringFormat.#ctor(Aspose.Imaging.StringFormat)">
      <summary>
            Initializes a new <see cref="T:Aspose.Imaging.StringFormat" /> object from the specified existing <see cref="T:Aspose.Imaging.StringFormat" /> object.
            </summary>
      <param name="format">The <see cref="T:Aspose.Imaging.StringFormat" /> object from which to initialize the new <see cref="T:Aspose.Imaging.StringFormat" /> object.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="format" /> is null.</exception>
    </member>
    <member name="M:Aspose.Imaging.StringFormat.DeepClone">
      <summary>
            Creates a deep clone of this <see cref="T:Aspose.Imaging.StringFormat" /> object.
            </summary>
      <returns>
            The deep clone of the current <see cref="T:Aspose.Imaging.StringFormat" />.
            </returns>
    </member>
    <member name="M:Aspose.Imaging.StringFormat.SetTabStops(System.Single,System.Single[])">
      <summary>
            Sets tab stops for this <see cref="T:Aspose.Imaging.StringFormat" /> object.
            </summary>
      <param name="firstTabOffset">The number of spaces between the beginning of a line of text and the first tab stop.</param>
      <param name="tabStops">An array of distances between tab stops in the units specified by the <see cref="P:Aspose.Imaging.Graphics.PageUnit" /> property.</param>
    </member>
    <member name="M:Aspose.Imaging.StringFormat.ToString">
      <summary>
            Converts this <see cref="T:Aspose.Imaging.StringFormat" /> object to a human-readable string.
            </summary>
      <returns>
            A string representation of this <see cref="T:Aspose.Imaging.StringFormat" /> object.
            </returns>
    </member>
    <member name="P:Aspose.Imaging.StringFormat.GenericDefault">
      <summary>
            Gets a generic default <see cref="T:Aspose.Imaging.StringFormat" /> object.
            </summary>
      <value>The generic default <see cref="T:Aspose.Imaging.StringFormat" /> object.</value>
    </member>
    <member name="P:Aspose.Imaging.StringFormat.GenericTypographic">
      <summary>
            Gets a generic typographic <see cref="T:Aspose.Imaging.StringFormat" /> object.
            </summary>
      <value>A generic typographic <see cref="T:Aspose.Imaging.StringFormat" /> object.</value>
    </member>
    <member name="P:Aspose.Imaging.StringFormat.FormatFlags">
      <summary>
            Gets or sets a <see cref="T:Aspose.Imaging.StringFormatFlags" /> enumeration that contains formatting information.
            </summary>
      <value>A <see cref="T:Aspose.Imaging.StringFormatFlags" /> enumeration that contains formatting information.</value>
    </member>
    <member name="P:Aspose.Imaging.StringFormat.Alignment">
      <summary>
            Gets or sets text alignment information on the vertical plane.
            </summary>
      <value>A <see cref="T:Aspose.Imaging.StringAlignment" /> enumeration that specifies text alignment information.</value>
    </member>
    <member name="P:Aspose.Imaging.StringFormat.LineAlignment">
      <summary>
            Gets or sets the line alignment on the horizontal plane.
            </summary>
      <value>A <see cref="T:Aspose.Imaging.StringAlignment" /> enumeration that represents the line alignment.</value>
    </member>
    <member name="P:Aspose.Imaging.StringFormat.HotkeyPrefix">
      <summary>
            Gets or sets the <see cref="T:Aspose.Imaging.HotkeyPrefix" /> object for this <see cref="T:Aspose.Imaging.StringFormat" /> object.
            </summary>
      <value>The <see cref="T:Aspose.Imaging.HotkeyPrefix" /> object for this <see cref="T:Aspose.Imaging.StringFormat" /> object, the default is <see cref="F:Aspose.Imaging.HotkeyPrefix.None" />.</value>
    </member>
    <member name="P:Aspose.Imaging.StringFormat.Trimming">
      <summary>
            Gets or sets the <see cref="T:Aspose.Imaging.StringTrimming" /> enumeration for this <see cref="T:Aspose.Imaging.StringFormat" /> object.
            </summary>
      <value>A <see cref="T:Aspose.Imaging.StringTrimming" /> enumeration that indicates how text drawn with this <see cref="T:Aspose.Imaging.StringFormat" /> object is trimmed when it exceeds the edges of the layout rectangle.</value>
    </member>
    <member name="P:Aspose.Imaging.StringFormat.DigitSubstitutionMethod">
      <summary>
            Gets or sets the method to be used for digit substitution.
            </summary>
      <value>A <see cref="T:Aspose.Imaging.StringDigitSubstitute" /> enumeration value that specifies how to substitute characters in a string that cannot be displayed because they are not supported by the current font.</value>
      <remarks>The setter is introduced for the obsolete method SetDigitSubstitution.</remarks>
    </member>
    <member name="P:Aspose.Imaging.StringFormat.DigitSubstitutionLanguage">
      <summary>
            Gets or sets the language that is used when local digits are substituted for western digits.
            </summary>
      <value>A National Language Support (NLS) language identifier that identifies the language that will be used when local digits are substituted for western digits.
            You can pass the <see cref="P:System.Globalization.CultureInfo.LCID" /> property of a <see cref="T:System.Globalization.CultureInfo" /> object as the NLS language identifier.
            For example, suppose you create a <see cref="T:System.Globalization.CultureInfo" /> object by passing the string "ar-EG" to a <see cref="T:System.Globalization.CultureInfo" /> constructor.
            If you pass the <see cref="P:System.Globalization.CultureInfo.LCID" /> property of that <see cref="T:System.Globalization.CultureInfo" /> object along with.
            <see cref="F:Aspose.Imaging.StringDigitSubstitute.Traditional" /> to the <see cref="M:Aspose.Imaging.StringFormat.SetDigitSubstitution(System.Int32,Aspose.Imaging.StringDigitSubstitute)" /> method,
            then Arabic-Indic digits will be substituted for western digits at display time.</value>
      <remarks>The setter is introduced for the obsolete method SetDigitSubstitution.</remarks>
    </member>
    <member name="P:Aspose.Imaging.StringFormat.FirstTabOffset">
      <summary>
            Gets the number of spaces between the beginning of a line of text and the first tab stop.
            </summary>
      <value>The first tab offset.</value>
      <remarks>The property is introduced for removed method GetTabStops.</remarks>
    </member>
    <member name="P:Aspose.Imaging.StringFormat.TabStops">
      <summary>
            Gets an array of distances between tab stops in the units specified by the <see cref="P:Aspose.Imaging.Graphics.PageUnit" /> property.
            </summary>
      <value>The tab stops.</value>
      <remarks>The property is introduced for removed method GetTabStops.</remarks>
    </member>
    <member name="T:Aspose.Imaging.StringFormatFlags">
      <summary>
            Specifies the display and layout information for text strings.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.StringFormatFlags.DirectionRightToLeft">
      <summary>
            Text is displayed from right to left.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.StringFormatFlags.DirectionVertical">
      <summary>
            Text is vertically aligned.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.StringFormatFlags.FitBlackBox">
      <summary>
            Parts of characters are allowed to overhang the string's layout rectangle. By default, characters are repositioned to avoid any overhang.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.StringFormatFlags.DisplayFormatControl">
      <summary>
            Control characters such as the left-to-right mark are shown in the output with a representative glyph.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.StringFormatFlags.NoFontFallback">
      <summary>
            Fallback to alternate fonts for characters not supported in the requested font is disabled. Any missing characters are displayed with the fonts missing glyph, usually an open square.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.StringFormatFlags.MeasureTrailingSpaces">
      <summary>
            Includes the trailing space at the end of each line. By default the boundary rectangle returned by the MeasureString method excludes the space at the end of each line. Set this flag to include that space in measurement.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.StringFormatFlags.NoWrap">
      <summary>
            Text wrapping between lines when formatting within a rectangle is disabled. This flag is implied when a point is passed instead of a rectangle, or when the specified rectangle has a zero line length.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.StringFormatFlags.LineLimit">
      <summary>
            Only entire lines are laid out in the formatting rectangle. By default layout continues until the end of the text, or until no more lines are visible as a result of clipping, whichever comes first.
            Note that the default settings allow the last line to be partially obscured by a formatting rectangle that is not a whole multiple of the line height. To ensure that only whole lines are seen,
            specify this value and be careful to provide a formatting rectangle at least as tall as the height of one line.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.StringFormatFlags.NoClip">
      <summary>
            Overhanging parts of glyphs, and unwrapped text reaching outside the formatting rectangle are allowed to show. By default all text and glyph parts reaching outside the formatting rectangle are clipped.
            </summary>
    </member>
    <member name="T:Aspose.Imaging.StringTrimming">
      <summary>
            Specifies how to trim characters from a string that does not completely fit into a layout shape.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.StringTrimming.None">
      <summary>
            Specifies no trimming.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.StringTrimming.Character">
      <summary>
            Specifies that the text is trimmed to the nearest character.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.StringTrimming.Word">
      <summary>
            Specifies that text is trimmed to the nearest word.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.StringTrimming.EllipsisCharacter">
      <summary>
            Specifies that the text is trimmed to the nearest character, and an ellipsis is inserted at the end of a trimmed line.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.StringTrimming.EllipsisWord">
      <summary>
            Specifies that text is trimmed to the nearest word, and an ellipsis is inserted at the end of a trimmed line.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.StringTrimming.EllipsisPath">
      <summary>
            The center is removed from trimmed lines and replaced by an ellipsis. The algorithm keeps as much of the last slash-delimited segment of the line as possible.
            </summary>
    </member>
    <member name="T:Aspose.Imaging.TextRenderingHint">
      <summary>
            Specifies the quality of text rendering.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.TextRenderingHint.SystemDefault">
      <summary>
            Each character is drawn using its glyph bitmap, with the system default rendering hint. The text will be drawn using whatever font-smoothing settings the user has selected for the system.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.TextRenderingHint.SingleBitPerPixelGridFit">
      <summary>
            Each character is drawn using its glyph bitmap. Hinting is used to improve character appearance on stems and curvature.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.TextRenderingHint.SingleBitPerPixel">
      <summary>
            Each character is drawn using its glyph bitmap. Hinting is not used.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.TextRenderingHint.AntiAliasGridFit">
      <summary>
            Each character is drawn using its antialiased glyph bitmap with hinting. Much better quality due to antialiasing, but at a higher performance cost.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.TextRenderingHint.AntiAlias">
      <summary>
            Each character is drawn using its antialiased glyph bitmap without hinting. Better quality due to antialiasing. Stem width differences may be noticeable because hinting is turned off.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.TextRenderingHint.ClearTypeGridFit">
      <summary>
            Each character is drawn using its glyph ClearType bitmap with hinting. The highest quality setting. Used to take advantage of ClearType font features.
            </summary>
    </member>
    <member name="T:Aspose.Imaging.WarpMode">
      <summary>
            Specifies the type of warp transformation applied.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.WarpMode.Perspective">
      <summary>
            Specifies a perspective warp.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.WarpMode.Bilinear">
      <summary>
            Specifies a bilinear warp.
            </summary>
    </member>
    <member name="T:Aspose.Imaging.RotateFlipType">
      <summary>
            Specifies how much an image is rotated and the axis used to flip the image.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.RotateFlipType.RotateNoneFlipNone">
      <summary>
            Specifies no clockwise rotation and no flipping.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.RotateFlipType.Rotate90FlipNone">
      <summary>
            Specifies how much an image is rotated and the axis used to flip the image.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.RotateFlipType.Rotate180FlipNone">
      <summary>
            Specifies a 180-degree clockwise rotation without flipping. 
            </summary>
    </member>
    <member name="F:Aspose.Imaging.RotateFlipType.Rotate270FlipNone">
      <summary>
            Specifies a 270-degree clockwise rotation without flipping. 
            </summary>
    </member>
    <member name="F:Aspose.Imaging.RotateFlipType.RotateNoneFlipX">
      <summary>
            Specifies no clockwise rotation followed by a horizontal flip. 
            </summary>
    </member>
    <member name="F:Aspose.Imaging.RotateFlipType.Rotate90FlipX">
      <summary>
            Specifies a 90-degree clockwise rotation followed by a horizontal flip. 
            </summary>
    </member>
    <member name="F:Aspose.Imaging.RotateFlipType.Rotate180FlipX">
      <summary>
            Specifies a 180-degree clockwise rotation followed by a horizontal flip. 
            </summary>
    </member>
    <member name="F:Aspose.Imaging.RotateFlipType.Rotate270FlipX">
      <summary>
            Specifies a 270-degree clockwise rotation followed by a horizontal flip. 
            </summary>
    </member>
    <member name="F:Aspose.Imaging.RotateFlipType.RotateNoneFlipY">
      <summary>
            Specifies no clockwise rotation followed by a vertical flip. 
            </summary>
    </member>
    <member name="F:Aspose.Imaging.RotateFlipType.Rotate90FlipY">
      <summary>
            Specifies a 90-degree clockwise rotation followed by a vertical flip. 
            </summary>
    </member>
    <member name="F:Aspose.Imaging.RotateFlipType.Rotate180FlipY">
      <summary>
            Specifies a 180-degree clockwise rotation followed by a vertical flip. 
            </summary>
    </member>
    <member name="F:Aspose.Imaging.RotateFlipType.Rotate270FlipY">
      <summary>
            Specifies a 270-degree clockwise rotation followed by a vertical flip. 
            </summary>
    </member>
    <member name="F:Aspose.Imaging.RotateFlipType.RotateNoneFlipXY">
      <summary>
            Specifies no clockwise rotation followed by a horizontal and vertical flip. 
            </summary>
    </member>
    <member name="F:Aspose.Imaging.RotateFlipType.Rotate90FlipXY">
      <summary>
            Specifies a 90-degree clockwise rotation followed by a horizontal and vertical flip. 
            </summary>
    </member>
    <member name="F:Aspose.Imaging.RotateFlipType.Rotate180FlipXY">
      <summary>
            Specifies a 180-degree clockwise rotation followed by a horizontal and vertical flip.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.RotateFlipType.Rotate270FlipXY">
      <summary>
            Specifies a 270-degree clockwise rotation followed by a horizontal and vertical flip.
            </summary>
    </member>
    <member name="T:Aspose.Imaging.WrapMode">
      <summary>
            Specifies how a texture or gradient is tiled when it is smaller than the area being filled.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.WrapMode.Tile">
      <summary>
            Tiles the gradient or texture.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.WrapMode.TileFlipX">
      <summary>
            Reverses the texture or gradient horizontally and then tiles the texture or gradient.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.WrapMode.TileFlipY">
      <summary>
            Reverses the texture or gradient vertically and then tiles the texture or gradient.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.WrapMode.TileFlipXY">
      <summary>
            Reverses the texture or gradient horizontally and vertically and then tiles the texture or gradient.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.WrapMode.Clamp">
      <summary>
            The texture or gradient is not tiled.
            </summary>
    </member>
    <member name="T:Aspose.Imaging.FileFormats.Tiff.Enums.Group3Options">
      <summary>
            Options for CCITT Group 3/4 fax encoding.<br />
            Possible values for GROUP3OPTIONS / TiffTag.T4OPTIONS and
            TiffTag.GROUP4OPTIONS / TiffTag.T6OPTIONS tags.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Tiff.Enums.Group3Options.Encoding1D">
      <summary>
            1-dimensional coding. (default)
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Tiff.Enums.Group3Options.Encoding2D">
      <summary>
            2-dimensional coding.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Tiff.Enums.Group3Options.Uncompressed">
      <summary>
            Data not compressed.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Tiff.Enums.Group3Options.FillBits">
      <summary>
            Fill to byte boundary.
            </summary>
    </member>
    <member name="T:Aspose.Imaging.FileFormats.Tiff.Enums.TiffCompressions">
      <summary>
            Holds compression types
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Tiff.Enums.TiffCompressions.None">
      <summary>
              Dump mode.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Tiff.Enums.TiffCompressions.CcittRle">
      <summary>
              CCITT modified Huffman RLE.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Tiff.Enums.TiffCompressions.CcittFax3">
      <summary>
              CCITT Group 3 fax encoding.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Tiff.Enums.TiffCompressions.CcittFax4">
      <summary>
              CCITT Group 4 fax encoding.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Tiff.Enums.TiffCompressions.Lzw">
      <summary>
              Lempel-Ziv &amp; Welch.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Tiff.Enums.TiffCompressions.Ojpeg">
      <summary>
              Original JPEG / Old-style JPEG (6.0).
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Tiff.Enums.TiffCompressions.Jpeg">
      <summary>
              JPEG DCT compression. Introduced post TIFF rev 6.0.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Tiff.Enums.TiffCompressions.Next">
      <summary>
              NeXT 2-bit RLE.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Tiff.Enums.TiffCompressions.CcittRleW">
      <summary>
              CCITT RLE.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Tiff.Enums.TiffCompressions.Packbits">
      <summary>
              Macintosh RLE.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Tiff.Enums.TiffCompressions.Thunderscan">
      <summary>
              ThunderScan RLE.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Tiff.Enums.TiffCompressions.It8Ctpad">
      <summary>
              IT8 CT w/padding. Reserved for ANSI IT8 TIFF/IT.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Tiff.Enums.TiffCompressions.It8Lw">
      <summary>
              IT8 Linework RLE. Reserved for ANSI IT8 TIFF/IT.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Tiff.Enums.TiffCompressions.It8Mp">
      <summary>
              IT8 Monochrome picture. Reserved for ANSI IT8 TIFF/IT.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Tiff.Enums.TiffCompressions.It8Bl">
      <summary>
              IT8 Binary line art. Reserved for ANSI IT8 TIFF/IT.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Tiff.Enums.TiffCompressions.PixarFilm">
      <summary>
              Pixar companded 10bit LZW. Reserved for Pixar.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Tiff.Enums.TiffCompressions.PixarLog">
      <summary>
              Pixar companded 11bit ZIP. Reserved for Pixar.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Tiff.Enums.TiffCompressions.Deflate">
      <summary>
              Deflate compression.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Tiff.Enums.TiffCompressions.AdobeDeflate">
      <summary>
              Deflate compression, as recognized by Adobe.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Tiff.Enums.TiffCompressions.Dcs">
      <summary>
              Kodak DCS encoding.
              Reserved for Oceana Matrix 
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Tiff.Enums.TiffCompressions.Jbig">
      <summary>
             ISO Jpeg big.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Tiff.Enums.TiffCompressions.Sgilog">
      <summary>
              SGI Log Luminance RLE.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Tiff.Enums.TiffCompressions.Sgilog24">
      <summary>
              SGI Log 24-bit packed.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Tiff.Enums.TiffCompressions.Jp2000">
      <summary>
              Leadtools JPEG2000.
            </summary>
    </member>
    <member name="T:Aspose.Imaging.FileFormats.Tiff.Enums.TiffDataTypes">
      <summary>
            The tiff data type enum.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Tiff.Enums.TiffDataTypes.Byte">
      <summary>
              8-bit unsigned integer.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Tiff.Enums.TiffDataTypes.Ascii">
      <summary>
              8-bit bytes with last byte <c>null</c>.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Tiff.Enums.TiffDataTypes.Short">
      <summary>
              16-bit unsigned integer.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Tiff.Enums.TiffDataTypes.Long">
      <summary>
              32-bit unsigned integer.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Tiff.Enums.TiffDataTypes.Rational">
      <summary>
              64-bit unsigned fraction.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Tiff.Enums.TiffDataTypes.Sbyte">
      <summary>
              8-bit signed integer.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Tiff.Enums.TiffDataTypes.Undefined">
      <summary>
              8-bit untyped data.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Tiff.Enums.TiffDataTypes.Sshort">
      <summary>
              16-bit signed integer.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Tiff.Enums.TiffDataTypes.Slong">
      <summary>
              32-bit signed integer.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Tiff.Enums.TiffDataTypes.Srational">
      <summary>
              64-bit signed fraction.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Tiff.Enums.TiffDataTypes.Float">
      <summary>
              32-bit IEEE floating point.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Tiff.Enums.TiffDataTypes.Double">
      <summary>
              64-bit IEEE floating point.
            </summary>
    </member>
    <member name="T:Aspose.Imaging.FileFormats.Tiff.Enums.TiffFillOrders">
      <summary>
            Data order within a byte.<br />
              Possible values for FILLORDER tag.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Tiff.Enums.TiffFillOrders.Msb2Lsb">
      <summary>
              Most significant -&gt; least.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Tiff.Enums.TiffFillOrders.Lsb2Msb">
      <summary>
              Least significant -&gt; most.
            </summary>
    </member>
    <member name="T:Aspose.Imaging.FileFormats.Tiff.Enums.TiffNewSubFileTypes">
      <summary>
            The tiff new sub file type enum.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Tiff.Enums.TiffNewSubFileTypes.FileTypeDefault">
      <summary>
            The default filetype.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Tiff.Enums.TiffNewSubFileTypes.FileTypeReducedImage">
      <summary>
            The reduced image filetype.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Tiff.Enums.TiffNewSubFileTypes.FileTypePage">
      <summary>
            The page filetype.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Tiff.Enums.TiffNewSubFileTypes.FileTypeMask">
      <summary>
            The mask filetype.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Tiff.Enums.TiffNewSubFileTypes.FileTypeLast">
      <summary>
            The last filetype.
            </summary>
    </member>
    <member name="T:Aspose.Imaging.FileFormats.Tiff.Enums.TiffOrientations">
      <summary>
            Image orientation.<br />
            Possible values for ORIENTATION tag.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Tiff.Enums.TiffOrientations.TopLeft">
      <summary>
            Row 0 top, Column 0 lhs.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Tiff.Enums.TiffOrientations.TopRight">
      <summary>
            Row 0 top, Column 0 rhs.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Tiff.Enums.TiffOrientations.BottomRight">
      <summary>
            Row 0 bottom, Column 0 rhs.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Tiff.Enums.TiffOrientations.BottomLeft">
      <summary>
            Row 0 bottom, Column 0 lhs.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Tiff.Enums.TiffOrientations.LeftTop">
      <summary>
            Row 0 lhs, Column 0 top.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Tiff.Enums.TiffOrientations.RightTop">
      <summary>
            Row 0 rhs, Column 0 top.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Tiff.Enums.TiffOrientations.RightBottom">
      <summary>
            Row 0 rhs, Column 0 bottom.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Tiff.Enums.TiffOrientations.LeftBottom">
      <summary>
            Row 0 lhs, Column 0 bottom.
            </summary>
    </member>
    <member name="T:Aspose.Imaging.FileFormats.Tiff.Enums.TiffPhotometrics">
      <summary>
            Photometric interpolation enum 
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Tiff.Enums.TiffPhotometrics.MinIsWhite">
      <summary>
            Min value is white.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Tiff.Enums.TiffPhotometrics.MinIsBlack">
      <summary>
            Min value is black.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Tiff.Enums.TiffPhotometrics.Rgb">
      <summary>
            RGB color model.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Tiff.Enums.TiffPhotometrics.Palette">
      <summary>
            Color map indexed.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Tiff.Enums.TiffPhotometrics.Mask">
      <summary>
            [obsoleted by TIFF rev. 6.0] Holdout mask.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Tiff.Enums.TiffPhotometrics.Separated">
      <summary>
            Color separations.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Tiff.Enums.TiffPhotometrics.Ycbcr">
      <summary>
            The CCIR 601.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Tiff.Enums.TiffPhotometrics.Cielab">
      <summary>
            1976 CIE L*a*b*.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Tiff.Enums.TiffPhotometrics.Icclab">
      <summary>
            ICC L*a*b*. Introduced post TIFF rev 6.0 by Adobe TIFF Technote 4.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Tiff.Enums.TiffPhotometrics.Itulab">
      <summary>
            ITU L*a*b*.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Tiff.Enums.TiffPhotometrics.Logl">
      <summary>
            CIE Log2(L).
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Tiff.Enums.TiffPhotometrics.Logluv">
      <summary>
            CIE Log2(L) (u',v').
            </summary>
    </member>
    <member name="T:Aspose.Imaging.FileFormats.Tiff.Enums.TiffPlanarConfigs">
      <summary>
            Storage organization.<br />
            Possible values for PLANARCONFIG tag.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Tiff.Enums.TiffPlanarConfigs.Contiguous">
      <summary>
            Single image plane.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Tiff.Enums.TiffPlanarConfigs.Separate">
      <summary>
            Separate planes of data.
            </summary>
    </member>
    <member name="T:Aspose.Imaging.FileFormats.Tiff.Enums.TiffResolutionUnits">
      <summary>
            Tiff Resolution Unit Enum
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Tiff.Enums.TiffResolutionUnits.None">
      <summary>
            No meaningful units.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Tiff.Enums.TiffResolutionUnits.Inch">
      <summary>
            English system.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Tiff.Enums.TiffResolutionUnits.Centimeter">
      <summary>
            Metric system.
            </summary>
    </member>
    <member name="T:Aspose.Imaging.FileFormats.Tiff.Enums.TiffSampleFormats">
      <summary>
            Sample format enum
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Tiff.Enums.TiffSampleFormats.Uint">
      <summary>
            Unsigned integer data
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Tiff.Enums.TiffSampleFormats.Int">
      <summary>
            Signed integer data
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Tiff.Enums.TiffSampleFormats.IeeeFp">
      <summary>
            IEEE floating point data
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Tiff.Enums.TiffSampleFormats.Void">
      <summary>
            Untyped data
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Tiff.Enums.TiffSampleFormats.ComplexInt">
      <summary>
            Complex signed int
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Tiff.Enums.TiffSampleFormats.ComplexIeeeFp">
      <summary>
            Complex ieee floating
            </summary>
    </member>
    <member name="T:Aspose.Imaging.FileFormats.Tiff.Enums.TiffTags">
      <summary>
            The tiff tag enum.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Tiff.Enums.TiffTags.SubFileType">
      <summary>
            Subfile data descriptor.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Tiff.Enums.TiffTags.OsubfileType">
      <summary>
              [obsoleted by TIFF rev. 5.0]<br />
              Kind of data in subfile. 
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Tiff.Enums.TiffTags.ImageWidth">
      <summary>
              Image width in pixels.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Tiff.Enums.TiffTags.ImageLength">
      <summary>
              Image height in pixels.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Tiff.Enums.TiffTags.BitsPerSample">
      <summary>
              Bits per channel (sample).
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Tiff.Enums.TiffTags.Compression">
      <summary>
              Data compression technique.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Tiff.Enums.TiffTags.Photometric">
      <summary>
              Photometric interpretation.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Tiff.Enums.TiffTags.Thresholding">
      <summary>
              [obsoleted by TIFF rev. 5.0]<br />
              Thresholding used on data. 
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Tiff.Enums.TiffTags.CellWidth">
      <summary>
              [obsoleted by TIFF rev. 5.0]<br />
              Dithering matrix width.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Tiff.Enums.TiffTags.CellLength">
      <summary>
              [obsoleted by TIFF rev. 5.0]<br />
              Dithering matrix height.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Tiff.Enums.TiffTags.FillOrder">
      <summary>
              Data order within a byte.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Tiff.Enums.TiffTags.DocumentName">
      <summary>
              Name of document which holds for image.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Tiff.Enums.TiffTags.ImageDescription">
      <summary>
              Information about image.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Tiff.Enums.TiffTags.Make">
      <summary>
              Scanner manufacturer name.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Tiff.Enums.TiffTags.Model">
      <summary>
              Scanner model name/number.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Tiff.Enums.TiffTags.StripOffsets">
      <summary>
              Offsets to data strips.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Tiff.Enums.TiffTags.Orientation">
      <summary>
              [obsoleted by TIFF rev. 5.0]<br />
              Image orientation. 
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Tiff.Enums.TiffTags.SamplesPerPixel">
      <summary>
              Samples per pixel.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Tiff.Enums.TiffTags.RowsPerStrip">
      <summary>
              Rows per strip of data.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Tiff.Enums.TiffTags.StripByteCounts">
      <summary>
              Bytes counts for strips.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Tiff.Enums.TiffTags.MinSampleValue">
      <summary>
              [obsoleted by TIFF rev. 5.0]<br />
              Minimum sample value.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Tiff.Enums.TiffTags.MaxSampleValue">
      <summary>
              [obsoleted by TIFF rev. 5.0]<br />
              Maximum sample value.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Tiff.Enums.TiffTags.Xresolution">
      <summary>
              Pixels/resolution in x.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Tiff.Enums.TiffTags.Yresolution">
      <summary>
              Pixels/resolution in y.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Tiff.Enums.TiffTags.PlanarConfig">
      <summary>
              Storage organization.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Tiff.Enums.TiffTags.PageName">
      <summary>
              Page name image is from.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Tiff.Enums.TiffTags.Xposition">
      <summary>
              X page offset of image lhs.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Tiff.Enums.TiffTags.Yposition">
      <summary>
              Y page offset of image lhs.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Tiff.Enums.TiffTags.FreeOffsets">
      <summary>
              [obsoleted by TIFF rev. 5.0]<br />
              Byte offset to free block.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Tiff.Enums.TiffTags.FreeByteCounts">
      <summary>
              [obsoleted by TIFF rev. 5.0]<br />
              Sizes of free blocks.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Tiff.Enums.TiffTags.GrayResponseUnit">
      <summary>
              [obsoleted by TIFF rev. 6.0]<br />
              Gray scale curve accuracy.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Tiff.Enums.TiffTags.GrayResponseCurve">
      <summary>
              [obsoleted by TIFF rev. 6.0]<br />
              Gray scale response curve.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Tiff.Enums.TiffTags.T4Options">
      <summary>
              TIFF 6.0 proper name alias for GROUP3OPTIONS.
              Options for CCITT Group 3 fax encoding. 32 flag bits.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Tiff.Enums.TiffTags.T6Options">
      <summary>
             Options for CCITT Group 4 fax encoding. 32 flag bits.
              TIFF 6.0 proper name alias for GROUP4OPTIONS.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Tiff.Enums.TiffTags.ResolutionUnit">
      <summary>
              Units of resolutions.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Tiff.Enums.TiffTags.PageNumber">
      <summary>
              Page numbers of multi-page.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Tiff.Enums.TiffTags.ColorResponseUnit">
      <summary>
              [obsoleted by TIFF rev. 6.0]<br />
              Color curve accuracy.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Tiff.Enums.TiffTags.TransferFunction">
      <summary>
              Colorimetry info.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Tiff.Enums.TiffTags.Software">
      <summary>
              Name &amp; release.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Tiff.Enums.TiffTags.DateTime">
      <summary>
              Creation date and time.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Tiff.Enums.TiffTags.Artist">
      <summary>
              Creator of image.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Tiff.Enums.TiffTags.HostComputer">
      <summary>
              Machine where created.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Tiff.Enums.TiffTags.Predictor">
      <summary>
              Prediction scheme w/ LZW.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Tiff.Enums.TiffTags.WhitePoint">
      <summary>
              Image white point.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Tiff.Enums.TiffTags.PrimaryChromaticities">
      <summary>
              Primary chromaticities.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Tiff.Enums.TiffTags.ColorMap">
      <summary>
              RGB map for pallette image.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Tiff.Enums.TiffTags.HalftoneHints">
      <summary>
              Highlight + shadow info.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Tiff.Enums.TiffTags.TileWidth">
      <summary>
              Tile width in pixels.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Tiff.Enums.TiffTags.TileLength">
      <summary>
              Tile height in pixels.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Tiff.Enums.TiffTags.TileOffsets">
      <summary>
              Offsets to data tiles.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Tiff.Enums.TiffTags.TileByteCounts">
      <summary>
              Byte counts for tiles.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Tiff.Enums.TiffTags.BadFaxLines">
      <summary>
              Lines with wrong pixel count.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Tiff.Enums.TiffTags.CleanFaxData">
      <summary>
              Regenerated line info.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Tiff.Enums.TiffTags.ConsecutiveBadFaxLines">
      <summary>
              Max consecutive bad lines.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Tiff.Enums.TiffTags.SubIfd">
      <summary>
              Subimage descriptors.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Tiff.Enums.TiffTags.InkSet">
      <summary>
              Inks in separated image.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Tiff.Enums.TiffTags.InkNames">
      <summary>
              ASCII names of inks.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Tiff.Enums.TiffTags.NumberOfInks">
      <summary>
              Number of inks.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Tiff.Enums.TiffTags.DotRange">
      <summary>
              0% and 100% dot codes.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Tiff.Enums.TiffTags.TargetPrinter">
      <summary>
              Separation target.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Tiff.Enums.TiffTags.ExtraSamples">
      <summary>
              Information about extra samples.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Tiff.Enums.TiffTags.SampleFormat">
      <summary>
              Data sample format.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Tiff.Enums.TiffTags.SminSampleValue">
      <summary>
              Variable MinSampleValue.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Tiff.Enums.TiffTags.SmaxSampleValue">
      <summary>
              Variable MaxSampleValue.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Tiff.Enums.TiffTags.TransferRange">
      <summary>
              Variable TransferRange
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Tiff.Enums.TiffTags.ClipPath">
      <summary>
              ClipPath. Introduced post TIFF rev 6.0 by Adobe TIFF technote 2.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Tiff.Enums.TiffTags.Xclippathunits">
      <summary>
              XClipPathUnits. Introduced post TIFF rev 6.0 by Adobe TIFF technote 2.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Tiff.Enums.TiffTags.Yclippathunits">
      <summary>
              YClipPathUnits. Introduced post TIFF rev 6.0 by Adobe TIFF technote 2.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Tiff.Enums.TiffTags.Indexed">
      <summary>
              Indexed. Introduced post TIFF rev 6.0 by Adobe TIFF Technote 3.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Tiff.Enums.TiffTags.JpegTables">
      <summary>
              JPEG table stream. Introduced post TIFF rev 6.0.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Tiff.Enums.TiffTags.OpiProxy">
      <summary>
              OPI Proxy. Introduced post TIFF rev 6.0 by Adobe TIFF technote.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Tiff.Enums.TiffTags.JpegProc">
      <summary>
              [obsoleted by Technical Note #2 which specifies a revised JPEG-in-TIFF scheme]<br />
              JPEG processing algorithm.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Tiff.Enums.TiffTags.JpegInerchangeFormat">
      <summary>
              [obsoleted by Technical Note #2 which specifies a revised JPEG-in-TIFF scheme]<br />
              Pointer to SOI marker.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Tiff.Enums.TiffTags.JpegInterchangeFormatLength">
      <summary>
              [obsoleted by Technical Note #2 which specifies a revised JPEG-in-TIFF scheme]<br />
              JFIF stream length
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Tiff.Enums.TiffTags.JpegRestartInterval">
      <summary>
              [obsoleted by Technical Note #2 which specifies a revised JPEG-in-TIFF scheme]<br />
              Restart interval length.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Tiff.Enums.TiffTags.JpegLosslessPredictors">
      <summary>
              [obsoleted by Technical Note #2 which specifies a revised JPEG-in-TIFF scheme]<br />
              Lossless proc predictor.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Tiff.Enums.TiffTags.JpegPointTransform">
      <summary>
              [obsoleted by Technical Note #2 which specifies a revised JPEG-in-TIFF scheme]<br />
              Lossless point transform.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Tiff.Enums.TiffTags.JpegQTables">
      <summary>
              [obsoleted by Technical Note #2 which specifies a revised JPEG-in-TIFF scheme]<br />
              Q matrice offsets.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Tiff.Enums.TiffTags.JpegDCtables">
      <summary>
              [obsoleted by Technical Note #2 which specifies a revised JPEG-in-TIFF scheme]<br />
              DCT table offsets.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Tiff.Enums.TiffTags.JpegACtables">
      <summary>
              [obsoleted by Technical Note #2 which specifies a revised JPEG-in-TIFF scheme]<br />
              AC coefficient offsets.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Tiff.Enums.TiffTags.YcbcrCoefficients">
      <summary>
              RGB -&gt; YCbCr transform.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Tiff.Enums.TiffTags.YcbcrSubSampling">
      <summary>
              YCbCr subsampling factors.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Tiff.Enums.TiffTags.YcbcrPositioning">
      <summary>
              Subsample positioning.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Tiff.Enums.TiffTags.ReferenceBlackWhite">
      <summary>
              Colorimetry info.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Tiff.Enums.TiffTags.XmlPacket">
      <summary>
              XML packet. Introduced post TIFF rev 6.0 by Adobe XMP Specification, January 2004.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Tiff.Enums.TiffTags.OpiImageid">
      <summary>
              OPI ImageID. Introduced post TIFF rev 6.0 by Adobe TIFF technote.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Tiff.Enums.TiffTags.Refpts">
      <summary>
              Image reference points. Private tag registered to Island Graphics.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Tiff.Enums.TiffTags.Copyright">
      <summary>
              Copyright string. This tag is listed in the TIFF rev. 6.0 w/ unknown ownership.
            </summary>
    </member>
    <member name="T:Aspose.Imaging.FileFormats.Tiff.Enums.TiffThresholds">
      <summary>
            Thresholding used on data.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Tiff.Enums.TiffThresholds.NoDithering">
      <summary>
            No dithering is performed.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Tiff.Enums.TiffThresholds.HalfTone">
      <summary>
            Dithered scan.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Tiff.Enums.TiffThresholds.ErrorDiffuse">
      <summary>
            Usually Floyd-Steinberg.
            </summary>
    </member>
    <member name="T:Aspose.Imaging.FileFormats.Tiff.FileManagement.TiffBigEndianStream">
      <summary>
            The tiff stream for handling big endian tiff file format.
            </summary>
    </member>
    <member name="T:Aspose.Imaging.FileFormats.Tiff.FileManagement.TiffStream">
      <summary>
            The tiff stream for handling little endian tiff file format.
            </summary>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Tiff.FileManagement.TiffStream.#ctor(System.IO.Stream)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.FileFormats.Tiff.FileManagement.TiffStream" /> class.
            </summary>
      <param name="stream">The stream.</param>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Tiff.FileManagement.TiffStream.#ctor(System.IO.Stream,System.Boolean)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.FileFormats.Tiff.FileManagement.TiffStream" /> class.
            </summary>
      <param name="stream">The stream.</param>
      <param name="disposeStream">if set to <c>true</c> stream will be disposed.</param>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Tiff.FileManagement.TiffStream.ReadUByteArrayUInt32(System.UInt32)">
      <summary>
            Reads an array of unsigned byte values from the stream.
            </summary>
      <param name="count">The elements count.</param>
      <returns>
            The array of unsigned byte values.
            </returns>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Tiff.FileManagement.TiffStream.ReadUByteArrayInt32(System.Int32)">
      <summary>
            Reads an array of unsigned byte values from the stream.
            </summary>
      <param name="count">The elements count.</param>
      <returns>
            The array of unsigned byte values.
            </returns>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Tiff.FileManagement.TiffStream.ReadDouble">
      <summary>
            Read a single double value from the stream.
            </summary>
      <returns>
            The single double value.
            </returns>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Tiff.FileManagement.TiffStream.ReadDoubleArrayInt32(System.Int32)">
      <summary>
            Reads an array of double values from the stream.
            </summary>
      <param name="count">The elements count.</param>
      <returns>
            The array of double values.
            </returns>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Tiff.FileManagement.TiffStream.ReadDoubleArrayUInt32(System.UInt32)">
      <summary>
            Reads an array of double values from the stream.
            </summary>
      <param name="count">The elements count.</param>
      <returns>
            The array of double values.
            </returns>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Tiff.FileManagement.TiffStream.ReadFloat">
      <summary>
            Read a single float value from the stream.
            </summary>
      <returns>
            The single float value.
            </returns>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Tiff.FileManagement.TiffStream.ReadFloatArrayInt32(System.Int32)">
      <summary>
            Reads an array of float values from the stream.
            </summary>
      <param name="count">The elements count.</param>
      <returns>
            The array of float values.
            </returns>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Tiff.FileManagement.TiffStream.ReadFloatArrayUInt32(System.UInt32)">
      <summary>
            Reads an array of float values from the stream.
            </summary>
      <param name="count">The elements count.</param>
      <returns>
            The array of float values.
            </returns>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Tiff.FileManagement.TiffStream.ReadRational">
      <summary>
            Read a single rational number value from the stream.
            </summary>
      <returns>
            The rational number.
            </returns>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Tiff.FileManagement.TiffStream.ReadSRational">
      <summary>
            Read a single signed rational number value from the stream.
            </summary>
      <returns>
            The signed rational number.
            </returns>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Tiff.FileManagement.TiffStream.ReadRationalArrayUInt32(System.UInt32)">
      <summary>
            Reads an array of rational values from the stream.
            </summary>
      <param name="count">The elements count.</param>
      <returns>
            The array of rational values.
            </returns>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Tiff.FileManagement.TiffStream.ReadRationalArrayInt32(System.Int32)">
      <summary>
            Reads an array of rational values from the stream.
            </summary>
      <param name="count">The elements count.</param>
      <returns>
            The array of rational values.
            </returns>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Tiff.FileManagement.TiffStream.ReadSRationalArrayInt32(System.Int32)">
      <summary>
            Reads an array of signed rational values from the stream.
            </summary>
      <param name="count">The elements count.</param>
      <returns>
            The array of signed rational values.
            </returns>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Tiff.FileManagement.TiffStream.ReadSRationalArrayUInt32(System.UInt32)">
      <summary>
            Reads an array of signed rational values from the stream.
            </summary>
      <param name="count">The elements count.</param>
      <returns>
            The array of signed rational values.
            </returns>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Tiff.FileManagement.TiffStream.ReadSByte">
      <summary>
            Reads signed byte data from the stream.
            </summary>
      <returns>
            The signed byte value.
            </returns>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Tiff.FileManagement.TiffStream.ReadSByteArrayUInt32(System.UInt32)">
      <summary>
            Reads an array of signed byte values from the stream.
            </summary>
      <param name="count">The elements count.</param>
      <returns>
            The array of signed byte values.
            </returns>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Tiff.FileManagement.TiffStream.ReadSByteArrayInt32(System.Int32)">
      <summary>
            Reads an array of signed byte values from the stream.
            </summary>
      <param name="count">The elements count.</param>
      <returns>
            The array of signed byte values.
            </returns>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Tiff.FileManagement.TiffStream.ReadSLong">
      <summary>
            Read signed integer value from the stream.
            </summary>
      <returns>
            A signed integer value.
            </returns>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Tiff.FileManagement.TiffStream.ReadSLongArrayInt32(System.Int32)">
      <summary>
            Reads an array of signed integer values from the stream.
            </summary>
      <param name="count">The elements count.</param>
      <returns>
            The array of signed integer values.
            </returns>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Tiff.FileManagement.TiffStream.ReadSLongArrayUInt32(System.UInt32)">
      <summary>
            Reads an array of signed integer values from the stream.
            </summary>
      <param name="count">The elements count.</param>
      <returns>
            The array of signed integer values.
            </returns>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Tiff.FileManagement.TiffStream.ReadSShort">
      <summary>
            Read signed short value from the stream.
            </summary>
      <returns>
            A signed short value.
            </returns>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Tiff.FileManagement.TiffStream.ReadSShortArrayInt32(System.Int32)">
      <summary>
            Reads an array of signed short values from the stream.
            </summary>
      <param name="count">The elements count.</param>
      <returns>
            The array of signed short values.
            </returns>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Tiff.FileManagement.TiffStream.ReadSShortArrayUInt32(System.UInt32)">
      <summary>
            Reads an array of signed short values from the stream.
            </summary>
      <param name="count">The elements count.</param>
      <returns>
            The array of signed short values.
            </returns>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Tiff.FileManagement.TiffStream.ReadUByte">
      <summary>
            Read unsigned byte value from the stream.
            </summary>
      <returns>
            An unsigned byte value.
            </returns>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Tiff.FileManagement.TiffStream.ReadULong">
      <summary>
            Read unsigned integer value from the stream.
            </summary>
      <returns>
            An unsigned integer value.
            </returns>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Tiff.FileManagement.TiffStream.ReadULongArrayInt32(System.Int32)">
      <summary>
            Reads an array of unsigned integer values from the stream.
            </summary>
      <param name="count">The elements count.</param>
      <returns>
            The array of unsigned integer values.
            </returns>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Tiff.FileManagement.TiffStream.ReadULongArrayUInt32(System.UInt32)">
      <summary>
            Reads an array of unsigned integer values from the stream.
            </summary>
      <param name="count">The elements count.</param>
      <returns>
            The array of unsigned integer values.
            </returns>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Tiff.FileManagement.TiffStream.ReadUShort">
      <summary>
            Read unsigned short value from the stream.
            </summary>
      <returns>
            An unsigned short value.
            </returns>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Tiff.FileManagement.TiffStream.ReadUShortArrayInt32(System.Int32)">
      <summary>
            Reads an array of unsigned integer values from the stream.
            </summary>
      <param name="count">The elements count.</param>
      <returns>
            The array of unsigned integer values.
            </returns>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Tiff.FileManagement.TiffStream.ReadUShortArrayUInt32(System.UInt32)">
      <summary>
            Reads an array of unsigned integer values from the stream.
            </summary>
      <param name="count">The elements count.</param>
      <returns>
            The array of unsigned integer values.
            </returns>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Tiff.FileManagement.TiffStream.WriteDouble(System.Double)">
      <summary>
            Writes a single double value to the stream.
            </summary>
      <param name="data">The value to write.</param>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Tiff.FileManagement.TiffStream.WriteDoubleArray(System.Double[])">
      <summary>
            Writes an array of double values to the stream.
            </summary>
      <param name="data">The array to write.</param>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Tiff.FileManagement.TiffStream.WriteFloat(System.Single)">
      <summary>
            Writes a single float value to the stream.
            </summary>
      <param name="data">The value to write.</param>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Tiff.FileManagement.TiffStream.WriteFloatArray(System.Single[])">
      <summary>
            Writes an array of float values to the stream.
            </summary>
      <param name="data">The array to write.</param>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Tiff.FileManagement.TiffStream.WriteRational(Aspose.Imaging.FileFormats.Tiff.TiffRational)">
      <summary>
            Writes a single rational number value to the stream.
            </summary>
      <param name="data">The value to write.</param>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Tiff.FileManagement.TiffStream.WriteSRational(Aspose.Imaging.FileFormats.Tiff.TiffSRational)">
      <summary>
            Writes a single signed rational number value to the stream.
            </summary>
      <param name="data">The value to write.</param>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Tiff.FileManagement.TiffStream.WriteRationalArray(Aspose.Imaging.FileFormats.Tiff.TiffRational[])">
      <summary>
            Writes an array of unsigned rational values to the stream.
            </summary>
      <param name="data">The array to write.</param>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Tiff.FileManagement.TiffStream.WriteSRationalArray(Aspose.Imaging.FileFormats.Tiff.TiffSRational[])">
      <summary>
            Writes an array of signed rational values to the stream.
            </summary>
      <param name="data">The array to write.</param>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Tiff.FileManagement.TiffStream.WriteSByte(System.SByte)">
      <summary>
            Writes a single signed byte value to the stream.
            </summary>
      <param name="data">The value to write.</param>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Tiff.FileManagement.TiffStream.WriteSByteArray(System.SByte[])">
      <summary>
            Writes an array of signed byte values to the stream.
            </summary>
      <param name="data">The array to write.</param>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Tiff.FileManagement.TiffStream.WriteSLongArray(System.Int32[])">
      <summary>
            Writes an array of integer values to the stream.
            </summary>
      <param name="data">The array to write.</param>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Tiff.FileManagement.TiffStream.WriteSShort(System.Int16)">
      <summary>
            Writes a single short value to the stream.
            </summary>
      <param name="data">The value to write.</param>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Tiff.FileManagement.TiffStream.WriteSShortArray(System.Int16[])">
      <summary>
            Writes an array of short values to the stream.
            </summary>
      <param name="data">The array to write.</param>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Tiff.FileManagement.TiffStream.WriteSlong(System.Int32)">
      <summary>
            Writes a single integer value to the stream.
            </summary>
      <param name="data">The value to write.</param>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Tiff.FileManagement.TiffStream.WriteUByte(System.Byte)">
      <summary>
            Writes a single byte value to the stream.
            </summary>
      <param name="data">The value to write.</param>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Tiff.FileManagement.TiffStream.WriteULong(System.UInt32)">
      <summary>
            Writes a single unsigned integer value to the stream.
            </summary>
      <param name="data">The value to write.</param>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Tiff.FileManagement.TiffStream.WriteULongArray(System.UInt32[])">
      <summary>
            Writes an array of unsigned integer values to the stream.
            </summary>
      <param name="data">The array to write.</param>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Tiff.FileManagement.TiffStream.WriteUShort(System.UInt16)">
      <summary>
            Writes a single unsigned short value to the stream.
            </summary>
      <param name="data">The value to write.</param>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Tiff.FileManagement.TiffStream.WriteUShortArray(System.UInt16[])">
      <summary>
            Writes an array of unsigned short values to the stream.
            </summary>
      <param name="data">The array to write.</param>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Tiff.FileManagement.TiffStream.ProcessReadDataDouble(System.Byte[])">
      <summary>
            Performs a conversion to the double array.
            </summary>
      <param name="data">The data to convert.</param>
      <returns>
            The converted array.
            </returns>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Tiff.FileManagement.TiffStream.ProcessReadDataFloat(System.Byte[])">
      <summary>
            Performs a conversion to the float array.
            </summary>
      <param name="data">The data to convert.</param>
      <returns>
            The converted array.
            </returns>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Tiff.FileManagement.TiffStream.ProcessReadDataLong(System.Byte[])">
      <summary>
            Performs a conversion to the integer array.
            </summary>
      <param name="data">The data to convert.</param>
      <returns>
            The converted array.
            </returns>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Tiff.FileManagement.TiffStream.ProcessReadDataShort(System.Byte[])">
      <summary>
            Performs a conversion to the short array.
            </summary>
      <param name="data">The data to convert.</param>
      <returns>
            The converted array.
            </returns>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Tiff.FileManagement.TiffStream.ProcessReadDataULong(System.Byte[])">
      <summary>
            Performs a conversion to the unsigned integer array.
            </summary>
      <param name="data">The data to convert.</param>
      <returns>
            The converted array.
            </returns>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Tiff.FileManagement.TiffStream.ProcessReadDataUShort(System.Byte[])">
      <summary>
            Performs a conversion to the unsigned short array.
            </summary>
      <param name="data">The data to convert.</param>
      <returns>
            The converted array.
            </returns>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Tiff.FileManagement.TiffStream.ProcessWriteDataLong(System.Int32[],System.Byte[])">
      <summary>
            Performs a conversion from the specific data type to the raw bytes.
            </summary>
      <param name="data">The data to convert.</param>
      <param name="dest">The destination array containing the converted data..</param>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Tiff.FileManagement.TiffStream.ProcessWriteDataRational(Aspose.Imaging.FileFormats.Tiff.TiffRational[],System.Byte[])">
      <summary>
            Performs a conversion from the specific data type to the raw bytes.
            </summary>
      <param name="data">The data to convert.</param>
      <param name="dest">The destination array containing the converted data..</param>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Tiff.FileManagement.TiffStream.ProcessWriteDataULong(System.UInt32[],System.Byte[])">
      <summary>
            Performs a conversion from the specific data type to the raw bytes.
            </summary>
      <param name="data">The data to convert.</param>
      <param name="dest">The destination array containing the converted data..</param>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Tiff.FileManagement.TiffStream.ProcessWriteDataShort(System.Int16[],System.Byte[])">
      <summary>
            Performs a conversion from the specific data type to the raw bytes.
            </summary>
      <param name="data">The data to convert.</param>
      <param name="dest">The destination array containing the converted data..</param>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Tiff.FileManagement.TiffStream.ProcessWriteDataUShort(System.UInt16[],System.Byte[])">
      <summary>
            Performs a conversion from the specific data type to the raw bytes.
            </summary>
      <param name="data">The data to convert.</param>
      <param name="dest">The destination array containing the converted data..</param>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Tiff.FileManagement.TiffStream.ProcessWriteDataFloat(System.Single[],System.Byte[])">
      <summary>
            Performs a conversion from the specific data type to the raw bytes.
            </summary>
      <param name="data">The data to convert.</param>
      <param name="dest">The destination array containing the converted data..</param>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Tiff.FileManagement.TiffStream.ProcessWriteDataDouble(System.Double[],System.Byte[])">
      <summary>
            Performs a conversion from the specific data type to the raw bytes.
            </summary>
      <param name="data">The data to convert.</param>
      <param name="dest">The destination array containing the converted data..</param>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Tiff.FileManagement.TiffStream.ThrowExceptions">
      <summary>
            Gets or sets a value indicating whether exceptions are thrown on incorrect data processing (reading or writing to stream).
            </summary>
      <value>
        <c>true</c> if exceptions are thrown on incorrect data processing; otherwise, the error conditions are silently igonred.
            </value>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Tiff.FileManagement.TiffBigEndianStream.#ctor(System.IO.Stream)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.FileFormats.Tiff.FileManagement.TiffBigEndianStream" /> class.
            </summary>
      <param name="stream">The stream.</param>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Tiff.FileManagement.TiffBigEndianStream.#ctor(System.IO.Stream,System.Boolean)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.FileFormats.Tiff.FileManagement.TiffBigEndianStream" /> class.
            </summary>
      <param name="stream">The stream.</param>
      <param name="disposeStream">if set to <c>true</c> stream will be disposed.</param>
    </member>
    <member name="T:Aspose.Imaging.FileFormats.Tiff.TiffFrame">
      <summary>
            The tiff frame.
            </summary>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Tiff.TiffFrame.#ctor(System.IO.Stream)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.FileFormats.Tiff.TiffFrame" /> class.
            </summary>
      <param name="stream">The stream to load an image from and initialize frame pixel and palette data with.</param>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Tiff.TiffFrame.#ctor(System.IO.Stream,Aspose.Imaging.ImageOptions.TiffOptions)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.FileFormats.Tiff.TiffFrame" /> class.
            </summary>
      <param name="stream">The stream to load an image from and initialize frame pixel and palette data with.</param>
      <param name="options">The options to use for the newly created frame.</param>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Tiff.TiffFrame.#ctor(System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.FileFormats.Tiff.TiffFrame" /> class.
            </summary>
      <param name="path">The path to load an image from and initialize frame pixel and palette data with.</param>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Tiff.TiffFrame.#ctor(System.String,Aspose.Imaging.ImageOptions.TiffOptions)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.FileFormats.Tiff.TiffFrame" /> class.
            </summary>
      <param name="path">The path to load an image from and initialize frame pixel and palette data with.</param>
      <param name="options">The options to use for the newly created frame.</param>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Tiff.TiffFrame.#ctor(Aspose.Imaging.RasterImage)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.FileFormats.Tiff.TiffFrame" /> class.
            </summary>
      <param name="image">The image to initialize frame pixel and palette data with.</param>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Tiff.TiffFrame.#ctor(Aspose.Imaging.RasterImage,Aspose.Imaging.ImageOptions.TiffOptions)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.FileFormats.Tiff.TiffFrame" /> class.
            </summary>
      <param name="image">The image to initialize frame pixel and palette data with.</param>
      <param name="options">The options to use for the newly created frame.</param>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Tiff.TiffFrame.#ctor(Aspose.Imaging.ImageOptions.TiffOptions,System.Int32,System.Int32)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.FileFormats.Tiff.TiffFrame" /> class.
            </summary>
      <param name="options">The frame options.</param>
      <param name="width">The width.</param>
      <param name="height">The height.</param>
      <exception cref="T:System.ArgumentNullException">Options parameter is null.</exception>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Tiff.TiffFrame.CopyFrame(Aspose.Imaging.FileFormats.Tiff.TiffFrame)">
      <summary>
            Copies the entire frame (duplicates).
            </summary>
      <param name="tiffFrame">
            The tiff frame to copy.
            </param>
      <returns>
            The newly copied tiff frame.
            </returns>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Tiff.TiffFrame.CreateFrameFrom(Aspose.Imaging.FileFormats.Tiff.TiffFrame,Aspose.Imaging.ImageOptions.TiffOptions)">
      <summary>
            Creates the frame from specified <paramref name="tiffFrame" /> using the specified <paramref name="options" />.
            The pixel data is preserved but converted to the desired format.
            </summary>
      <param name="tiffFrame">
            The tiff frame to create from.
            </param>
      <param name="options">
            The new options to use.
            </param>
      <returns>
            The newly created frame.
            </returns>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Tiff.TiffFrame.BitsPerPixel">
      <summary>
            Gets the image bits per pixel count.
            </summary>
      <value>The image bits per pixel count.</value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Tiff.TiffFrame.FrameOptions">
      <summary>
            Gets the frame create options.
            </summary>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Tiff.TiffFrame.Height">
      <summary>
            Gets the image height.
            </summary>
      <value>
            The image height.
            </value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Tiff.TiffFrame.Width">
      <summary>
            Gets the image width.
            </summary>
      <value>
            The image width.
            </value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Tiff.TiffFrame.ExifData">
      <summary>
            Gets or sets EXIF data from frame.
            </summary>
      <value>EXIF data container</value>
    </member>
    <member name="T:Aspose.Imaging.FileFormats.Tiff.InstanceFactory.TiffTagFactory">
      <summary>
            Tag factory class
            </summary>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Tiff.InstanceFactory.TiffTagFactory.CreateInstance(System.UInt16,System.UInt16)">
      <summary>
            Creates a new data type instance.
            </summary>
      <param name="dataType">The data type instance.</param>
      <param name="tagId">The tag id.</param>
      <returns>
            Tiff tag data type
            </returns>
    </member>
    <member name="T:Aspose.Imaging.FileFormats.Tiff.TiffImage">
      <summary>
            The tiff image.
            </summary>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Tiff.TiffImage.#ctor(Aspose.Imaging.FileFormats.Tiff.TiffFrame)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.FileFormats.Tiff.TiffImage" /> class.
            </summary>
      <param name="frame">The tiff frame to initialize image with.</param>
      <exception cref="T:System.ArgumentNullException">Tiff frame cannot be empty.;frame</exception>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Tiff.TiffImage.#ctor(Aspose.Imaging.FileFormats.Tiff.TiffFrame[])">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.FileFormats.Tiff.TiffImage" /> class.
            </summary>
      <param name="frames">The frames.</param>
      <exception cref="T:System.ArgumentNullException">frames</exception>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Tiff.TiffImage.SetResolution(System.Double,System.Double)">
      <summary>
            Sets the resolution for this <see cref="T:Aspose.Imaging.RasterImage" />.
            </summary>
      <param name="dpiX">The horizontal resolution, in dots per inch, of the <see cref="T:Aspose.Imaging.RasterImage" />.</param>
      <param name="dpiY">The vertical resolution, in dots per inch, of the <see cref="T:Aspose.Imaging.RasterImage" />.</param>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Tiff.TiffImage.CacheData">
      <summary>
            Caches the data and ensures no additional data loading will be performed from the underlying <see cref="P:Aspose.Imaging.DataStreamSupporter.DataStreamContainer" />.
            </summary>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Tiff.TiffImage.RotateFlip(Aspose.Imaging.RotateFlipType)">
      <summary>
            Rotates, flips, or rotates and flips the Active frame only.
            </summary>
      <param name="rotateFlipType">
            The rotate flip type.
            </param>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Tiff.TiffImage.RotateFlipAll(Aspose.Imaging.RotateFlipType)">
      <summary>
            Rotates the flip all frames in image.
            </summary>
      <param name="rotateFlip">
            The rotate flip type.
            </param>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Tiff.TiffImage.Rotate(System.Single,System.Boolean,Aspose.Imaging.Color)">
      <summary>
            Rotate image around the center.
            </summary>
      <param name="angle">The rotate angle in degrees. Positive values will rotate clockwise.</param>
      <param name="resizeProportionally">if set to <c>true</c> you will have your image size changed according to rotated rectangle (corner points) projections in other case that leaves dimensions untouched and only internal image contents are rotated.</param>
      <param name="backgroundColor">Color of the background.</param>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Tiff.TiffImage.AddFrame(Aspose.Imaging.FileFormats.Tiff.TiffFrame)">
      <summary>
            Adds the frame to image
            </summary>
      <param name="frame">
            The frame to add.
            </param>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Tiff.TiffImage.Add(Aspose.Imaging.FileFormats.Tiff.TiffImage)">
      <summary>
            Adds the specified image's frames to current frame.
            </summary>
      <param name="image">
            The source image.
            </param>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Tiff.TiffImage.AddFrames(Aspose.Imaging.FileFormats.Tiff.TiffFrame[])">
      <summary>
            Adds the frames array to image
            </summary>
      <param name="frames">
            The frames array to add
            </param>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Tiff.TiffImage.InsertFrame(System.Int32,Aspose.Imaging.FileFormats.Tiff.TiffFrame)">
      <summary>
            The insert frame.
            </summary>
      <param name="index">
            Index of new frame in list of frames
            </param>
      <param name="frameToInsert">
            The frame To Insert.
            </param>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Tiff.TiffImage.RemoveFrame(System.Int32)">
      <summary>
            Removes the frame by its index.
            </summary>
      <param name="index">Index of frame to be removed.</param>
      <returns>The removed frame.</returns>
      <remarks>
            Note: do not forget to Dispose the frame if you will not add it to some other TiffImage.
            </remarks>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Tiff.TiffImage.RemoveFrame(Aspose.Imaging.FileFormats.Tiff.TiffFrame)">
      <summary>
            Removes the specified frame.
            </summary>
      <param name="frame">The frame to remove.</param>
      <remarks>
            Note: do not forget to Dispose the frame if you will not add it to some other TiffImage.
            </remarks>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Tiff.TiffImage.Resize(System.Int32,System.Int32,Aspose.Imaging.ResizeType)">
      <summary>
            Resizes the image.
            </summary>
      <param name="newWidth">
            The new width.
            </param>
      <param name="newHeight">
            The new height.
            </param>
      <param name="resizeType">
            The resize type.
            </param>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Tiff.TiffImage.ResizeWidthProportionally(System.Int32,Aspose.Imaging.ResizeType)">
      <summary>
            Resizes the width proportionally.
            </summary>
      <param name="newWidth">The new width.</param>
      <param name="resizeType">Type of the resize.</param>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Tiff.TiffImage.ResizeHeightProportionally(System.Int32,Aspose.Imaging.ResizeType)">
      <summary>
            Resizes the height proportionally.
            </summary>
      <param name="newHeight">The new height.</param>
      <param name="resizeType">Type of the resize.</param>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Tiff.TiffImage.ResizeProportional(System.Int32,System.Int32,Aspose.Imaging.ResizeType)">
      <summary>
            Performs proportional resize on the image.
            The proportional resize will resize each frame according to the ratio of <paramref name="newWidth" />/width and <paramref name="newHeight" />/height.
            </summary>
      <param name="newWidth">The new width.</param>
      <param name="newHeight">The new height.</param>
      <param name="resizeType">The resize type.</param>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Tiff.TiffImage.Crop(Aspose.Imaging.Rectangle)">
      <summary>
            Cropping the image.
            </summary>
      <param name="rectangle">The rectangle.</param>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Tiff.TiffImage.Grayscale">
      <summary>
            Transformation of an image to its grayscale representation
            </summary>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Tiff.TiffImage.BinarizeFixed(System.Byte)">
      <summary>
            Binarization of an image with predefined threshold
            </summary>
      <param name="threshold">Threshold value. If corresponding gray value of a pixel is greater than threshold, a value of 255 will be assigned to it, 0 otherwise.</param>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Tiff.TiffImage.BinarizeOtsu">
      <summary>
            Binarization of an image with Otsu thresholding
            </summary>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Tiff.TiffImage.Crop(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Crop image with shifts.
            </summary>
      <param name="leftShift">The left shift.</param>
      <param name="rightShift">The right shift.</param>
      <param name="topShift">The top shift.</param>
      <param name="bottomShift">The bottom shift.</param>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Tiff.TiffImage.AdjustBrightness(System.Int32)">
      <summary>
            Adjust of a brightness for image.
            </summary>
      <param name="brightness">Brightness value.</param>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Tiff.TiffImage.AdjustContrast(System.Single)">
      <summary>
            Image contrasting
            </summary>
      <param name="contrast">Contrast value (in range [-100; 100])</param>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Tiff.TiffImage.AdjustGamma(System.Single,System.Single,System.Single)">
      <summary>
            Gamma-correction of an image.
            </summary>
      <param name="gammaRed">Gamma for red channel coefficient</param>
      <param name="gammaGreen">Gamma for green channel coefficient</param>
      <param name="gammaBlue">Gamma for blue channel coefficient</param>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Tiff.TiffImage.AdjustGamma(System.Single)">
      <summary>
            Gamma-correction of an image.
            </summary>
      <param name="gamma">Gamma for red, green and blue channels coefficient</param>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Tiff.TiffImage.ByteOrder">
      <summary>
            Gets or sets a value indicating the tiff byte order.
            </summary>
      <value>
            The tiff byte order.
            </value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Tiff.TiffImage.HorizontalResolution">
      <summary>
            Gets the horizontal resolution, in pixels per inch, of this <see cref="T:Aspose.Imaging.Image" />.
            </summary>
      <value>The horizontal resolution.</value>
      <remarks>Note by default this value is always 96 since different platforms cannot return the screen resolution. You may consider using the SetResolution method for updating both resolution values in single call.</remarks>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Tiff.TiffImage.DitheringSettings">
      <summary>
            Gets or sets the dithering settings for tiff image. Settings are applied to all frames in image.
            </summary>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Tiff.TiffImage.VerticalResolution">
      <summary>
            Gets the vertical resolution, in pixels per inch, of this <see cref="T:Aspose.Imaging.Image" />.
            </summary>
      <value>The vertical resolution.</value>
      <remarks>Note by default this value is always 96 since different platforms cannot return the screen resolution. You may consider using the SetResolution method for updating both resolution values in single call.</remarks>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Tiff.TiffImage.BitsPerPixel">
      <summary>
              Gets the image bits per pixel value of current frame.
            </summary>
      <value>
              The image bits per pixel count.
            </value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Tiff.TiffImage.ActiveFrame">
      <summary>
            Gets or sets the active frame.
            </summary>
      <value>
            Active frame.
            </value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Tiff.TiffImage.Frames">
      <summary>
              Gets Frames array of the image.
            </summary>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Tiff.TiffImage.Height">
      <summary>
              Gets the image height.
            </summary>
      <value>
              The image height.
            </value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Tiff.TiffImage.Width">
      <summary>
              Gets the image width.
            </summary>
      <value>
              The image width.
            </value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Tiff.TiffImage.IsCached">
      <summary>
            Gets a value indicating whether object's data is cached currently and no data reading is required.
            </summary>
      <value>
        <c>true</c> if object's data is cached; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Tiff.TiffImage.ExifData">
      <summary>
            Gets or sets EXIF data for the active frame.
            </summary>
    </member>
    <member name="T:Aspose.Imaging.Extensions.BrushExtensions">
      <summary>
            Contains the <see cref="T:Aspose.Imaging.Brush" /> extension methods.
            </summary>
    </member>
    <member name="M:Aspose.Imaging.Extensions.BrushExtensions.ToSilverlightBrush(Aspose.Imaging.Brush)">
      <summary>
            Converts the <see cref="T:Aspose.Imaging.Brush" /> to the <see cref="T:System.Windows.Media.Brush" />.
            </summary>
      <param name="brush">The <see cref="T:Aspose.Imaging.Brush" /> to convert.</param>
      <returns>The converted <see cref="T:System.Windows.Media.Brush" />.</returns>
    </member>
    <member name="M:Aspose.Imaging.Extensions.BrushExtensions.IsTextureBrush(Aspose.Imaging.Brush)">
      <summary>
            Determines whether passed brush is a texture brus.
            </summary>
      <param name="brush">The <see cref="T:Aspose.Imaging.Brush" /> to determine.</param>
      <returns>
        <c>True</c> if passed <see cref="T:Aspose.Imaging.Brush" /> is a texture brush; otherwise, <c>false</c>.
            </returns>
    </member>
    <member name="M:Aspose.Imaging.Extensions.BrushExtensions.CreateTextureBrush(Aspose.Imaging.Brush,Aspose.Imaging.Size)">
      <summary>
            Creates a new texture brush from the passed <see cref="T:Aspose.Imaging.Brushes.TextureBrush" />.
            </summary>
      <param name="brush">The <see cref="T:Aspose.Imaging.Brushes.TextureBrush" /> to convert.</param>
      <param name="desiredTextureSize">Size of the desired texture.</param>
      <returns>A new <see cref="T:System.Windows.Media.Brush" /> containing texture of the desired size.</returns>
    </member>
    <member name="M:Aspose.Imaging.Extensions.BrushExtensions.ConvertFromTextureBrushToSilverlightBrush(Aspose.Imaging.Brush)">
      <summary>
            Converts from texture brush base to silverlight brush.
            </summary>
      <param name="brush">The brush to convert.</param>
      <returns>The converted brush.</returns>
    </member>
    <member name="T:Aspose.Imaging.Extensions.ColorBlendExtensions">
      <summary>
            Contains the <see cref="T:Aspose.Imaging.ColorBlend" /> extension methods.
            </summary>
    </member>
    <member name="M:Aspose.Imaging.Extensions.ColorBlendExtensions.ToSilverlightGradientStopCollection(Aspose.Imaging.ColorBlend)">
      <summary>
            Converts the <see cref="T:Aspose.Imaging.ColorBlend" /> to the <see cref="T:System.Windows.Media.GradientStopCollection" />.
            </summary>
      <param name="colorBlend">The <see cref="T:Aspose.Imaging.ColorBlend" /> to convert.</param>
      <returns>The converted <see cref="T:System.Windows.Media.GradientStopCollection" />.</returns>
    </member>
    <member name="T:Aspose.Imaging.Extensions.ColorExtensions">
      <summary>
            Contains the <see cref="T:Aspose.Imaging.Color" /> extension methods.
            </summary>
    </member>
    <member name="M:Aspose.Imaging.Extensions.ColorExtensions.ToSilverlightColor(Aspose.Imaging.Color)">
      <summary>
            Converts the <see cref="T:Aspose.Imaging.Color" /> to the <see cref="T:System.Windows.Media.Color" />.
            </summary>
      <param name="color">The <see cref="T:Aspose.Imaging.Color" /> to convert.</param>
      <returns>The converted <see cref="T:System.Windows.Media.Color" />.</returns>
    </member>
    <member name="T:Aspose.Imaging.ColorSerializer">
      <summary>
            The <see cref="T:Aspose.Imaging.Color" /> class serializer/deserializer.
            </summary>
    </member>
    <member name="T:Aspose.Imaging.ISerializeObject">
      <summary>
            The object serializator.
            </summary>
    </member>
    <member name="M:Aspose.Imaging.ISerializeObject.Serialize(System.Object)">
      <summary>
            Serializes the specified object to an array of object's property states.
            </summary>
      <param name="target">The target.</param>
      <returns>A serialized array of object's property states.</returns>
    </member>
    <member name="M:Aspose.Imaging.ISerializeObject.Deserialize(System.Object[])">
      <summary>
            Deserializes a specified object from an array of object's property states.
            </summary>
      <param name="data">A serialized array of object's property states.</param>
      <returns>A newly deserialized object from an array of object's property states.</returns>
    </member>
    <member name="M:Aspose.Imaging.ColorSerializer.Serialize(System.Object)">
      <summary>
            Serializes the specified object to an array of object's property states.
            </summary>
      <param name="target">The target.</param>
      <returns>
            A serialized array of object's property states.
            </returns>
    </member>
    <member name="M:Aspose.Imaging.ColorSerializer.Deserialize(System.Object[])">
      <summary>
            Deserializes a specified object from an array of object's property states.
            </summary>
      <param name="data">A serialized array of object's property states.</param>
      <returns>
            A newly deserialized object from an array of object's property states.
            </returns>
    </member>
    <member name="T:Aspose.Imaging.Extensions.FillModeExtensions">
      <summary>
            Contains an extension methods for the <see cref="T:Aspose.Imaging.FillMode" /> enumeration.
            </summary>
    </member>
    <member name="M:Aspose.Imaging.Extensions.FillModeExtensions.ToSilverlightFillRule(Aspose.Imaging.FillMode)">
      <summary>
            Converts the <see cref="T:Aspose.Imaging.FillMode" /> enumeration to the <see cref="T:System.Windows.Media.FillRule" /> enumeration.
            </summary>
      <param name="fillMode">The <see cref="T:Aspose.Imaging.FillMode" /> enumeration to convert.</param>
      <returns>The converted <see cref="T:System.Windows.Media.FillRule" /> enumeration.</returns>
    </member>
    <member name="T:Aspose.Imaging.Extensions.GraphicsPathExtensions">
      <summary>
            Contains the <see cref="T:Aspose.Imaging.GraphicsPath" /> extension methods.
            </summary>
    </member>
    <member name="M:Aspose.Imaging.Extensions.GraphicsPathExtensions.ToSilverlightGraphicsPath(Aspose.Imaging.GraphicsPath,Aspose.Imaging.Brush)">
      <summary>
            Converts the <see cref="T:Aspose.Imaging.GraphicsPath" /> to the <see cref="T:System.Windows.Shapes.Path" />.
            </summary>
      <param name="graphicsPath">The <see cref="T:Aspose.Imaging.GraphicsPath" /> to convert.</param>
      <param name="brush">The brush to use for filling the path.</param>
      <returns>The converted <see cref="T:System.Windows.Shapes.Path" />.</returns>
    </member>
    <member name="T:Aspose.Imaging.Extensions.ImageExtensions">
      <summary>
            Contains the <see cref="T:Aspose.Imaging.Image" /> class extension methods.
            </summary>
    </member>
    <member name="M:Aspose.Imaging.Extensions.ImageExtensions.ToSilverlightImage(Aspose.Imaging.Image)">
      <summary>
            Converts the <see cref="T:Aspose.Imaging.Image" /> to the <see cref="T:System.Windows.Media.ImageSource" />.
            </summary>
      <param name="image">The <see cref="T:Aspose.Imaging.Image" /> to convert.</param>
      <returns>The converted <see cref="T:System.Windows.Media.ImageSource" />.</returns>
    </member>
    <member name="M:Aspose.Imaging.Extensions.ImageExtensions.ToWriteableBitmap(Aspose.Imaging.Image)">
      <summary>
            Converts the <see cref="T:Aspose.Imaging.Image" /> to the <see cref="T:System.Windows.Media.Imaging.WriteableBitmap" />.
            </summary>
      <param name="image">The <see cref="T:Aspose.Imaging.Image" /> to convert.</param>
      <returns>The converted <see cref="T:System.Windows.Media.Imaging.WriteableBitmap" />.</returns>
    </member>
    <member name="T:Aspose.Imaging.Extensions.MatrixExtensions">
      <summary>
            Contains the <see cref="T:Aspose.Imaging.Matrix" /> class extensions.
            </summary>
    </member>
    <member name="M:Aspose.Imaging.Extensions.MatrixExtensions.ToSilverlightMatrix(Aspose.Imaging.Matrix)">
      <summary>
            Converts the <see cref="T:Aspose.Imaging.Matrix" /> to the <see cref="T:System.Windows.Media.MatrixTransform" />.
            </summary>
      <param name="matrix">The <see cref="T:Aspose.Imaging.Matrix" /> to convert.</param>
      <returns>The converted <see cref="T:System.Windows.Media.MatrixTransform" />.</returns>
    </member>
    <member name="T:Aspose.Imaging.PenSerializer">
      <summary>
            Serializes/deserializes the <see cref="T:Aspose.Imaging.Pen" /> class.
            </summary>
    </member>
    <member name="M:Aspose.Imaging.PenSerializer.Serialize(System.Object)">
      <summary>
            Serializes the specified object to an array of object's property states.
            </summary>
      <param name="target">The target.</param>
      <returns>
            A serialized array of object's property states.
            </returns>
    </member>
    <member name="M:Aspose.Imaging.PenSerializer.Deserialize(System.Object[])">
      <summary>
            Deserializes a specified object from an array of object's property states.
            </summary>
      <param name="data">A serialized array of object's property states.</param>
      <returns>
            A newly deserialized object from an array of object's property states.
            </returns>
    </member>
    <member name="T:Aspose.Imaging.BuildVersionInfo">
      <summary>
            Contains the current build version information.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.BuildVersionInfo.AssemblyVersion">
      <summary>
            The assembly version.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.BuildVersionInfo.FileVersion">
      <summary>
            The file version.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.BuildVersionInfo.Product">
      <summary>
            The product title.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.BuildVersionInfo.ProductMajor">
      <summary>
            The major product version.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.BuildVersionInfo.ProductMinor">
      <summary>
            The minor product version.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.BuildVersionInfo.ReleaseDate">
      <summary>
            The product release date.
            </summary>
    </member>
    <member name="T:Aspose.Imaging.Extensions.RectangleExtensions">
      <summary>
            Contains extension methods for <see cref="T:Aspose.Imaging.Rectangle" /> and <see cref="T:Aspose.Imaging.RectangleF" /> structures.
            </summary>
    </member>
    <member name="M:Aspose.Imaging.Extensions.RectangleExtensions.ToSilverlightRectangle(Aspose.Imaging.Rectangle)">
      <summary>
            Converts the <see cref="T:Aspose.Imaging.Rectangle" /> to the <see cref="T:System.Windows.Rect" />.
            </summary>
      <param name="rectangle">The <see cref="T:Aspose.Imaging.Rectangle" /> to convert.</param>
      <returns>The converted <see cref="T:System.Windows.Rect" />.</returns>
    </member>
    <member name="M:Aspose.Imaging.Extensions.RectangleExtensions.ToSilverlightRectangle(Aspose.Imaging.RectangleF)">
      <summary>
            Converts the <see cref="T:Aspose.Imaging.RectangleF" /> to the <see cref="T:System.Windows.Rect" />.
            </summary>
      <param name="rectangle">The <see cref="T:Aspose.Imaging.RectangleF" /> to convert.</param>
      <returns>The converted <see cref="T:System.Windows.Rect" />.</returns>
    </member>
    <member name="T:Aspose.Imaging.DoNotSerialize">
      <summary>
              Indicates that a property or field should not be serialized
            </summary>
    </member>
    <member name="T:Aspose.Imaging.DoNotChecksum">
      <summary>
            Used in checksum mode to flag a property as not being part
            of the "meaning" of an object - i.e. two objects with the
            same checksum "mean" the same thing, even if some of the
            properties are different, those properties would not be
            relevant to the purpose of the object
            </summary>
    </member>
    <member name="T:Aspose.Imaging.SerializerId">
      <summary>
            Attribute used to flag IDs this can be useful for check object
            consistence when the serializer is in a mode that does not 
            serialize identifiers
            </summary>
    </member>
    <member name="T:Aspose.Imaging.SerializerAttribute">
      <summary>
            Indicates that the type may be serialized by a custom serializer.
            </summary>
    </member>
    <member name="P:Aspose.Imaging.SerializerAttribute.SerializatorType">
      <summary>
            Gets the type of the serializator.
            </summary>
      <value>The type of the serializator.</value>
    </member>
    <member name="T:Aspose.Imaging.Extensions.TextAlignmentExtensions">
      <summary>
            Contains extension methods for the <see cref="T:Aspose.Imaging.StringAlignment" /> class.
            </summary>
    </member>
    <member name="M:Aspose.Imaging.Extensions.TextAlignmentExtensions.ToSilverlightTextAlignment(Aspose.Imaging.StringAlignment)">
      <summary>
            Converts the <see cref="T:Aspose.Imaging.StringAlignment" /> to the <see cref="T:System.Windows.TextAlignment" />.
            </summary>
      <param name="textAlignment">The <see cref="T:Aspose.Imaging.StringAlignment" /> to convert.</param>
      <returns>The converted <see cref="T:System.Windows.TextAlignment" />.</returns>
    </member>
    <member name="M:Aspose.Imaging.Extensions.TextAlignmentExtensions.ToSilverlightVerticalTextAlignment(Aspose.Imaging.StringAlignment)">
      <summary>
            Converts the <see cref="T:Aspose.Imaging.StringAlignment" /> to the <see cref="T:System.Windows.VerticalAlignment" />.
            </summary>
      <param name="textAlignment">The <see cref="T:Aspose.Imaging.StringAlignment" /> to convert.</param>
      <returns>The converted <see cref="T:System.Windows.VerticalAlignment" />.</returns>
    </member>
    <member name="T:Aspose.Imaging.FileFormats.Psd.Layers.BlendMode">
      <summary>
            The layer blend mode.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Psd.Layers.BlendMode.Normal">
      <summary>
            Normal blend mode.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Psd.Layers.BlendMode.Darken">
      <summary>
            Darken blend mode.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Psd.Layers.BlendMode.Lighten">
      <summary>
            Lighten blend mode.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Psd.Layers.BlendMode.Hue">
      <summary>
            Hue blend mode.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Psd.Layers.BlendMode.Saturation">
      <summary>
            Saturation blend mode.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Psd.Layers.BlendMode.Color">
      <summary>
            Color blend mode.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Psd.Layers.BlendMode.Luminosity">
      <summary>
            Luminosity blend mode.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Psd.Layers.BlendMode.Multiply">
      <summary>
            Multiply blend mode.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Psd.Layers.BlendMode.Screen">
      <summary>
            Screen blend mode.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Psd.Layers.BlendMode.Dissolve">
      <summary>
            Dissolve blend mode.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Psd.Layers.BlendMode.Overlay">
      <summary>
            Overlay blend mode.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Psd.Layers.BlendMode.HardLight">
      <summary>
            Hard light blend mode.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Psd.Layers.BlendMode.SoftLight">
      <summary>
            Soft light blend mode.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Psd.Layers.BlendMode.Difference">
      <summary>
            Difference blend mode.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Psd.Layers.BlendMode.Exclusion">
      <summary>
            Exclusion blend mode.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Psd.Layers.BlendMode.ColorDodge">
      <summary>
            Color dodge blend mode.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Psd.Layers.BlendMode.ColorBurn">
      <summary>
            Color burn blend mode.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Psd.Layers.BlendMode.LinearBurn">
      <summary>
            Linear burn blend mode.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Psd.Layers.BlendMode.LinearDodge">
      <summary>
            Linear dodge blend mode.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Psd.Layers.BlendMode.VividLight">
      <summary>
            Vivid light blend mode.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Psd.Layers.BlendMode.LinearLight">
      <summary>
            Linear light blend mode.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Psd.Layers.BlendMode.PinLight">
      <summary>
            Pin light blend mode.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Psd.Layers.BlendMode.HardMix">
      <summary>
            Hard mix blend mode.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Psd.Layers.BlendMode.PassThrough">
      <summary>
            Pass through blend mode.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Psd.Layers.BlendMode.DarkerColor">
      <summary>
            Darker color blend mode.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Psd.Layers.BlendMode.LighterColor">
      <summary>
            Lighter color blend mode.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Psd.Layers.BlendMode.Subtract">
      <summary>
            Subtract blend mode.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Psd.Layers.BlendMode.Divide">
      <summary>
            Divide blend mode.
            </summary>
    </member>
    <member name="T:Aspose.Imaging.FileFormats.Psd.Layers.BlendRange">
      <summary>
            The blend range.
            </summary>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Psd.Layers.BlendRange.Source">
      <summary>
            Gets or sets the source blend range.
            </summary>
      <value>
            The source blend range.
            </value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Psd.Layers.BlendRange.Destination">
      <summary>
            Gets or sets the destination blend range.
            </summary>
      <value>
            The destination blend range.
            </value>
    </member>
    <member name="T:Aspose.Imaging.FileFormats.Psd.Layers.ChannelInformation">
      <summary>
            The channel information.
            </summary>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Psd.Layers.ChannelInformation.CompressionMethod">
      <summary>
            Gets or sets the compression method.
            </summary>
      <value>
            The compression method.
            </value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Psd.Layers.ChannelInformation.ChannelID">
      <summary>
            Gets or sets the channel ID.
            </summary>
      <value>
            The channel ID.
            </value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Psd.Layers.ChannelInformation.Length">
      <summary>
            Gets the channel length in bytes.
            </summary>
    </member>
    <member name="T:Aspose.Imaging.FileFormats.Psd.Layers.GlobalLayerMaskInfo">
      <summary>
            The global layer mask section.
            </summary>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Psd.Layers.GlobalLayerMaskInfo.Length">
      <summary>
            Gets the global layer mask section length in bytes.
            </summary>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Psd.Layers.GlobalLayerMaskInfo.OverlayColorSpace">
      <summary>
            Gets or sets the overlay color space (undocumented value).
            </summary>
      <value>
            The overlay color space.
            </value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Psd.Layers.GlobalLayerMaskInfo.AlphaMask">
      <summary>
            Gets or sets the alpha mask.
            </summary>
      <value>
            The alpha mask.
            </value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Psd.Layers.GlobalLayerMaskInfo.RedMask">
      <summary>
            Gets or sets the red mask.
            </summary>
      <value>
            The red mask.
            </value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Psd.Layers.GlobalLayerMaskInfo.GreenMask">
      <summary>
            Gets or sets the green mask.
            </summary>
      <value>
            The green mask.
            </value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Psd.Layers.GlobalLayerMaskInfo.BlueMask">
      <summary>
            Gets or sets the blue mask.
            </summary>
      <value>
            The blue mask.
            </value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Psd.Layers.GlobalLayerMaskInfo.Opacity">
      <summary>
            Gets or sets global layers opacity. 0 = transparent, 100 = opaque.
            </summary>
      <value>
            The global layers opacity.
            </value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Psd.Layers.GlobalLayerMaskInfo.Kind">
      <summary>
            Gets or sets the kind.
            0 = Color selected--i.e. inverted;
            1 = Color protected;
            128 = use value stored per layer. This value is preferred.
            The others are for backward compatibility with beta versions.
            </summary>
      <value>
            The kind.
            </value>
    </member>
    <member name="T:Aspose.Imaging.FileFormats.Psd.Layers.ILayerResourceLoader">
      <summary>
            The layer resource loader.
            </summary>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Psd.Layers.ILayerResourceLoader.CanLoad(Aspose.Imaging.StreamContainer,System.Int32)">
      <summary>
            Determines whether layer resource can be loaded from the specified <see cref="T:Aspose.Imaging.StreamContainer" />.
            </summary>
      <param name="streamContainer">The stream container.</param>
      <param name="psdVersion">The PSD version.</param>
      <returns>
        <c>true</c> if layer resource can be loaded from the specified <see cref="T:Aspose.Imaging.StreamContainer" />; otherwise, <c>false</c>.
            </returns>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Psd.Layers.ILayerResourceLoader.Load(Aspose.Imaging.StreamContainer,System.Int32)">
      <summary>
            Loads the <see cref="T:Aspose.Imaging.FileFormats.Psd.Layers.LayerResource" />.
            </summary>
      <param name="streamContainer">The stream container to load from.</param>
      <param name="psdVersion">The PSD version.</param>
      <returns>
            The loaded resource.
            </returns>
    </member>
    <member name="T:Aspose.Imaging.FileFormats.Psd.Layers.LayerBlendingRangesData">
      <summary>
            The layer blending ranges data.
            </summary>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Psd.Layers.LayerBlendingRangesData.Length">
      <summary>
            Gets the length of layer blending ranges data in bytes.
            </summary>
      <value>
            The length of layer blending ranges data.
            </value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Psd.Layers.LayerBlendingRangesData.CompositeBlendRange">
      <summary>
            Gets or sets the composite blend ranges.
            </summary>
      <value>
            The composite blend ranges.
            </value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Psd.Layers.LayerBlendingRangesData.ChannelBlendRanges">
      <summary>
            Gets or sets the channel blend ranges.
            </summary>
      <value>
            The channel blend ranges.
            </value>
    </member>
    <member name="T:Aspose.Imaging.FileFormats.Psd.Layers.LayerMaskData">
      <summary>
            The layer mask data.
            </summary>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Psd.Layers.LayerMaskData.#ctor(System.Int32)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.FileFormats.Psd.Layers.LayerMaskData" /> class.
            </summary>
      <param name="dataSize">The data size.</param>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Psd.Layers.LayerMaskData.SaveCommon(Aspose.Imaging.StreamContainer)">
      <summary>
            Saves the common info.
            </summary>
      <param name="streamContainer">The stream container.</param>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Psd.Layers.LayerMaskData.DataSize">
      <summary>
            Gets the size of the layer mask mask data.
            </summary>
      <value>
            The size of the layer mask mask data.
            </value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Psd.Layers.LayerMaskData.Top">
      <summary>
            Gets or sets the top layer mask position.
            </summary>
      <value>
            The top layer mask position.
            </value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Psd.Layers.LayerMaskData.Left">
      <summary>
            Gets or sets the left layer mask position.
            </summary>
      <value>
            The left layer mask position.
            </value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Psd.Layers.LayerMaskData.Bottom">
      <summary>
            Gets or sets the bottom layer mask position.
            </summary>
      <value>
            The bottom layer mask position.
            </value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Psd.Layers.LayerMaskData.Right">
      <summary>
            Gets or sets the right layer mask position.
            </summary>
      <value>
            The right layer mask position.
            </value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Psd.Layers.LayerMaskData.DefaultColor">
      <summary>
            Gets or sets the default color.
            </summary>
      <value>
            The default color.
            </value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Psd.Layers.LayerMaskData.Flags">
      <summary>
            Gets or sets the layer mask flags.
            </summary>
      <value>
            The layer mask flags.
            </value>
    </member>
    <member name="T:Aspose.Imaging.FileFormats.Psd.Layers.LayerMaskDataFull">
      <summary>
            The full layer mask information.
            </summary>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Psd.Layers.LayerMaskDataFull.BackgroundColor">
      <summary>
            Gets or sets the background color.
            </summary>
      <value>
            The background color.
            </value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Psd.Layers.LayerMaskDataFull.RealFlags">
      <summary>
            Gets or sets the real layer mask flags.
            </summary>
      <value>
            The real layer mask flags.
            </value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Psd.Layers.LayerMaskDataFull.EnclosingTop">
      <summary>
            Gets or sets the enclosing top layer mask position.
            </summary>
      <value>
            The top layer mask position.
            </value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Psd.Layers.LayerMaskDataFull.EnclosingLeft">
      <summary>
            Gets or sets the enclosing left layer mask position.
            </summary>
      <value>
            The left layer mask position.
            </value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Psd.Layers.LayerMaskDataFull.EnclosingBottom">
      <summary>
            Gets or sets the enclosing bottom layer mask position.
            </summary>
      <value>
            The bottom layer mask position.
            </value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Psd.Layers.LayerMaskDataFull.EnclosingRight">
      <summary>
            Gets or sets the enclosing right layer mask position.
            </summary>
      <value>
            The right layer mask position.
            </value>
    </member>
    <member name="T:Aspose.Imaging.FileFormats.Psd.Layers.LayerMaskDataShort">
      <summary>
            The short layer mask information.
            </summary>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Psd.Layers.LayerMaskDataShort.Padding">
      <summary>
            Gets or sets the layer mask padding.
            </summary>
      <value>
            The layer mask padding.
            </value>
    </member>
    <member name="T:Aspose.Imaging.FileFormats.Psd.Layers.LayerMaskFlags">
      <summary>
            The layer mask flags
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Psd.Layers.LayerMaskFlags.None">
      <summary>
            No flags defined.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Psd.Layers.LayerMaskFlags.RelativeToLayer">
      <summary>
            Position is relative to layer.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Psd.Layers.LayerMaskFlags.Disabled">
      <summary>
            Layer mask is disabled.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Psd.Layers.LayerMaskFlags.InvertedWhenBlending">
      <summary>
            Invert layer mask when blending.
            </summary>
    </member>
    <member name="T:Aspose.Imaging.FileFormats.Psd.Layers.Layer">
      <summary>
            The psd layer.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Psd.Layers.Layer.LayerHeaderSize">
      <summary>
            The layer header size.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Psd.Layers.Layer.BlendSignature">
      <summary>
            Represents blend mode signature.
            </summary>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Psd.Layers.Layer.Resources">
      <summary>
            Gets or sets the layer resources.
            </summary>
      <value>
            The layer resources.
            </value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Psd.Layers.Layer.Name">
      <summary>
            Gets or sets the layer name.
            </summary>
      <value>
            The layer name.
            </value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Psd.Layers.Layer.Top">
      <summary>
            Gets or sets the top layer position.
            </summary>
      <value>
            The top layer position.
            </value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Psd.Layers.Layer.Left">
      <summary>
            Gets or sets the left layer position.
            </summary>
      <value>
            The left layer position.
            </value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Psd.Layers.Layer.Bottom">
      <summary>
            Gets or sets the bottom layer position.
            </summary>
      <value>
            The bottom layer position.
            </value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Psd.Layers.Layer.Right">
      <summary>
            Gets or sets the right layer position.
            </summary>
      <value>
            The right layer position.
            </value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Psd.Layers.Layer.Bounds">
      <summary>
            Gets the bounds.
            </summary>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Psd.Layers.Layer.ChannelsCount">
      <summary>
            Gets the layer's channels count.
            </summary>
      <value>
            The layer's channels count.
            </value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Psd.Layers.Layer.ChannelInformation">
      <summary>
            Gets or sets the channel information.
            </summary>
      <value>
            The channel information.
            </value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Psd.Layers.Layer.BlendModeSignature">
      <summary>
            Gets the blend mode signature.
            </summary>
      <value>
            The blend mode signature.
            </value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Psd.Layers.Layer.BlendModeKey">
      <summary>
            Gets or sets the blend mode key.
            </summary>
      <value>
            The blend mode key.
            </value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Psd.Layers.Layer.Opacity">
      <summary>
            Gets or sets the layer opacity. 0 = transparent, 255 = opaque.
            </summary>
      <value>
            The layer opacity.
            </value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Psd.Layers.Layer.Clipping">
      <summary>
            Gets or sets the layer clipping. 0 = base, 1 = non-base.
            </summary>
      <value>
            The layer clipping.
            </value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Psd.Layers.Layer.Flags">
      <summary>
            Gets or sets the layer flags.
            bit 0 = transparency protected;
            bit 1 = visible;
            bit 2 = obsolete;
            bit 3 = 1 for Photoshop 5.0 and later, tells if bit 4 has useful information;
            bit 4 = pixel data irrelevant to appearance of document.
            </summary>
      <value>
            The layer flags.
            </value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Psd.Layers.Layer.Filler">
      <summary>
            Gets or sets the layer filler.
            </summary>
      <value>
            The layer filler.
            </value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Psd.Layers.Layer.Length">
      <summary>
            Gets the overall layer length in bytes.
            </summary>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Psd.Layers.Layer.ExtraLength">
      <summary>
            Gets the layer extra information length in bytes.
            </summary>
      <value>
            The extra layer length.
            </value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Psd.Layers.Layer.LayerMaskData">
      <summary>
            Gets or sets the layer mask data.
            </summary>
      <value>
            The layer mask data.
            </value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Psd.Layers.Layer.LayerBlendingRangesData">
      <summary>
            Gets or sets the layer blending ranges data.
            </summary>
      <value>
            The layer blending ranges data.
            </value>
    </member>
    <member name="T:Aspose.Imaging.FileFormats.Psd.Layers.LayerResource">
      <summary>
            Represents layer info.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Psd.Layers.LayerResource.ResourceSignature">
      <summary>
            The common resource signature.
            </summary>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Psd.Layers.LayerResource.ToString">
      <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
      <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Psd.Layers.LayerResource.Save(Aspose.Imaging.StreamContainer,System.Int32)">
      <summary>
            Saves the resource to the specified stream container.
            </summary>
      <param name="streamContainer">The stream container to save to.</param>
      <param name="psdVersion">The PSD version.</param>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Psd.Layers.LayerResource.SaveResourceHeader(Aspose.Imaging.StreamContainer)">
      <summary>
            Saves the resource header.
            </summary>
      <param name="streamContainer">The stream container.</param>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Psd.Layers.LayerResource.Signature">
      <summary>
            Gets the layer resource signature.
            </summary>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Psd.Layers.LayerResource.Key">
      <summary>
            Gets the layer resource key.
            </summary>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Psd.Layers.LayerResource.Length">
      <summary>
            Gets the layer resource length in bytes.
            </summary>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Psd.Layers.LayerResource.PsdVersion">
      <summary>
            Gets the minimal psd version required for layer resource. 0 indicates no restrictions.
            </summary>
    </member>
    <member name="T:Aspose.Imaging.FileFormats.Psd.Layers.LayerResourcesRegistry">
      <summary>
            Represents the layer resources registry.
            </summary>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Psd.Layers.LayerResourcesRegistry.GetFirstSupportedDescriptorByTypeName(System.String)">
      <summary>
            Gets the first supported descriptor by its type name.
            </summary>
      <param name="descriptorTypeName">The descriptor type name.</param>
      <returns>The first found opener descriptor or null if not such descriptor is found.</returns>
      <remarks>The first opener descriptor will be actually the last registered.</remarks>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Psd.Layers.LayerResourcesRegistry.GetFirstSupportedDescriptor(System.IO.Stream,System.Int32)">
      <summary>
            Gets the first supported opener descriptor.
            </summary>
      <param name="stream">The stream.</param>
      <param name="psdVersion">The PSD version.</param>
      <returns>
            The layer resource loader descriptor or null if no loader descriptor supported for such stream.
            </returns>
      <remarks>
            The first loader will be actually the last registered.
            </remarks>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Psd.Layers.LayerResourcesRegistry.LoadResourceByFirstSupportedDescriptor(System.IO.Stream,System.Int32)">
      <summary>
            Loads <see cref="T:Aspose.Imaging.FileFormats.Psd.Layers.LayerResource" /> using first found opener suitable for the specified <paramref name="stream" />.
            </summary>
      <param name="stream">The stream.</param>
      <param name="psdVersion">The PSD version.</param>
      <returns>
            The loaded <see cref="T:Aspose.Imaging.FileFormats.Psd.Layers.LayerResource" /> or null if no opener is found.
            </returns>
      <remarks>
            The first opener will be actually the last registered.
            </remarks>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Psd.Layers.LayerResourcesRegistry.RegisterOpener(Aspose.Imaging.FileFormats.Psd.Layers.ILayerResourceLoader)">
      <summary>
            Registers the opener.
            </summary>
      <param name="openerDescriptor">The opener descriptor to register.</param>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Psd.Layers.LayerResourcesRegistry.UnregisterOpener(Aspose.Imaging.FileFormats.Psd.Layers.ILayerResourceLoader)">
      <summary>
            Unregisters the opener.
            </summary>
      <param name="openerDescriptor">The opener descriptor to unregister.</param>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Psd.Layers.LayerResourcesRegistry.RegisteredDescriptors">
      <summary>
            Gets the registered descriptors.
            </summary>
      <value>The registered descriptors.</value>
    </member>
    <member name="T:Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.ClassID">
      <summary>
            The PSD Class ID object.
            </summary>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.ClassID.#ctor(System.Byte[])">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.ClassID" /> class.
            </summary>
      <param name="classID">The class ID as series of bytes.</param>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.ClassID.#ctor(System.Int32)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.ClassID" /> class.
            </summary>
      <param name="classID">The class ID.</param>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.ClassID.#ctor(System.UInt32)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.ClassID" /> class.
            </summary>
      <param name="classID">The class ID.</param>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.ClassID.#ctor(System.String)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.ClassID" /> class.
            </summary>
      <param name="classID">The class ID in ASCII encoding.</param>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.ClassID.Save(Aspose.Imaging.StreamContainer)">
      <summary>
            Saves the class information to the specified stream container.
            </summary>
      <param name="streamContainer">The stream container to save to.</param>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.ClassID.Bytes">
      <summary>
            Gets the bytes representing class ID.
            </summary>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.ClassID.ClassName">
      <summary>
            Gets the class name as ASCII encoding.
            </summary>
      <value>
            The class name.
            </value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.ClassID.Length">
      <summary>
            Gets the class ID length in bytes.
            </summary>
    </member>
    <member name="T:Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.IOSTypeStructureLoader">
      <summary>
            The <see cref="T:Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.OSTypeStructure" /> resource loader.
            </summary>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.IOSTypeStructureLoader.CanLoad(Aspose.Imaging.StreamContainer)">
      <summary>
            Determines whether <see cref="T:Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.OSTypeStructure" /> resource can be loaded from the specified <see cref="T:Aspose.Imaging.StreamContainer" />.
            </summary>
      <param name="streamContainer">The stream container.</param>
      <returns>
        <c>true</c> if <see cref="T:Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.OSTypeStructure" /> resource can be loaded from the specified <see cref="T:Aspose.Imaging.StreamContainer" />; otherwise, <c>false</c>.
            </returns>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.IOSTypeStructureLoader.Load(Aspose.Imaging.StreamContainer)">
      <summary>
            Loads the <see cref="T:Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.OSTypeStructure" />.
            </summary>
      <param name="streamContainer">The stream container to load from.</param>
      <returns>
            The loaded <see cref="T:Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.OSTypeStructure" /> resource.
            </returns>
    </member>
    <member name="T:Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.OSTypeStructure">
      <summary>
            Represents the OS type structure.
            </summary>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.OSTypeStructure.#ctor(Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.ClassID)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.OSTypeStructure" /> class.
            </summary>
      <param name="keyName">The key name.</param>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.OSTypeStructure.Save(Aspose.Imaging.StreamContainer)">
      <summary>
            Saves the structure to the specified stream container.
            </summary>
      <param name="streamContainer">The stream container.</param>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.OSTypeStructure.SaveData(Aspose.Imaging.StreamContainer)">
      <summary>
            Saves the data.
            </summary>
      <param name="streamContainer">The stream container.</param>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.OSTypeStructure.GetHeaderLength">
      <summary>
            Gets the header length.
            </summary>
      <returns>The header length</returns>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.OSTypeStructure.Key">
      <summary>
            Gets the structure key.
            </summary>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.OSTypeStructure.KeyName">
      <summary>
            Gets or sets the key name.
            </summary>
      <value>
            The key name.
            </value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.OSTypeStructure.Length">
      <summary>
            Gets the <see cref="T:Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.OSTypeStructure" /> length in bytes.
            </summary>
    </member>
    <member name="T:Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.OSTypeStructuresRegistry">
      <summary>
            Represents the <see cref="T:Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.OSTypeStructure" /> resources registry.
            </summary>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.OSTypeStructuresRegistry.GetFirstSupportedDescriptorByTypeName(System.String)">
      <summary>
            Gets the first supported descriptor by its type name.
            </summary>
      <param name="descriptorTypeName">The descriptor type name.</param>
      <returns>The first found opener descriptor or null if not such descriptor is found.</returns>
      <remarks>The first opener descriptor will be actually the last registered.</remarks>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.OSTypeStructuresRegistry.GetFirstSupportedDescriptor(System.IO.Stream)">
      <summary>
            Gets the first supported opener descriptor.
            </summary>
      <param name="stream">The stream.</param>
      <returns>
            The layer resource loader descriptor or null if no loader descriptor supported for such stream.
            </returns>
      <remarks>
            The first loader will be actually the last registered.
            </remarks>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.OSTypeStructuresRegistry.LoadResourceByFirstSupportedDescriptor(System.IO.Stream)">
      <summary>
            Loads <see cref="T:Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.OSTypeStructure" /> using first found opener suitable for the specified <paramref name="stream" />.
            </summary>
      <param name="stream">The stream.</param>
      <returns>
            The loaded <see cref="T:Aspose.Imaging.FileFormats.Psd.Layers.LayerResource" /> or null if no opener is found.
            </returns>
      <remarks>
            The first opener will be actually the last registered.
            </remarks>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.OSTypeStructuresRegistry.RegisterOpener(Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.IOSTypeStructureLoader)">
      <summary>
            Registers the opener.
            </summary>
      <param name="openerDescriptor">The opener descriptor to register.</param>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.OSTypeStructuresRegistry.UnregisterOpener(Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.IOSTypeStructureLoader)">
      <summary>
            Unregisters the opener.
            </summary>
      <param name="openerDescriptor">The opener descriptor to unregister.</param>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.OSTypeStructuresRegistry.RegisteredDescriptors">
      <summary>
            Gets the registered descriptors.
            </summary>
      <value>The registered descriptors.</value>
    </member>
    <member name="T:Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.TypeToolFontInfo">
      <summary>
            Contains information about type tool font.
            </summary>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.TypeToolFontInfo.Save(Aspose.Imaging.StreamContainer)">
      <summary>
            Saves the <see cref="T:Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.TypeToolFontInfo" /> information to the specified stream container.
            </summary>
      <param name="streamContainer">The stream container to save to.</param>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.TypeToolFontInfo.MarkValue">
      <summary>
            Gets or sets the mark value.
            </summary>
      <value>
            The mark value.
            </value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.TypeToolFontInfo.FontTypeData">
      <summary>
            Gets or sets the font type data.
            </summary>
      <value>
            The font type data.
            </value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.TypeToolFontInfo.FontName">
      <summary>
            Gets or sets the font name.
            </summary>
      <value>
            The font name.
            </value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.TypeToolFontInfo.FontFamily">
      <summary>
            Gets or sets the font family.
            </summary>
      <value>
            The font family.
            </value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.TypeToolFontInfo.FontStyle">
      <summary>
            Gets or sets the font style name.
            </summary>
      <value>
            The font style name.
            </value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.TypeToolFontInfo.ScriptValue">
      <summary>
            Gets or sets the script value.
            </summary>
      <value>
            The script value.
            </value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.TypeToolFontInfo.DesignAxes">
      <summary>
            Gets or sets the design axes vector to follow.
            </summary>
      <value>
            The design axes vector to follow.
            </value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.TypeToolFontInfo.DesignVectorValue">
      <summary>
            Gets or sets the design vector value.
            </summary>
      <value>
            The design vector value.
            </value>
    </member>
    <member name="T:Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.TypeToolInfo6Resource">
      <summary>
            The type tool information. For PSD version higher or equal to the 6.0.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.TypeToolInfo6Resource.TypeToolKey">
      <summary>
            The type tool info key.
            </summary>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.TypeToolInfo6Resource.#ctor(Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.ClassID,Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.ClassID)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.TypeToolInfo6Resource" /> class.
            </summary>
      <param name="classID">The class ID.</param>
      <param name="warpClassID">The warp class ID.</param>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.TypeToolInfo6Resource.Save(Aspose.Imaging.StreamContainer,System.Int32)">
      <summary>
            Saves the resource to the specified stream container.
            </summary>
      <param name="streamContainer">The stream container to save to.</param>
      <param name="psdVersion">The PSD version.</param>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.TypeToolInfo6Resource.WarpItems">
      <summary>
            Gets or sets the warp items.
            </summary>
      <value>
            The warp items.
            </value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.TypeToolInfo6Resource.WarpClassName">
      <summary>
            Gets or sets the warp class name.
            </summary>
      <value>
            The warp class name.
            </value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.TypeToolInfo6Resource.WarpClassID">
      <summary>
            Gets or sets the class ID.
            </summary>
      <value>
            The class ID.
            </value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.TypeToolInfo6Resource.WarpVersion">
      <summary>
            Gets or sets the warp version.
            </summary>
      <value>
            The warp version.
            </value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.TypeToolInfo6Resource.WarpDescriptorVersion">
      <summary>
            Gets or sets the warp descriptor version.
            </summary>
      <value>
            The warp descriptor version.
            </value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.TypeToolInfo6Resource.Version">
      <summary>
            Gets or sets the type tool version.
            </summary>
      <value>
            The type tool version.
            </value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.TypeToolInfo6Resource.Left">
      <summary>
            Gets or sets the left location.
            </summary>
      <value>
            The left location.
            </value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.TypeToolInfo6Resource.Top">
      <summary>
            Gets or sets the top  location.
            </summary>
      <value>
            The top location.
            </value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.TypeToolInfo6Resource.Right">
      <summary>
            Gets or sets the right location.
            </summary>
      <value>
            The right location.
            </value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.TypeToolInfo6Resource.Bottom">
      <summary>
            Gets or sets the bottom location.
            </summary>
      <value>
            The bottom location.
            </value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.TypeToolInfo6Resource.TransformMatrix">
      <summary>
            Gets or sets the transform matrix.
            </summary>
      <value>
            The transform matrix.
            </value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.TypeToolInfo6Resource.TextVersion">
      <summary>
            Gets or sets the text version.
            </summary>
      <value>
            The text version.
            </value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.TypeToolInfo6Resource.DescriptorVersion">
      <summary>
            Gets or sets the descriptor version.
            </summary>
      <value>
            The descriptor version.
            </value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.TypeToolInfo6Resource.ClassName">
      <summary>
            Gets or sets the class name.
            </summary>
      <value>
            The class name.
            </value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.TypeToolInfo6Resource.ClassID">
      <summary>
            Gets or sets the class ID.
            </summary>
      <value>
            The class ID.
            </value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.TypeToolInfo6Resource.Signature">
      <summary>
            Gets the layer resource signature.
            </summary>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.TypeToolInfo6Resource.Key">
      <summary>
            Gets the layer resource key.
            </summary>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.TypeToolInfo6Resource.Length">
      <summary>
            Gets the layer resource length in bytes.
            </summary>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.TypeToolInfo6Resource.PsdVersion">
      <summary>
            Gets the minimal psd version required for layer resource. 0 indicates no restrictions.
            </summary>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.TypeToolInfo6Resource.Items">
      <summary>
            Gets or sets the items.
            </summary>
      <value>
            The items.
            </value>
    </member>
    <member name="T:Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.TypeToolInfoStructures.AliasStructure">
      <summary>
            The alias structure.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.TypeToolInfoStructures.AliasStructure.StructureKey">
      <summary>
            Identifies the structure key.
            </summary>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.TypeToolInfoStructures.AliasStructure.#ctor(Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.ClassID)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.TypeToolInfoStructures.AliasStructure" /> class.
            </summary>
      <param name="keyName">The key name.</param>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.TypeToolInfoStructures.AliasStructure.Key">
      <summary>
            Gets the structure key.
            </summary>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.TypeToolInfoStructures.AliasStructure.DataLength">
      <summary>
            Gets the exact data length in bytes.
            </summary>
      <value>
            The data length in bytes.
            </value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.TypeToolInfoStructures.AliasStructure.FullPath">
      <summary>
            Gets or sets the full path.
            </summary>
      <value>
            The full path.
            </value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.TypeToolInfoStructures.AliasStructure.Length">
      <summary>
            Gets the <see cref="T:Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.OSTypeStructure" /> length in bytes.
            </summary>
    </member>
    <member name="T:Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.TypeToolInfoStructures.BooleanStructure">
      <summary>
            The boolean structure.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.TypeToolInfoStructures.BooleanStructure.StructureKey">
      <summary>
            Identifies the structure key.
            </summary>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.TypeToolInfoStructures.BooleanStructure.#ctor(Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.ClassID)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.TypeToolInfoStructures.BooleanStructure" /> class.
            </summary>
      <param name="keyName">The key name.</param>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.TypeToolInfoStructures.BooleanStructure.Key">
      <summary>
            Gets the structure key.
            </summary>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.TypeToolInfoStructures.BooleanStructure.Value">
      <summary>
            Gets or sets a boolean value.
            </summary>
      <value>
            A boolean value.
            </value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.TypeToolInfoStructures.BooleanStructure.Length">
      <summary>
            Gets the <see cref="T:Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.OSTypeStructure" /> length in bytes.
            </summary>
    </member>
    <member name="T:Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.TypeToolInfoStructures.ClassStructure">
      <summary>
            The class structure.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.TypeToolInfoStructures.ClassStructure.StructureKeyClss">
      <summary>
            Identifies the structure key.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.TypeToolInfoStructures.ClassStructure.StructureKeyType">
      <summary>
            Identifies the structure key.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.TypeToolInfoStructures.ClassStructure.StructureKeyGlbc">
      <summary>
            Identifies the structure key.
            </summary>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.TypeToolInfoStructures.ClassStructure.#ctor(Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.ClassID,Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.ClassID,System.Int32)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.TypeToolInfoStructures.ClassStructure" /> class.
            </summary>
      <param name="keyName">Name of the key.</param>
      <param name="classID">The class ID.</param>
      <param name="structureKey">The structure key.</param>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.TypeToolInfoStructures.ClassStructure.ClassID">
      <summary>
            Gets or sets the class ID.
            </summary>
      <value>
            The class ID.
            </value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.TypeToolInfoStructures.ClassStructure.Key">
      <summary>
            Gets the structure key.
            </summary>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.TypeToolInfoStructures.ClassStructure.ClassName">
      <summary>
            Gets or sets the class name.
            </summary>
      <value>
            The class name.
            </value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.TypeToolInfoStructures.ClassStructure.Length">
      <summary>
            Gets the <see cref="T:Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.OSTypeStructure" /> length in bytes.
            </summary>
    </member>
    <member name="T:Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.TypeToolInfoStructures.DoubleStructure">
      <summary>
            The double structure.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.TypeToolInfoStructures.DoubleStructure.StructureKey">
      <summary>
            Identifies the structure key.
            </summary>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.TypeToolInfoStructures.DoubleStructure.#ctor(Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.ClassID)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.TypeToolInfoStructures.DoubleStructure" /> class.
            </summary>
      <param name="keyName">The key name.</param>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.TypeToolInfoStructures.DoubleStructure.Value">
      <summary>
            Gets or sets the double value.
            </summary>
      <value>
            The double value.
            </value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.TypeToolInfoStructures.DoubleStructure.Key">
      <summary>
            Gets the structure key.
            </summary>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.TypeToolInfoStructures.DoubleStructure.Length">
      <summary>
            Gets the <see cref="T:Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.OSTypeStructure" /> length in bytes.
            </summary>
    </member>
    <member name="T:Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.TypeToolInfoStructures.EnumeratedDescriptorStructure">
      <summary>
            The enumerated descriptor structure.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.TypeToolInfoStructures.EnumeratedDescriptorStructure.StructureKey">
      <summary>
            The enumerated descriptor key.
            </summary>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.TypeToolInfoStructures.EnumeratedDescriptorStructure.#ctor(Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.ClassID,Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.ClassID,Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.ClassID)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.TypeToolInfoStructures.EnumeratedDescriptorStructure" /> class.
            </summary>
      <param name="keyName">The key name.</param>
      <param name="typeID">The type ID.</param>
      <param name="enumName">The enum name.</param>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.TypeToolInfoStructures.EnumeratedDescriptorStructure.SaveData(Aspose.Imaging.StreamContainer)">
      <summary>
            Saves the data.
            </summary>
      <param name="streamContainer">The stream container.</param>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.TypeToolInfoStructures.EnumeratedDescriptorStructure.Key">
      <summary>
            Gets the key.
            </summary>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.TypeToolInfoStructures.EnumeratedDescriptorStructure.TypeID">
      <summary>
            Gets or sets the type ID.
            </summary>
      <value>
            The type ID.
            </value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.TypeToolInfoStructures.EnumeratedDescriptorStructure.EnumName">
      <summary>
            Gets or sets the enum name.
            </summary>
      <value>
            The enum name.
            </value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.TypeToolInfoStructures.EnumeratedDescriptorStructure.Length">
      <summary>
            Gets the <see cref="T:Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.OSTypeStructure" /> length in bytes.
            </summary>
    </member>
    <member name="T:Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.TypeToolInfoStructures.EnumeratedReferenceStructure">
      <summary>
            Enumerated reference structure.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.TypeToolInfoStructures.EnumeratedReferenceStructure.EnumeratedStructureKey">
      <summary>
            Identifies the structure key.
            </summary>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.TypeToolInfoStructures.EnumeratedReferenceStructure.#ctor(Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.ClassID,Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.ClassID,Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.ClassID,Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.ClassID)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.TypeToolInfoStructures.EnumeratedReferenceStructure" /> class.
            </summary>
      <param name="keyName">The key name.</param>
      <param name="typeID">The type ID.</param>
      <param name="enumName">The enum name.</param>
      <param name="classID">The class ID.</param>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.TypeToolInfoStructures.EnumeratedReferenceStructure.Key">
      <summary>
            Gets the key.
            </summary>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.TypeToolInfoStructures.EnumeratedReferenceStructure.ClassName">
      <summary>
            Gets or sets the class name.
            </summary>
      <value>
            The class name.
            </value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.TypeToolInfoStructures.EnumeratedReferenceStructure.ClassID">
      <summary>
            Gets or sets the class ID.
            </summary>
      <value>
            The class ID.
            </value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.TypeToolInfoStructures.EnumeratedReferenceStructure.Length">
      <summary>
            Gets the <see cref="T:Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.OSTypeStructure" /> length in bytes.
            </summary>
    </member>
    <member name="T:Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.TypeToolInfoStructures.IntegerStructure">
      <summary>
            The integer structure.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.TypeToolInfoStructures.IntegerStructure.StructureKey">
      <summary>
            The integer structure key.
            </summary>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.TypeToolInfoStructures.IntegerStructure.#ctor(Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.ClassID)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.TypeToolInfoStructures.IntegerStructure" /> class.
            </summary>
      <param name="keyName">The key name.</param>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.TypeToolInfoStructures.IntegerStructure.Key">
      <summary>
            Gets the key.
            </summary>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.TypeToolInfoStructures.IntegerStructure.Value">
      <summary>
            Gets or sets an integer value.
            </summary>
      <value>
            An integer value.
            </value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.TypeToolInfoStructures.IntegerStructure.Length">
      <summary>
            Gets the <see cref="T:Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.OSTypeStructure" /> length in bytes.
            </summary>
    </member>
    <member name="T:Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.TypeToolInfoStructures.ListStructure">
      <summary>
            The list structure.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.TypeToolInfoStructures.ListStructure.StructureKey">
      <summary>
            Identifies the structure key.
            </summary>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.TypeToolInfoStructures.ListStructure.#ctor(Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.ClassID)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.TypeToolInfoStructures.ListStructure" /> class.
            </summary>
      <param name="keyName">The key name.</param>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.TypeToolInfoStructures.ListStructure.Key">
      <summary>
            Gets the structure key.
            </summary>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.TypeToolInfoStructures.ListStructure.ItemsCount">
      <summary>
            Gets the items count.
            </summary>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.TypeToolInfoStructures.ListStructure.Types">
      <summary>
            Gets or sets the types.
            </summary>
      <value>
            The types.
            </value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.TypeToolInfoStructures.ListStructure.Length">
      <summary>
            Gets the <see cref="T:Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.OSTypeStructure" /> length in bytes.
            </summary>
    </member>
    <member name="T:Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.TypeToolInfoStructures.OffsetStructure">
      <summary>
            The offset structure.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.TypeToolInfoStructures.OffsetStructure.StructureKey">
      <summary>
            Identifies the structure key.
            </summary>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.TypeToolInfoStructures.OffsetStructure.#ctor(Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.ClassID,Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.ClassID)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.TypeToolInfoStructures.OffsetStructure" /> class.
            </summary>
      <param name="keyName">The key name.</param>
      <param name="classID">The class ID.</param>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.TypeToolInfoStructures.OffsetStructure.Key">
      <summary>
            Gets the structure key.
            </summary>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.TypeToolInfoStructures.OffsetStructure.ClassName">
      <summary>
            Gets or sets the class name.
            </summary>
      <value>
            The class name.
            </value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.TypeToolInfoStructures.OffsetStructure.ClassID">
      <summary>
            Gets or sets the class ID.
            </summary>
      <value>
            The class ID.
            </value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.TypeToolInfoStructures.OffsetStructure.Value">
      <summary>
            Gets or sets the integer value.
            </summary>
      <value>
            The integer value.
            </value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.TypeToolInfoStructures.OffsetStructure.Length">
      <summary>
            Gets the <see cref="T:Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.OSTypeStructure" /> length in bytes.
            </summary>
    </member>
    <member name="T:Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.TypeToolInfoStructures.PropertyStructure">
      <summary>
            The property structure.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.TypeToolInfoStructures.PropertyStructure.StructureKey">
      <summary>
            Identifies the structure key.
            </summary>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.TypeToolInfoStructures.PropertyStructure.#ctor(Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.ClassID,Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.ClassID,Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.ClassID)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.TypeToolInfoStructures.PropertyStructure" /> class.
            </summary>
      <param name="keyName">Name of the key.</param>
      <param name="classID">The class ID.</param>
      <param name="keyID">The key ID.</param>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.TypeToolInfoStructures.PropertyStructure.Key">
      <summary>
            Gets the structure key.
            </summary>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.TypeToolInfoStructures.PropertyStructure.ClassName">
      <summary>
            Gets or sets the class name.
            </summary>
      <value>
            The class name.
            </value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.TypeToolInfoStructures.PropertyStructure.ClassID">
      <summary>
            Gets or sets the class ID.
            </summary>
      <value>
            The class ID.
            </value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.TypeToolInfoStructures.PropertyStructure.KeyID">
      <summary>
            Gets or sets the key ID.
            </summary>
      <value>
            The key ID.
            </value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.TypeToolInfoStructures.PropertyStructure.Length">
      <summary>
            Gets the <see cref="T:Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.OSTypeStructure" /> length in bytes.
            </summary>
    </member>
    <member name="T:Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.TypeToolInfoStructures.RawDataStructure">
      <summary>
            The raw data structure.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.TypeToolInfoStructures.RawDataStructure.StructureKey">
      <summary>
            Identifies the structure key.
            </summary>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.TypeToolInfoStructures.RawDataStructure.#ctor(Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.ClassID)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.TypeToolInfoStructures.RawDataStructure" /> class.
            </summary>
      <param name="keyName">The key name.</param>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.TypeToolInfoStructures.RawDataStructure.Key">
      <summary>
            Gets the key.
            </summary>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.TypeToolInfoStructures.RawDataStructure.Data">
      <summary>
            Gets or sets the data.
            </summary>
      <value>
            The data.
            </value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.TypeToolInfoStructures.RawDataStructure.Length">
      <summary>
            Gets the <see cref="T:Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.OSTypeStructure" /> length in bytes.
            </summary>
    </member>
    <member name="T:Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.TypeToolInfoStructures.ReferenceStructure">
      <summary>
            The reference structure.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.TypeToolInfoStructures.ReferenceStructure.StructureKey">
      <summary>
            Identifies the structure key.
            </summary>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.TypeToolInfoStructures.ReferenceStructure.#ctor(Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.ClassID)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.TypeToolInfoStructures.ReferenceStructure" /> class.
            </summary>
      <param name="keyName">The key name.</param>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.TypeToolInfoStructures.ReferenceStructure.Key">
      <summary>
            Gets the structure key.
            </summary>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.TypeToolInfoStructures.ReferenceStructure.Items">
      <summary>
            Gets or sets the items.
            </summary>
      <value>
            The items.
            </value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.TypeToolInfoStructures.ReferenceStructure.Length">
      <summary>
            Gets the <see cref="T:Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.OSTypeStructure" /> length in bytes.
            </summary>
    </member>
    <member name="T:Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.TypeToolInfoStructures.StringStructure">
      <summary>
            The string structure.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.TypeToolInfoStructures.StringStructure.StructureKey">
      <summary>
            Identifies the structure key.
            </summary>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.TypeToolInfoStructures.StringStructure.#ctor(Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.ClassID)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.TypeToolInfoStructures.StringStructure" /> class.
            </summary>
      <param name="keyName">The key name.</param>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.TypeToolInfoStructures.StringStructure.Key">
      <summary>
            Gets the key.
            </summary>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.TypeToolInfoStructures.StringStructure.Value">
      <summary>
            Gets or sets the value.
            </summary>
      <value>
            The value.
            </value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.TypeToolInfoStructures.StringStructure.Length">
      <summary>
            Gets the <see cref="T:Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.OSTypeStructure" /> length in bytes.
            </summary>
    </member>
    <member name="T:Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.TypeToolInfoStructures.UnitStructure">
      <summary>
            The unit structure.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.TypeToolInfoStructures.UnitStructure.StructureKey">
      <summary>
            Identifies the structure key.
            </summary>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.TypeToolInfoStructures.UnitStructure.#ctor(Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.ClassID)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.TypeToolInfoStructures.UnitStructure" /> class.
            </summary>
      <param name="keyName">The key name.</param>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.TypeToolInfoStructures.UnitStructure.UnitType">
      <summary>
            Gets or sets the unit type.
            </summary>
      <value>
            The unit type.
            </value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.TypeToolInfoStructures.UnitStructure.Value">
      <summary>
            Gets or sets the value.
            </summary>
      <value>
            The value.
            </value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.TypeToolInfoStructures.UnitStructure.Key">
      <summary>
            Gets the structure key.
            </summary>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.TypeToolInfoStructures.UnitStructure.Length">
      <summary>
            Gets the <see cref="T:Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.OSTypeStructure" /> length in bytes.
            </summary>
    </member>
    <member name="T:Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.TypeToolInfoStructures.UnitTypes">
      <summary>
            The unit types.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.TypeToolInfoStructures.UnitTypes.Angle">
      <summary>
            Angle unit.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.TypeToolInfoStructures.UnitTypes.Density">
      <summary>
            Density unit.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.TypeToolInfoStructures.UnitTypes.Distance">
      <summary>
            Distance unit.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.TypeToolInfoStructures.UnitTypes.None">
      <summary>
            Undefined unit.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.TypeToolInfoStructures.UnitTypes.Percent">
      <summary>
            Percent unit.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.TypeToolInfoStructures.UnitTypes.Pixels">
      <summary>
            Pixels unit.
            </summary>
    </member>
    <member name="T:Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.TypeToolInfoStructures.UnknownStructure">
      <summary>
            The unknown structure.
            </summary>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.TypeToolInfoStructures.UnknownStructure.#ctor(Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.ClassID,System.Int32)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.TypeToolInfoStructures.UnknownStructure" /> class.
            </summary>
      <param name="keyName">The key name.</param>
      <param name="key">The structure key.</param>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.TypeToolInfoStructures.UnknownStructure.Key">
      <summary>
            Gets the structure key.
            </summary>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.TypeToolInfoStructures.UnknownStructure.Data">
      <summary>
            Gets or sets the data.
            </summary>
      <value>
            The data.
            </value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.TypeToolInfoStructures.UnknownStructure.Length">
      <summary>
            Gets the <see cref="T:Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.OSTypeStructure" /> length in bytes.
            </summary>
    </member>
    <member name="T:Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.TypeToolLineInfo">
      <summary>
            Type tool line info.
            </summary>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.TypeToolLineInfo.CharacterCount">
      <summary>
            Gets or sets the character count.
            </summary>
      <value>
            The character count.
            </value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.TypeToolLineInfo.Orientation">
      <summary>
            Gets or sets the orientation.
            </summary>
      <value>
            The orientation.
            </value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.TypeToolLineInfo.Alignment">
      <summary>
            Gets or sets the alignment.
            </summary>
      <value>
            The alignment.
            </value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.TypeToolLineInfo.Char">
      <summary>
            Gets or sets the char.
            </summary>
      <value>
            The char.
            </value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.TypeToolLineInfo.Style">
      <summary>
            Gets or sets the style.
            </summary>
      <value>
            The style.
            </value>
    </member>
    <member name="T:Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.TypeToolStyleInfo">
      <summary>
            Type tool style information.
            </summary>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.TypeToolStyleInfo.Save(Aspose.Imaging.StreamContainer,System.Int32)">
      <summary>
            Saves the <see cref="T:Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.TypeToolFontInfo" /> information to the specified stream container.
            </summary>
      <param name="streamContainer">The stream container to save to.</param>
      <param name="psdVersion">The PSD version.</param>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.TypeToolStyleInfo.MarkValue">
      <summary>
            Gets or sets the mark value.
            </summary>
      <value>
            The mark value.
            </value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.TypeToolStyleInfo.FaceMarkValue">
      <summary>
            Gets or sets the face mark value.
            </summary>
      <value>
            The face mark value.
            </value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.TypeToolStyleInfo.SizeValue">
      <summary>
            Gets or sets the size value.
            </summary>
      <value>
            The size value.
            </value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.TypeToolStyleInfo.TrackingValue">
      <summary>
            Gets or sets the tracking value.
            </summary>
      <value>
            The tracking value.
            </value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.TypeToolStyleInfo.KerningValue">
      <summary>
            Gets or sets the kerning value.
            </summary>
      <value>
            The kerning value.
            </value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.TypeToolStyleInfo.LeadingValue">
      <summary>
            Gets or sets the leading value.
            </summary>
      <value>
            The leading value.
            </value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.TypeToolStyleInfo.BaseShiftValue">
      <summary>
            Gets or sets the base shift value.
            </summary>
      <value>
            The base shift value.
            </value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.TypeToolStyleInfo.AutoKern">
      <summary>
            Gets or sets a value indicating whether auto kerning is on or off.
            </summary>
      <value>
        <c>true</c> if auto kerning is on; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.TypeToolStyleInfo.RotateDown">
      <summary>
            Gets or sets a value indicating whether it is a rotate down style.
            </summary>
      <value>
        <c>true</c> if it is a rotate down style; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="T:Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.UnknownResource">
      <summary>
            The unknown resource.
            </summary>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.UnknownResource.#ctor(System.Int32,System.Int32)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.UnknownResource" /> class.
            </summary>
      <param name="signature">The signature.</param>
      <param name="key">The resource key.</param>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.UnknownResource.Save(Aspose.Imaging.StreamContainer,System.Int32)">
      <summary>
            Saves the specified stream container.
            </summary>
      <param name="streamContainer">The stream container.</param>
      <param name="psdVersion">The PSD version.</param>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.UnknownResource.Data">
      <summary>
            Gets or sets the data.
            </summary>
      <value>
            The data.
            </value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.UnknownResource.Signature">
      <summary>
            Gets the layer resource signature.
            </summary>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.UnknownResource.Key">
      <summary>
            Gets the layer resource key.
            </summary>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.UnknownResource.Length">
      <summary>
            Gets the layer resource length in bytes.
            </summary>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.UnknownResource.PsdVersion">
      <summary>
            Gets the minimal psd version required for layer resource. 0 indicates no restrictions.
            </summary>
    </member>
    <member name="T:Aspose.Imaging.FileFormats.Tiff.Enums.TiffAlphaStorage">
      <summary>
            Specifies the alpha storage for tiff documents.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Tiff.Enums.TiffAlphaStorage.Unspecified">
      <summary>
            The alpha is not specified and stored in the tiff file.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Tiff.Enums.TiffAlphaStorage.Associated">
      <summary>
            The alpha value is stored in premultiplied form. When alpha is restored there may be some rounding effects and restored value may be different from the original.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Tiff.Enums.TiffAlphaStorage.Unassociated">
      <summary>
            The alpha value is stored in unassociated form. That means that alpha restored is exactly the same as it was stored to the tiff.
            </summary>
    </member>
    <member name="T:Aspose.Imaging.FileFormats.Tiff.InstanceFactory.ITiffTagCreator">
      <summary>
            The tiff tag creator.
            </summary>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Tiff.InstanceFactory.ITiffTagCreator.CreateInstance(System.UInt16)">
      <summary>
            Creates a new tag instance.
            </summary>
      <param name="tagId">The tag id.</param>
      <returns>
            The newly created instance.
            </returns>
    </member>
    <member name="T:Aspose.Imaging.FileFormats.Tiff.TiffTagTypes.TiffCommonArrayType">
      <summary>
            The tiff common array type.
            </summary>
    </member>
    <member name="T:Aspose.Imaging.FileFormats.Tiff.TiffDataType">
      <summary>
            The tiff data type.
            </summary>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Tiff.TiffDataType.#ctor(System.UInt16)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.FileFormats.Tiff.TiffDataType" /> class.
            </summary>
      <param name="tagId">The tag id.</param>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Tiff.TiffDataType.ReadTag(Aspose.Imaging.FileFormats.Tiff.FileManagement.TiffStream)">
      <summary>
            Reads the tag data.
            </summary>
      <param name="dataStream">The data stream</param>
      <returns>The read tag.</returns>
      <exception cref="T:System.ArgumentNullException">dataStream</exception>
      <exception cref="T:Aspose.Imaging.Exceptions.FrameworkException">Unable to read values for  + (TiffTags)tagId +  tag. Message :  + exception.Message</exception>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Tiff.TiffDataType.CompareTo(System.Object)">
      <summary>
            Compares the current instance with another object of the same type and returns an integer that indicates whether the current instance precedes, follows, or occurs in the same position in the sort order as the other object.
            </summary>
      <param name="obj">An object to compare with this instance.</param>
      <returns>
            A 32-bit signed integer that indicates the relative order of the objects being compared. The return value has these meanings:
            Value
            Meaning
            Less than zero
            This instance is less than <paramref name="obj" />.
            Zero
            This instance is equal to <paramref name="obj" />.
            Greater than zero
            This instance is greater than <paramref name="obj" />.
            </returns>
      <exception cref="T:Aspose.Imaging.Exceptions.ImageFormats.TiffImageException">Expected TiffDataType type.</exception>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Tiff.TiffDataType.DeepClone">
      <summary>
            Performs a deep clone of this instance.
            </summary>
      <returns>A deep clone of the current instance.</returns>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Tiff.TiffDataType.WriteTag(Aspose.Imaging.FileFormats.Tiff.FileManagement.TiffStream,System.UInt32)">
      <summary>
            Writes the tag data.
            </summary>
      <param name="dataStream">The data stream.</param>
      <param name="additionalDataOffset">The offset to write additional data to.</param>
      <exception cref="T:Aspose.Imaging.Exceptions.ImageSaveException">Unable to Write values for  + this.TagType +  Message :  + exception.Message</exception>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Tiff.TiffDataType.WriteAdditionalData(Aspose.Imaging.FileFormats.Tiff.FileManagement.TiffStream)">
      <summary>
            Writes the additional tag data.
            </summary>
      <param name="dataStream">The data stream.</param>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Tiff.TiffDataType.ToString">
      <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
      <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Tiff.TiffDataType.ReadData(Aspose.Imaging.FileFormats.Tiff.FileManagement.TiffStream,System.UInt32)">
      <summary>
            Reads the additional data.
            </summary>
      <param name="dataStream">The data stream.</param>
      <param name="count">The count of elements.</param>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Tiff.TiffDataType.WriteTagValueOrOffset(Aspose.Imaging.FileFormats.Tiff.FileManagement.TiffStream,System.UInt32)">
      <summary>
            Writes the tag value or additional offset.
            </summary>
      <param name="dataStream">The data stream.</param>
      <param name="additionalDataOffset">The additional data offset.</param>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Tiff.TiffDataType.CopyInstanceData(Aspose.Imaging.FileFormats.Tiff.TiffDataType)">
      <summary>
            Copies the instance data into the cloned type.
            </summary>
      <param name="clonedType">The cloned type.</param>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Tiff.TiffDataType.CreateInstance">
      <summary>
            Creates a new instance.
            </summary>
      <returns>A new <see cref="T:Aspose.Imaging.FileFormats.Tiff.TiffDataType" /> instance.</returns>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Tiff.TiffDataType.Count">
      <summary>
            Gets the count of elements.
            </summary>
      <value>
            The count of elements.
            </value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Tiff.TiffDataType.Id">
      <summary>
            Gets tag id integer representation.
            </summary>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Tiff.TiffDataType.TagId">
      <summary>
            Gets the tag id.
            </summary>
      <value>
            The tag id.
            </value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Tiff.TiffDataType.TagType">
      <summary>
            Gets the tag type.
            </summary>
      <value>
            The tag type.
            </value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Tiff.TiffDataType.DataSize">
      <summary>
            Gets the additional data size in bytes (in case the 12 bytes is not enough to fit the tag data).
            </summary>
      <value>
            The additional data size in bytes.
            </value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Tiff.TiffDataType.Value">
      <summary>
            Gets or sets the value this data type contains.
            </summary>
      <value>
            The value.
            </value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Tiff.TiffDataType.IsValid">
      <summary>
            Gets a value indicating whether tag data is valid. The valid tag contains data which may be preserved. The invalid tag cannot be stored.
            </summary>
      <value>
        <c>true</c> if tag data is valid; otherwise, <c>false</c>.
            </value>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Tiff.TiffTagTypes.TiffCommonArrayType.#ctor(System.UInt16)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.FileFormats.Tiff.TiffTagTypes.TiffCommonArrayType" /> class.
            </summary>
      <param name="tagId">The tag id.</param>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Tiff.TiffTagTypes.TiffCommonArrayType.WriteTagValueOrOffset(Aspose.Imaging.FileFormats.Tiff.FileManagement.TiffStream,System.UInt32)">
      <summary>
            Writes the tag value or additional offset.
            </summary>
      <param name="dataStream">The data stream.</param>
      <param name="additionalDataOffset">The additional data offset.</param>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Tiff.TiffTagTypes.TiffCommonArrayType.WriteTagValue(Aspose.Imaging.FileFormats.Tiff.FileManagement.TiffStream)">
      <summary>
            Writes the current tag value.
            </summary>
      <param name="dataStream">The data stream to write to.</param>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Tiff.TiffTagTypes.TiffCommonArrayType.ElementSize">
      <summary>
            Gets the element size in bytes.
            </summary>
      <value>
            The element size in bytes.
            </value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Tiff.TiffTagTypes.TiffCommonArrayType.ValuesContainer">
      <summary>
            Gets the values container.
            </summary>
      <value>
            The values container.
            </value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Tiff.TiffTagTypes.TiffCommonArrayType.Count">
      <summary>
            Gets the count of elements.
            </summary>
      <value>
            The count of elements.
            </value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Tiff.TiffTagTypes.TiffCommonArrayType.DataSize">
      <summary>
            Gets the additional data size in bytes (in case the 12 bytes is not enough to fit the tag data).
            </summary>
      <value>
            The additional data size in bytes.
            </value>
    </member>
    <member name="T:Aspose.Imaging.FileFormats.Tiff.TiffSRational">
      <summary>
            The tiff rational type.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Tiff.TiffSRational.Epsilon">
      <summary>
            The epsilon for fraction calculation
            </summary>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Tiff.TiffSRational.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.FileFormats.Tiff.TiffSRational" /> class.
            </summary>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Tiff.TiffSRational.#ctor(System.Int32)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.FileFormats.Tiff.TiffRational" /> class.
            </summary>
      <param name="value">The nominator value.</param>
      <remarks>The nominator will be used as the value specified and denominator will be equal 1.</remarks>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Tiff.TiffSRational.#ctor(System.Int32,System.Int32)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.FileFormats.Tiff.TiffSRational" /> class.
            </summary>
      <param name="nominator">The nominator.</param>
      <param name="denominator">The denominator.</param>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Tiff.TiffSRational.ApproximateFraction(System.Double,System.Double)">
      <summary>
            Approximates the provided value to a fraction.
            </summary>
      <param name="value">The value.</param>
      <param name="epsilon">The error allowed.</param>
      <returns>A rational number having error less than <paramref name="epsilon" />.</returns>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Tiff.TiffSRational.ApproximateFraction(System.Double)">
      <summary>
            Approximates the provided value to a fraction.
            </summary>
      <param name="value">The value.</param>
      <returns>
            A rational number having error less than <see cref="F:Aspose.Imaging.FileFormats.Tiff.TiffSRational.Epsilon" />.
            </returns>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Tiff.TiffSRational.ApproximateFraction(System.Single,System.Double)">
      <summary>
            Approximates the provided value to a fraction.
            </summary>
      <param name="value">The value.</param>
      <param name="epsilon">The error allowed.</param>
      <returns>A rational number having error less than <paramref name="epsilon" />.</returns>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Tiff.TiffSRational.ApproximateFraction(System.Single)">
      <summary>
            Approximates the provided value to a fraction.
            </summary>
      <param name="value">The value.</param>
      <returns>
            A rational number having error less than <see cref="F:Aspose.Imaging.FileFormats.Tiff.TiffSRational.Epsilon" />.
            </returns>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Tiff.TiffSRational.ToString">
      <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
      <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Tiff.TiffSRational.op_Equality(Aspose.Imaging.FileFormats.Tiff.TiffSRational,Aspose.Imaging.FileFormats.Tiff.TiffSRational)">
      <summary>
            Returns the comparison result of the two rational numbers.
            </summary>
      <param name="rational1">The first rational to compare.</param>
      <param name="rational2">The second rational to compare.</param>
      <returns>The comparison result.</returns>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Tiff.TiffSRational.op_Inequality(Aspose.Imaging.FileFormats.Tiff.TiffSRational,Aspose.Imaging.FileFormats.Tiff.TiffSRational)">
      <summary>
            Returns the negative comparison result of the two rational numbers.
            </summary>
      <param name="rational1">The first rational to compare.</param>
      <param name="rational2">The second rational to compare.</param>
      <returns>The negative comparison result.</returns>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Tiff.TiffSRational.Equals(System.Object)">
      <summary>
            Determines whether the specified <see cref="T:System.Object" /> is equal to this instance.
            </summary>
      <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
      <returns>
        <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Tiff.TiffSRational.GetHashCode">
      <summary>
            Returns a hash code for this instance.
            </summary>
      <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Tiff.TiffSRational.Denominator">
      <summary>
            Gets the denominator.
            </summary>
      <value>
            The denominator.
            </value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Tiff.TiffSRational.Nominator">
      <summary>
            Gets the nominator.
            </summary>
      <value>
            The nominator.
            </value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Tiff.TiffSRational.Value">
      <summary>
            Gets the float value.
            </summary>
      <value>
            The float value.
            </value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Tiff.TiffSRational.ValueD">
      <summary>
            Gets the double value.
            </summary>
      <value>
            The double value.
            </value>
    </member>
    <member name="T:Aspose.Imaging.FileFormats.Tiff.TiffTagTypes.TiffUnknownType">
      <summary>
            The unknown tiff type. In case the tiff tag cannot be recognized this type is instantinated.
            </summary>
      <remarks>Note the <see cref="T:Aspose.Imaging.FileFormats.Tiff.TiffTagTypes.TiffUnknownType" /> is not serialized back to stream.</remarks>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Tiff.TiffTagTypes.TiffUnknownType.#ctor(Aspose.Imaging.FileFormats.Tiff.FileManagement.TiffStream,System.UInt16,System.UInt16,System.UInt32,System.UInt32)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.FileFormats.Tiff.TiffTagTypes.TiffUnknownType" /> class.
            </summary>
      <param name="stream">The stream to read from.</param>
      <param name="tagType">Type of the tag.</param>
      <param name="tagId">The tag id.</param>
      <param name="count">The count value.</param>
      <param name="offsetOrValue">The offset or value.</param>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Tiff.TiffTagTypes.TiffUnknownType.WriteAdditionalData(Aspose.Imaging.FileFormats.Tiff.FileManagement.TiffStream)">
      <summary>
            Writes the additional tag data.
            </summary>
      <param name="dataStream">The data stream.</param>
      <exception cref="T:System.NotImplementedException">
      </exception>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Tiff.TiffTagTypes.TiffUnknownType.ToString">
      <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
      <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Tiff.TiffTagTypes.TiffUnknownType.Count">
      <summary>
            Gets the count of elements.
            </summary>
      <value>
            The count of elements.
            </value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Tiff.TiffTagTypes.TiffUnknownType.OffsetOrValue">
      <summary>
            Gets the offset value for an additional data or value itself in case count is 1.
            </summary>
      <value>
            The offset or value.
            </value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Tiff.TiffTagTypes.TiffUnknownType.Stream">
      <summary>
            Gets the stream to read additional data from.
            </summary>
      <value>
            The stream to read data from.
            </value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Tiff.TiffTagTypes.TiffUnknownType.TagType">
      <summary>
            Gets the tag type.
            </summary>
      <value>
            The tag type.
            </value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Tiff.TiffTagTypes.TiffUnknownType.DataSize">
      <summary>
            Gets the additional data size in bytes (in case the 12 bytes is not enough to fit the tag data).
            </summary>
      <value>
            The additional data size in bytes.
            </value>
      <exception cref="T:System.NotImplementedException">
      </exception>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Tiff.TiffTagTypes.TiffUnknownType.Value">
      <summary>
            Gets or sets the value this data type contains.
            </summary>
      <value>
            The value.
            </value>
      <exception cref="T:System.NotImplementedException">
      </exception>
    </member>
    <member name="T:Aspose.Imaging.FileFormats.Tiff.Enums.TiffByteOrder">
      <summary>
            The byte order for the tiff image
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Tiff.Enums.TiffByteOrder.BigEndian">
      <summary>
            The big endian byte order (Motorola).
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Tiff.Enums.TiffByteOrder.LittleEndian">
      <summary>
            The little endian byte order (Intel).
            </summary>
    </member>
    <member name="T:Aspose.Imaging.FileFormats.Tiff.TiffRational">
      <summary>
            The tiff rational type.
            </summary>
    </member>
    <member name="F:Aspose.Imaging.FileFormats.Tiff.TiffRational.Epsilon">
      <summary>
            The epsilon for fraction calculation
            </summary>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Tiff.TiffRational.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.FileFormats.Tiff.TiffRational" /> class.
            </summary>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Tiff.TiffRational.#ctor(System.UInt32)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.FileFormats.Tiff.TiffRational" /> class.
            </summary>
      <param name="value">The nominator value.</param>
      <remarks>The nominator will be used as the value specified and denominator will be equal 1.</remarks>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Tiff.TiffRational.#ctor(System.UInt32,System.UInt32)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.FileFormats.Tiff.TiffRational" /> class.
            </summary>
      <param name="nominator">The nominator.</param>
      <param name="denominator">The denominator.</param>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Tiff.TiffRational.ApproximateFraction(System.Double,System.Double)">
      <summary>
            Approximates the provided value to a fraction.
            </summary>
      <param name="value">The value.</param>
      <param name="epsilon">The error allowed.</param>
      <returns>A rational number having error less than <paramref name="epsilon" />.</returns>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Tiff.TiffRational.ApproximateFraction(System.Double)">
      <summary>
            Approximates the provided value to a fraction.
            </summary>
      <param name="value">The value.</param>
      <returns>
            A rational number having error less than <see cref="F:Aspose.Imaging.FileFormats.Tiff.TiffRational.Epsilon" />.
            </returns>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Tiff.TiffRational.ApproximateFraction(System.Single,System.Double)">
      <summary>
            Approximates the provided value to a fraction.
            </summary>
      <param name="value">The value.</param>
      <param name="epsilon">The error allowed.</param>
      <returns>A rational number having error less than <paramref name="epsilon" />.</returns>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Tiff.TiffRational.ApproximateFraction(System.Single)">
      <summary>
            Approximates the provided value to a fraction.
            </summary>
      <param name="value">The value.</param>
      <returns>
            A rational number having error less than <see cref="F:Aspose.Imaging.FileFormats.Tiff.TiffRational.Epsilon" />.
            </returns>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Tiff.TiffRational.ToString">
      <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
      <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Tiff.TiffRational.op_Equality(Aspose.Imaging.FileFormats.Tiff.TiffRational,Aspose.Imaging.FileFormats.Tiff.TiffRational)">
      <summary>
            Returns the comparison result of the two rational numbers.
            </summary>
      <param name="rational1">The first rational to compare.</param>
      <param name="rational2">The second rational to compare.</param>
      <returns>The comparison result.</returns>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Tiff.TiffRational.op_Inequality(Aspose.Imaging.FileFormats.Tiff.TiffRational,Aspose.Imaging.FileFormats.Tiff.TiffRational)">
      <summary>
            Returns the negative comparison result of the two rational numbers.
            </summary>
      <param name="rational1">The first rational to compare.</param>
      <param name="rational2">The second rational to compare.</param>
      <returns>The negative comparison result.</returns>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Tiff.TiffRational.Equals(System.Object)">
      <summary>
            Determines whether the specified <see cref="T:System.Object" /> is equal to this instance.
            </summary>
      <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
      <returns>
        <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Tiff.TiffRational.GetHashCode">
      <summary>
            Returns a hash code for this instance.
            </summary>
      <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Tiff.TiffRational.Denominator">
      <summary>
            Gets the denominator.
            </summary>
      <value>
            The denominator.
            </value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Tiff.TiffRational.Nominator">
      <summary>
            Gets the nominator.
            </summary>
      <value>
            The nominator.
            </value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Tiff.TiffRational.Value">
      <summary>
            Gets the float value.
            </summary>
      <value>
            The float value.
            </value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Tiff.TiffRational.ValueD">
      <summary>
            Gets the double value.
            </summary>
      <value>
            The double value.
            </value>
    </member>
    <member name="T:Aspose.Imaging.FileFormats.Tiff.TiffTagTypes.TiffASCIIType">
      <summary>
            The tiff ascii type.
            </summary>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Tiff.TiffTagTypes.TiffASCIIType.#ctor(Aspose.Imaging.FileFormats.Tiff.Enums.TiffTags)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.FileFormats.Tiff.TiffTagTypes.TiffASCIIType" /> class.
            </summary>
      <param name="tagId">The tag id.</param>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Tiff.TiffTagTypes.TiffASCIIType.#ctor(System.UInt16)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.FileFormats.Tiff.TiffTagTypes.TiffASCIIType" /> class.
            </summary>
      <param name="tagId">The tag id.</param>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Tiff.TiffTagTypes.TiffASCIIType.WriteAdditionalData(Aspose.Imaging.FileFormats.Tiff.FileManagement.TiffStream)">
      <summary>
            Writes the additional tag data.
            </summary>
      <param name="dataStream">The data stream.</param>
      <exception cref="T:System.ArgumentNullException">dataStream</exception>
      <exception cref="T:Aspose.Imaging.Exceptions.ImageFormats.TiffImageException">There is no addtional data to write.</exception>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Tiff.TiffTagTypes.TiffASCIIType.Text">
      <summary>
            Gets or sets the text.
            </summary>
      <value>
            The text.
            </value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Tiff.TiffTagTypes.TiffASCIIType.Count">
      <summary>
            Gets the count of elements.
            </summary>
      <value>
            The count of elements.
            </value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Tiff.TiffTagTypes.TiffASCIIType.TagType">
      <summary>
            Gets the tag type.
            </summary>
      <value>
            The tag type.
            </value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Tiff.TiffTagTypes.TiffASCIIType.DataSize">
      <summary>
            Gets the additional data size in bytes (in case the 12 bytes is not enough to fit the tag data).
            </summary>
      <value>
            The additional data size in bytes.
            </value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Tiff.TiffTagTypes.TiffASCIIType.Value">
      <summary>
            Gets or sets the value this data type contains.
            </summary>
      <value>
            The value.
            </value>
      <exception cref="T:System.ArgumentException">Only string is supported.</exception>
    </member>
    <member name="T:Aspose.Imaging.FileFormats.Tiff.TiffTagTypes.TiffByteType">
      <summary>
            The tiff byte type.
            </summary>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Tiff.TiffTagTypes.TiffByteType.#ctor(Aspose.Imaging.FileFormats.Tiff.Enums.TiffTags)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.FileFormats.Tiff.TiffTagTypes.TiffByteType" /> class.
            </summary>
      <param name="tagId">The tag id.</param>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Tiff.TiffTagTypes.TiffByteType.#ctor(System.UInt16)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.FileFormats.Tiff.TiffTagTypes.TiffByteType" /> class.
            </summary>
      <param name="tagId">The tag id.</param>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Tiff.TiffTagTypes.TiffByteType.WriteAdditionalData(Aspose.Imaging.FileFormats.Tiff.FileManagement.TiffStream)">
      <summary>
            Writes the additional tag data.
            </summary>
      <param name="dataStream">The data stream.</param>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Tiff.TiffTagTypes.TiffByteType.Values">
      <summary>
            Gets or sets the values.
            </summary>
      <value>
            The data.
            </value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Tiff.TiffTagTypes.TiffByteType.ValuesContainer">
      <summary>
            Gets the values container.
            </summary>
      <value>
            The values container.
            </value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Tiff.TiffTagTypes.TiffByteType.ElementSize">
      <summary>
            Gets the element size in bytes.
            </summary>
      <value>
            The element size in bytes.
            </value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Tiff.TiffTagTypes.TiffByteType.TagType">
      <summary>
            Gets the tag type.
            </summary>
      <value>
            The tag type.
            </value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Tiff.TiffTagTypes.TiffByteType.Value">
      <summary>
            Gets or sets the value this data type contains.
            </summary>
      <value>
            The value.
            </value>
      <exception cref="T:System.ArgumentException">Only byte array is supported.</exception>
    </member>
    <member name="T:Aspose.Imaging.FileFormats.Tiff.TiffTagTypes.TiffDoubleType">
      <summary>
            The tiff double type.
            </summary>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Tiff.TiffTagTypes.TiffDoubleType.#ctor(Aspose.Imaging.FileFormats.Tiff.Enums.TiffTags)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.FileFormats.Tiff.TiffTagTypes.TiffDoubleType" /> class.
            </summary>
      <param name="tagId">The tag id.</param>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Tiff.TiffTagTypes.TiffDoubleType.#ctor(System.UInt16)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.FileFormats.Tiff.TiffTagTypes.TiffDoubleType" /> class.
            </summary>
      <param name="tagId">The tag id.</param>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Tiff.TiffTagTypes.TiffDoubleType.WriteAdditionalData(Aspose.Imaging.FileFormats.Tiff.FileManagement.TiffStream)">
      <summary>
            Writes the additional tag data.
            </summary>
      <param name="dataStream">The data stream.</param>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Tiff.TiffTagTypes.TiffDoubleType.Values">
      <summary>
            Gets or sets the values.
            </summary>
      <value>
            The values.
            </value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Tiff.TiffTagTypes.TiffDoubleType.ValuesContainer">
      <summary>
            Gets the values container.
            </summary>
      <value>
            The values container.
            </value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Tiff.TiffTagTypes.TiffDoubleType.TagType">
      <summary>
            Gets the tag type.
            </summary>
      <value>
            The tag type.
            </value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Tiff.TiffTagTypes.TiffDoubleType.ElementSize">
      <summary>
            Gets the element size in bytes.
            </summary>
      <value>
            The element size in bytes.
            </value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Tiff.TiffTagTypes.TiffDoubleType.Value">
      <summary>
            Gets or sets the value this data type contains.
            </summary>
      <value>
            The value.
            </value>
      <exception cref="T:System.ArgumentException">Only double array is supported.</exception>
    </member>
    <member name="T:Aspose.Imaging.FileFormats.Tiff.TiffTagTypes.TiffFloatType">
      <summary>
            The tiff float type.
            </summary>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Tiff.TiffTagTypes.TiffFloatType.#ctor(Aspose.Imaging.FileFormats.Tiff.Enums.TiffTags)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.FileFormats.Tiff.TiffTagTypes.TiffFloatType" /> class.
            </summary>
      <param name="tagId">The tag id.</param>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Tiff.TiffTagTypes.TiffFloatType.#ctor(System.UInt16)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.FileFormats.Tiff.TiffTagTypes.TiffFloatType" /> class.
            </summary>
      <param name="tagId">The tag id.</param>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Tiff.TiffTagTypes.TiffFloatType.WriteAdditionalData(Aspose.Imaging.FileFormats.Tiff.FileManagement.TiffStream)">
      <summary>
            Writes the additional tag data.
            </summary>
      <param name="dataStream">The data stream.</param>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Tiff.TiffTagTypes.TiffFloatType.Values">
      <summary>
            Gets or sets the values.
            </summary>
      <value>
            The values.
            </value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Tiff.TiffTagTypes.TiffFloatType.ElementSize">
      <summary>
            Gets the element size in bytes.
            </summary>
      <value>
            The element size in bytes.
            </value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Tiff.TiffTagTypes.TiffFloatType.ValuesContainer">
      <summary>
            Gets the values container.
            </summary>
      <value>
            The values container.
            </value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Tiff.TiffTagTypes.TiffFloatType.TagType">
      <summary>
            Gets the tag type.
            </summary>
      <value>
            The tag type.
            </value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Tiff.TiffTagTypes.TiffFloatType.Value">
      <summary>
            Gets or sets the value this data type contains.
            </summary>
      <value>
            The value.
            </value>
      <exception cref="T:System.ArgumentException">Only float array is supported.</exception>
    </member>
    <member name="T:Aspose.Imaging.FileFormats.Tiff.TiffTagTypes.TiffLongType">
      <summary>
            The tiff long type.
            </summary>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Tiff.TiffTagTypes.TiffLongType.#ctor(Aspose.Imaging.FileFormats.Tiff.Enums.TiffTags)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.FileFormats.Tiff.TiffTagTypes.TiffLongType" /> class.
            </summary>
      <param name="tagId">The tag id.</param>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Tiff.TiffTagTypes.TiffLongType.#ctor(System.UInt16)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.FileFormats.Tiff.TiffTagTypes.TiffLongType" /> class.
            </summary>
      <param name="tagId">The tag id.</param>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Tiff.TiffTagTypes.TiffLongType.WriteAdditionalData(Aspose.Imaging.FileFormats.Tiff.FileManagement.TiffStream)">
      <summary>
            Writes the additional tag data.
            </summary>
      <param name="dataStream">The data stream.</param>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Tiff.TiffTagTypes.TiffLongType.Values">
      <summary>
            Gets or sets the values.
            </summary>
      <value>
            The values.
            </value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Tiff.TiffTagTypes.TiffLongType.ValuesContainer">
      <summary>
            Gets the values container.
            </summary>
      <value>
            The values container.
            </value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Tiff.TiffTagTypes.TiffLongType.ElementSize">
      <summary>
            Gets the element size in bytes.
            </summary>
      <value>
            The element size in bytes.
            </value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Tiff.TiffTagTypes.TiffLongType.TagType">
      <summary>
            Gets the tag type.
            </summary>
      <value>
            The tag type.
            </value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Tiff.TiffTagTypes.TiffLongType.Value">
      <summary>
            Gets or sets the value this data type contains.
            </summary>
      <value>
            The value.
            </value>
      <exception cref="T:System.ArgumentException">Only uint array is supported.</exception>
    </member>
    <member name="T:Aspose.Imaging.FileFormats.Tiff.TiffTagTypes.TiffRationalType">
      <summary>
            The tiff rational type.
            </summary>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Tiff.TiffTagTypes.TiffRationalType.#ctor(Aspose.Imaging.FileFormats.Tiff.Enums.TiffTags)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.FileFormats.Tiff.TiffTagTypes.TiffRationalType" /> class.
            </summary>
      <param name="tagId">The tag id.</param>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Tiff.TiffTagTypes.TiffRationalType.#ctor(System.UInt16)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.FileFormats.Tiff.TiffTagTypes.TiffRationalType" /> class.
            </summary>
      <param name="tagId">The tag id.</param>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Tiff.TiffTagTypes.TiffRationalType.WriteAdditionalData(Aspose.Imaging.FileFormats.Tiff.FileManagement.TiffStream)">
      <summary>
            Writes the additional tag data.
            </summary>
      <param name="dataStream">The data stream.</param>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Tiff.TiffTagTypes.TiffRationalType.Values">
      <summary>
            Gets or sets the values.
            </summary>
      <value>
            The values.
            </value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Tiff.TiffTagTypes.TiffRationalType.ValuesContainer">
      <summary>
            Gets the values container.
            </summary>
      <value>
            The values container.
            </value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Tiff.TiffTagTypes.TiffRationalType.ElementSize">
      <summary>
            Gets the element size in bytes.
            </summary>
      <value>
            The element size in bytes.
            </value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Tiff.TiffTagTypes.TiffRationalType.TagType">
      <summary>
            Gets the tag type.
            </summary>
      <value>
            The tag type.
            </value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Tiff.TiffTagTypes.TiffRationalType.Value">
      <summary>
            Gets or sets the value this data type contains.
            </summary>
      <value>
            The value.
            </value>
      <exception cref="T:System.ArgumentException">Only TiffRational array is supported.</exception>
    </member>
    <member name="T:Aspose.Imaging.FileFormats.Tiff.TiffTagTypes.TiffSByteType">
      <summary>
            The tiff signed byte type.
            </summary>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Tiff.TiffTagTypes.TiffSByteType.#ctor(Aspose.Imaging.FileFormats.Tiff.Enums.TiffTags)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.FileFormats.Tiff.TiffTagTypes.TiffSByteType" /> class.
            </summary>
      <param name="tagId">The tag id.</param>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Tiff.TiffTagTypes.TiffSByteType.#ctor(System.UInt16)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.FileFormats.Tiff.TiffTagTypes.TiffSByteType" /> class.
            </summary>
      <param name="tagId">The tag id.</param>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Tiff.TiffTagTypes.TiffSByteType.WriteAdditionalData(Aspose.Imaging.FileFormats.Tiff.FileManagement.TiffStream)">
      <summary>
            Writes the additional tag data.
            </summary>
      <param name="dataStream">The data stream.</param>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Tiff.TiffTagTypes.TiffSByteType.Values">
      <summary>
            Gets or sets the values.
            </summary>
      <value>
            The data.
            </value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Tiff.TiffTagTypes.TiffSByteType.ValuesContainer">
      <summary>
            Gets the values container.
            </summary>
      <value>
            The values container.
            </value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Tiff.TiffTagTypes.TiffSByteType.ElementSize">
      <summary>
            Gets the element size in bytes.
            </summary>
      <value>
            The element size in bytes.
            </value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Tiff.TiffTagTypes.TiffSByteType.TagType">
      <summary>
            Gets the tag type.
            </summary>
      <value>
            The tag type.
            </value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Tiff.TiffTagTypes.TiffSByteType.Value">
      <summary>
            Gets or sets the value this data type contains.
            </summary>
      <value>
            The value.
            </value>
      <exception cref="T:System.ArgumentException">Only signed byte array is supported.</exception>
    </member>
    <member name="T:Aspose.Imaging.FileFormats.Tiff.TiffTagTypes.TiffShortType">
      <summary>
            The tiff short type.
            </summary>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Tiff.TiffTagTypes.TiffShortType.#ctor(Aspose.Imaging.FileFormats.Tiff.Enums.TiffTags)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.FileFormats.Tiff.TiffTagTypes.TiffShortType" /> class.
            </summary>
      <param name="tagId">The tag id.</param>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Tiff.TiffTagTypes.TiffShortType.#ctor(System.UInt16)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.FileFormats.Tiff.TiffTagTypes.TiffShortType" /> class.
            </summary>
      <param name="tagId">The tag id.</param>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Tiff.TiffTagTypes.TiffShortType.WriteAdditionalData(Aspose.Imaging.FileFormats.Tiff.FileManagement.TiffStream)">
      <summary>
            Writes the additional tag data.
            </summary>
      <param name="dataStream">The data stream.</param>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Tiff.TiffTagTypes.TiffShortType.Values">
      <summary>
            Gets or sets the data.
            </summary>
      <value>
            The data.
            </value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Tiff.TiffTagTypes.TiffShortType.ElementSize">
      <summary>
            Gets the element size in bytes.
            </summary>
      <value>
            The element size in bytes.
            </value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Tiff.TiffTagTypes.TiffShortType.ValuesContainer">
      <summary>
            Gets the values container.
            </summary>
      <value>
            The values container.
            </value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Tiff.TiffTagTypes.TiffShortType.TagType">
      <summary>
            Gets the tag type.
            </summary>
      <value>
            The tag type.
            </value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Tiff.TiffTagTypes.TiffShortType.Value">
      <summary>
            Gets or sets the value this data type contains.
            </summary>
      <value>
            The value.
            </value>
      <exception cref="T:System.ArgumentException">Only ushort array is supported.</exception>
    </member>
    <member name="T:Aspose.Imaging.FileFormats.Tiff.TiffTagTypes.TiffSLongType">
      <summary>
            The tiff signed long type.
            </summary>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Tiff.TiffTagTypes.TiffSLongType.#ctor(Aspose.Imaging.FileFormats.Tiff.Enums.TiffTags)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.FileFormats.Tiff.TiffTagTypes.TiffSLongType" /> class.
            </summary>
      <param name="tagId">The tag id.</param>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Tiff.TiffTagTypes.TiffSLongType.#ctor(System.UInt16)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.FileFormats.Tiff.TiffTagTypes.TiffSLongType" /> class.
            </summary>
      <param name="tagId">The tag id.</param>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Tiff.TiffTagTypes.TiffSLongType.WriteAdditionalData(Aspose.Imaging.FileFormats.Tiff.FileManagement.TiffStream)">
      <summary>
            Writes the additional tag data.
            </summary>
      <param name="dataStream">The data stream.</param>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Tiff.TiffTagTypes.TiffSLongType.Values">
      <summary>
            Gets or sets the values.
            </summary>
      <value>
            The values.
            </value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Tiff.TiffTagTypes.TiffSLongType.ValuesContainer">
      <summary>
            Gets the values container.
            </summary>
      <value>
            The values container.
            </value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Tiff.TiffTagTypes.TiffSLongType.ElementSize">
      <summary>
            Gets the element size in bytes.
            </summary>
      <value>
            The element size in bytes.
            </value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Tiff.TiffTagTypes.TiffSLongType.TagType">
      <summary>
            Gets the tag type.
            </summary>
      <value>
            The tag type.
            </value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Tiff.TiffTagTypes.TiffSLongType.Value">
      <summary>
            Gets or sets the value this data type contains.
            </summary>
      <value>
            The value.
            </value>
      <exception cref="T:System.ArgumentException">Only signed integer array is supported.</exception>
    </member>
    <member name="T:Aspose.Imaging.FileFormats.Tiff.TiffTagTypes.TiffSRationalType">
      <summary>
            The tiff signed rational type.
            </summary>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Tiff.TiffTagTypes.TiffSRationalType.#ctor(Aspose.Imaging.FileFormats.Tiff.Enums.TiffTags)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.FileFormats.Tiff.TiffTagTypes.TiffSRationalType" /> class.
            </summary>
      <param name="tagId">The tag id.</param>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Tiff.TiffTagTypes.TiffSRationalType.#ctor(System.UInt16)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.FileFormats.Tiff.TiffTagTypes.TiffSRationalType" /> class.
            </summary>
      <param name="tagId">The tag id.</param>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Tiff.TiffTagTypes.TiffSRationalType.WriteAdditionalData(Aspose.Imaging.FileFormats.Tiff.FileManagement.TiffStream)">
      <summary>
            Writes the additional tag data.
            </summary>
      <param name="dataStream">The data stream.</param>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Tiff.TiffTagTypes.TiffSRationalType.Values">
      <summary>
            Gets or sets the values.
            </summary>
      <value>
            The values.
            </value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Tiff.TiffTagTypes.TiffSRationalType.ValuesContainer">
      <summary>
            Gets the values container.
            </summary>
      <value>
            The values container.
            </value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Tiff.TiffTagTypes.TiffSRationalType.ElementSize">
      <summary>
            Gets the element size in bytes.
            </summary>
      <value>
            The element size in bytes.
            </value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Tiff.TiffTagTypes.TiffSRationalType.TagType">
      <summary>
            Gets the tag type.
            </summary>
      <value>
            The tag type.
            </value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Tiff.TiffTagTypes.TiffSRationalType.Value">
      <summary>
            Gets or sets the value this data type contains.
            </summary>
      <value>
            The value.
            </value>
      <exception cref="T:System.ArgumentException">Only TiffSRational array is supported.</exception>
    </member>
    <member name="T:Aspose.Imaging.FileFormats.Tiff.TiffTagTypes.TiffSShortType">
      <summary>
            The tiff signed short type.
            </summary>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Tiff.TiffTagTypes.TiffSShortType.#ctor(Aspose.Imaging.FileFormats.Tiff.Enums.TiffTags)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.FileFormats.Tiff.TiffTagTypes.TiffSShortType" /> class.
            </summary>
      <param name="tagId">The tag id.</param>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Tiff.TiffTagTypes.TiffSShortType.#ctor(System.UInt16)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.FileFormats.Tiff.TiffTagTypes.TiffSShortType" /> class.
            </summary>
      <param name="tagId">The tag id.</param>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Tiff.TiffTagTypes.TiffSShortType.WriteAdditionalData(Aspose.Imaging.FileFormats.Tiff.FileManagement.TiffStream)">
      <summary>
            Writes the additional tag data.
            </summary>
      <param name="dataStream">The data stream.</param>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Tiff.TiffTagTypes.TiffSShortType.Values">
      <summary>
            Gets or sets the values.
            </summary>
      <value>
            The values.
            </value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Tiff.TiffTagTypes.TiffSShortType.ValuesContainer">
      <summary>
            Gets the values container.
            </summary>
      <value>
            The values container.
            </value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Tiff.TiffTagTypes.TiffSShortType.ElementSize">
      <summary>
            Gets the element size in bytes.
            </summary>
      <value>
            The element size in bytes.
            </value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Tiff.TiffTagTypes.TiffSShortType.TagType">
      <summary>
            Gets the tag type.
            </summary>
      <value>
            The tag type.
            </value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Tiff.TiffTagTypes.TiffSShortType.Value">
      <summary>
            Gets or sets the value this data type contains.
            </summary>
      <value>
            The value.
            </value>
      <exception cref="T:System.ArgumentException">Only signed short array is supported.</exception>
    </member>
    <member name="T:Aspose.Imaging.FileFormats.Tiff.TiffTagTypes.TiffUndefinedType">
      <summary>
            The tiff undefined type.
            </summary>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Tiff.TiffTagTypes.TiffUndefinedType.#ctor(Aspose.Imaging.FileFormats.Tiff.Enums.TiffTags)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.FileFormats.Tiff.TiffTagTypes.TiffUndefinedType" /> class.
            </summary>
      <param name="tagId">The tag id.</param>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Tiff.TiffTagTypes.TiffUndefinedType.#ctor(System.UInt16)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Imaging.FileFormats.Tiff.TiffTagTypes.TiffUndefinedType" /> class.
            </summary>
      <param name="tagId">The tag id.</param>
    </member>
    <member name="M:Aspose.Imaging.FileFormats.Tiff.TiffTagTypes.TiffUndefinedType.WriteAdditionalData(Aspose.Imaging.FileFormats.Tiff.FileManagement.TiffStream)">
      <summary>
            Writes the additional tag data.
            </summary>
      <param name="dataStream">The data stream.</param>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Tiff.TiffTagTypes.TiffUndefinedType.Data">
      <summary>
            Gets or sets the data.
            </summary>
      <value>
            The data.
            </value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Tiff.TiffTagTypes.TiffUndefinedType.Count">
      <summary>
            Gets the count of elements.
            </summary>
      <value>
            The count of elements.
            </value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Tiff.TiffTagTypes.TiffUndefinedType.TagType">
      <summary>
            Gets the tag type.
            </summary>
      <value>
            The tag type.
            </value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Tiff.TiffTagTypes.TiffUndefinedType.DataSize">
      <summary>
            Gets the additional data size in bytes (in case the 12 bytes is not enough to fit the tag data).
            </summary>
      <value>
            The additional data size in bytes.
            </value>
    </member>
    <member name="P:Aspose.Imaging.FileFormats.Tiff.TiffTagTypes.TiffUndefinedType.Value">
      <summary>
            Gets or sets the value this data type contains.
            </summary>
      <value>
            The value.
            </value>
      <exception cref="T:System.ArgumentException">Only byte array is supported.</exception>
    </member>
    <member name="T:Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.NamespaceDoc">
      <summary>
            The namespace contains PSD file format entities contained in layers.
            </summary>
    </member>
    <member name="T:Aspose.Imaging.FileFormats.Psd.Layers.LayerResources.TypeToolInfoStructures.NamespaceDoc">
      <summary>
            The namespace contains PSD file format type tool resource entities.
            </summary>
    </member>
    <member name="T:Aspose.Imaging.FileFormats.Psd.Layers.NamespaceDoc">
      <summary>
            The namespace contains PSD file format layers.
            </summary>
    </member>
    <member name="T:Aspose.Imaging.FileFormats.Psd.NamespaceDoc">
      <summary>
            The namespace handles Psd file format processing.
            </summary>
    </member>
    <member name="T:Aspose.Imaging.FileFormats.Psd.Resources.NamespaceDoc">
      <summary>
            The namespace contains PSD file format resource entities.
            </summary>
    </member>
  </members>
</doc>